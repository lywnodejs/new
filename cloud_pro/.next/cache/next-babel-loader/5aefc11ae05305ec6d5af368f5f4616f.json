{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextId from 'react-id-generator';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Sider from './Sider';\nimport { useContext, useState } from 'react';\nimport { Context } from '~/pages/_app';\nimport Header from './Header';\nimport styles from './Layout.less';\nimport NextNProgress from '../NextNProgress';\nvar TabPane = _Tabs.TabPane;\nvar Content = _Layout.Content;\nexport var TabContext = React.createContext();\nvar newTabIndex = 1;\n\nvar useTabs = function useTabs(children) {\n  var _useState = useState(0),\n      activeKey = _useState[0],\n      setActiveKey = _useState[1];\n\n  var _useState2 = useState([{\n    title: 'main',\n    content: children,\n    key: 0\n  }]),\n      panes = _useState2[0],\n      setPanes = _useState2[1];\n\n  useEffect(function () {\n    setPanes([{\n      title: 'main',\n      content: children,\n      key: 0\n    }]);\n    setActiveKey(0);\n  }, [children]);\n  var actions = {\n    push: function push(content) {\n      var key = newTabIndex++;\n      setPanes([].concat(_toConsumableArray(panes), [{\n        title: 'child',\n        content: content,\n        key: key\n      }]));\n      setActiveKey(key);\n    },\n    pop: function pop() {\n      if (panes.length === 1) return;\n      setPanes(_toConsumableArray(panes.slice(0, panes.length - 1)));\n      setActiveKey(panes[0].key);\n    }\n  };\n  return [panes, activeKey, actions];\n};\n\nexport var CommonLayout = function CommonLayout(props) {\n  var breadcrumbs = props.breadcrumbs;\n\n  var _useState3 = useState(false),\n      collapsed = _useState3[0],\n      setCollapsed = _useState3[1];\n\n  var _useTabs = useTabs(props.children),\n      _useTabs2 = _slicedToArray(_useTabs, 3),\n      panes = _useTabs2[0],\n      activeKey = _useTabs2[1],\n      actions = _useTabs2[2];\n\n  var onCollapseChange = function onCollapseChange(collapsed) {\n    setCollapsed(collapsed);\n  };\n\n  return __jsx(_Layout, {\n    style: {\n      background: '#FFFFFF'\n    }\n  }, __jsx(NextNProgress, null), __jsx(Header, {\n    fixed: true\n    /* collapsed={collapsed} */\n    ,\n    onCollapseChange: onCollapseChange\n  }), __jsx(_Layout, null, __jsx(Sider, {\n    collapsed: collapsed\n  }), __jsx(\"div\", {\n    className: styles.wrap\n  }, __jsx(TabContext.Provider, {\n    value: actions\n  }, __jsx(_Tabs, {\n    renderTabBar: function renderTabBar() {\n      return __jsx(\"div\", null);\n    },\n    activeKey: activeKey + ''\n  }, panes.map(function (pane) {\n    return __jsx(TabPane, {\n      tab: pane.title,\n      key: pane.key\n    }, __jsx(\"div\", {\n      className: styles.container,\n      id: \"primaryLayout\"\n    }, React.cloneElement(pane.content, _objectSpread({\n      activeKey: activeKey,\n      isFocus: activeKey === 0\n    }, actions))));\n  }))))));\n};\n\nvar body = function body(props) {\n  var breadcrumbs = props.breadcrumbs,\n      extra = props.extra,\n      _props$hideTitle = props.hideTitle,\n      hideTitle = _props$hideTitle === void 0 ? false : _props$hideTitle;\n  var router = useRouter();\n\n  var onBack = function onBack() {\n    router.back();\n  };\n\n  return __jsx(Content, {\n    style: props.style,\n    className: styles.content\n  }, breadcrumbs && __jsx(_Breadcrumb, {\n    style: {\n      marginBottom: '17px'\n    }\n  }, breadcrumbs.map(function (breadcrumb, index) {\n    return __jsx(_Breadcrumb.Item, {\n      key: index\n    }, breadcrumb.path ? __jsx(Link, {\n      href: {\n        pathname: breadcrumb.path\n      }\n    }, __jsx(\"a\", {\n      style: {\n        color: '#333'\n      }\n    }, breadcrumb.text)) : breadcrumb.text);\n  })), __jsx(\"div\", {\n    className: styles.titleBar\n  }, __jsx(\"h1\", null, Array.isArray(breadcrumbs) && !hideTitle && breadcrumbs[breadcrumbs.length - 1].text), extra ? extra : Array.isArray(breadcrumbs) && breadcrumbs.length >= 3 && breadcrumbs[breadcrumbs.length - 2].path && __jsx(_Button, {\n    onClick: onBack\n  }, \"\\u8FD4\\u56DE\\u4E0A\\u4E00\\u9875\")), props.children);\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}