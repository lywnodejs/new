{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\n\nconst TableList = ({\n  data,\n  collectionProducts,\n  pageParams,\n  changeList,\n  selectedRowKeys,\n  setSelectedRowKeys,\n  onEditMemo\n}) => {\n  const rowSelection = {\n    selectedRowKeys,\n    fixed: 'left',\n    onChange: v => {\n      setSelectedRowKeys(v);\n    }\n  };\n\n  const checkRecord = record => {\n    let url = `/collection/reminded/form?tag=collectionRecord&id=${record.id}`;\n    Router.push(url);\n  };\n\n  const checkOrder = record => {\n    let url = `/collection/reminded/form?id=${record.id}`;\n    Router.push(url);\n  };\n\n  const checkDetail = record => {\n    // let url = `/collection/reminded/detail?id=${record.loanApplyId}`\n    let url = `/accounting/iou/detail?orderNum=${record.xdyOrderNum}`;\n    Router.push(url);\n  };\n\n  const columns = [{\n    title: '借据号',\n    dataIndex: 'xdyOrderNum',\n    key: 'xdyOrderNum',\n    width: 150,\n    fixed: 'left'\n  }, {\n    title: '用户名',\n    dataIndex: 'name',\n    key: 'name',\n    width: 150\n  }, {\n    title: '手机号',\n    dataIndex: 'mobilePhone',\n    key: 'mobilePhone',\n    width: 150\n  }, {\n    title: '产品名称',\n    dataIndex: 'productId',\n    key: 'productId',\n    width: 150,\n    render: (text, record, index) => {\n      let findOne = collectionProducts.find(one => one.code == text);\n      return findOne ? findOne.description : '';\n    }\n  }, {\n    title: '放款日期',\n    dataIndex: 'grantTime',\n    key: 'grantTime',\n    width: 150,\n    sorter: true\n  }, {\n    title: '已逾期总本金',\n    dataIndex: 'planCapitalAmount',\n    key: 'planCapitalAmount',\n    width: 150,\n    sorter: true\n  }, {\n    title: '应还本息',\n    dataIndex: 'planCapitalPenaltyAmount',\n    key: 'planCapitalPenaltyAmount',\n    width: 150,\n    sorter: true\n  }, {\n    title: '罚息',\n    dataIndex: 'planPenaltyAmount',\n    key: 'planPenaltyAmount',\n    width: 150\n  }, {\n    title: '应还总额',\n    dataIndex: 'planTotalAmount',\n    key: 'planTotalAmount',\n    width: 150,\n    sorter: true\n  }, {\n    title: '挂账金额',\n    dataIndex: 'realOfflineRepayAmount',\n    key: 'realOfflineRepayAmount',\n    width: 150,\n    sorter: true\n  }, {\n    title: '联系日期',\n    dataIndex: 'lastCollectionTime',\n    key: 'lastCollectionTime',\n    width: 150,\n    sorter: true\n  }, {\n    title: '承若还款日期',\n    dataIndex: 'promiseRepayTime',\n    key: 'promiseRepayTime',\n    width: 150,\n    sorter: true\n  }, {\n    title: '逾期天数',\n    dataIndex: 'overdueDays',\n    key: 'overdueDays',\n    width: 150,\n    sorter: true\n  }, {\n    title: '催收员',\n    dataIndex: 'accountName',\n    key: 'accountName',\n    width: 150\n  }, {\n    title: '备注',\n    dataIndex: 'remark',\n    key: 'remark',\n    width: 150\n  }, {\n    title: '催记信息',\n    dataIndex: 'collectionTimes',\n    key: 'collectionTimes',\n    width: 150 // render: (text, record, index) => {\n    //   return text ? (\n    //     <Button type=\"link\" onClick={() => checkRecord(record)}>\n    //       {text}\n    //     </Button>\n    //   ) : null\n    // },\n\n  }, {\n    title: '操作',\n    dataIndex: 'cz',\n    key: 'cz',\n    width: 150,\n    fixed: 'right',\n    render: (text, record, index) => {\n      return __jsx(React.Fragment, null, __jsx(_Button, {\n        type: \"link\",\n        onClick: () => checkDetail(record)\n      }, \"\\u501F\\u6B3E\\u8BE6\\u60C5\"), __jsx(_Button, {\n        type: \"link\",\n        onClick: () => checkOrder(record)\n      }, \"\\u67E5\\u770B\\u8BA2\\u5355\"), __jsx(_Button, {\n        type: \"link\",\n        onClick: () => onEditMemo(record)\n      }, \"\\u5907\\u6CE8\"));\n    }\n  }];\n\n  const onChange = (pagination, filters, sorter, extra) => {\n    let orderBys = sorter.field ? {\n      f: sorter.field,\n      s: sorter.order === 'ascend' ? 'asc' : 'desc'\n    } : null;\n    pageParams.page = extra.action === 'sort' ? 1 : pagination.current;\n    pageParams.pageSize = pagination.pageSize;\n    changeList(pageParams, orderBys);\n  };\n\n  const paginationConfig = {\n    total: data.total,\n    current: pageParams.page,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: total => `共 ${total} 条`\n  };\n  return __jsx(_Table, {\n    rowKey: \"id\",\n    dataSource: data.list,\n    columns: columns,\n    bordered: true,\n    pagination: paginationConfig,\n    rowSelection: rowSelection,\n    scroll: {\n      y: '100%',\n      x: '100%'\n    },\n    onChange: onChange\n  });\n};\n\nexport default TableList;","map":null,"metadata":{},"sourceType":"module"}