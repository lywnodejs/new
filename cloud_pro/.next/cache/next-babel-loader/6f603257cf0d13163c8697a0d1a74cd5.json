{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport TableList from './TableList';\nimport TableTitle from './TableTitle';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useCookies } from 'react-cookie';\nimport { useEffect, useState } from 'react';\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart, ResponsiveContainer, Bar, Area, PieChart, Pie, BarChart, Cell, LineChart } from 'recharts';\nimport { formatMoney, computeUnit } from '~/utils';\nimport api from '~/api/authority';\nimport apiProduct from '~/api/product';\nvar COLORS = ['#1890ff', '#5cc35c', '#fadb14', '#f5222d', '#fa8c16', '#faad14', '#a0d911', '#13c2c2', '#722ed1', '#eb2f96', '#bfbfbf', '#2f54eb'];\nvar data02 = [{\n  name: '家乡贷',\n  value: 400\n}, {\n  name: '随心贷',\n  value: 300\n}, {\n  name: '玉乐贷',\n  value: 300\n}, {\n  name: '众乐贷',\n  value: 200\n}, {\n  name: '公信贷',\n  value: 278\n}];\nvar data = [{\n  name: '1月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '2月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '3月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '4月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '5月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '6月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '7月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}];\nvar data1 = [{\n  name: 'Group A',\n  value: 400\n}, {\n  name: 'Group B',\n  value: 300\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}]; // const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nvar RADIAN = Math.PI / 180;\n\nvar renderCustomizedLabel = function renderCustomizedLabel(_ref) {\n  var cx = _ref.cx,\n      cy = _ref.cy,\n      midAngle = _ref.midAngle,\n      innerRadius = _ref.innerRadius,\n      outerRadius = _ref.outerRadius,\n      percent = _ref.percent,\n      index = _ref.index;\n  var radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  var x = cx + radius * Math.cos(-midAngle * RADIAN);\n  var y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return __jsx(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\"\n  }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n};\n\nfunction body(props) {\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState([]),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useCookies = useCookies(['tenantId']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _useState3 = useState([]),\n      topIndexDatas = _useState3[0],\n      setTopIndexDatas = _useState3[1];\n\n  var _useState4 = useState([]),\n      timingDatas = _useState4[0],\n      setTimingDatas = _useState4[1];\n\n  var _useState5 = useState([]),\n      listCoreIndexYear = _useState5[0],\n      setListCoreIndexYear = _useState5[1];\n\n  var _useState6 = useState([]),\n      dayAddLoanAmountList = _useState6[0],\n      setDayAddLoanAmountList = _useState6[1];\n\n  var _useState7 = useState([]),\n      dayAddLoanBalanceAmountList = _useState7[0],\n      setDayAddLoanBalanceAmountList = _useState7[1];\n\n  var _useState8 = useState([]),\n      dayAddInterestAmountList = _useState8[0],\n      setDayAddInterestAmountList = _useState8[1];\n\n  var _useState9 = useState([]),\n      dayAddBadLoanAmountList = _useState9[0],\n      setDayAddBadLoanAmountList = _useState9[1];\n\n  var _useState10 = useState([]),\n      dayAddLoanUserList = _useState10[0],\n      setDayAddLoanUserList = _useState10[1];\n\n  var _useState11 = useState([]),\n      dayAddCumulative = _useState11[0],\n      setCumulative = _useState11[1];\n\n  var _useState12 = useState([]),\n      coreIndexYears = _useState12[0],\n      setCoreIndexYears = _useState12[1];\n\n  var _useState13 = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {\n      amount: 0,\n      count: 0,\n      peopleNumber: 0\n    },\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null\n  }),\n      coreIndex = _useState13[0],\n      setCoreIndex = _useState13[1];\n\n  var _useState14 = useState({}),\n      coreIndexBadLoan = _useState14[0],\n      setCoreIndexBadLoan = _useState14[1];\n\n  var _useState15 = useState([]),\n      coreIndexBadLoanAmount = _useState15[0],\n      setCoreIndexBadLoanAmount = _useState15[1];\n\n  var _useState16 = useState({}),\n      coreIndexOverdue = _useState16[0],\n      setCoreIndexOverdue = _useState16[1];\n\n  var _useState17 = useState([]),\n      coreIndexOverdueAmount = _useState17[0],\n      setCoreIndexOverdueAmount = _useState17[1];\n\n  var _useState18 = useState([]),\n      productList = _useState18[0],\n      setProductList = _useState18[1];\n\n  var _useState19 = useState('-1'),\n      productId = _useState19[0],\n      setProductId = _useState19[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$apiProduct$get, _yield$apiProduct$get2, _data, code;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return apiProduct.get_products({\n                  tenantId: cookies.tenantId\n                });\n\n              case 3:\n                _yield$apiProduct$get = _context.sent;\n                _yield$apiProduct$get2 = _yield$apiProduct$get.data;\n                _data = _yield$apiProduct$get2.data;\n                code = _yield$apiProduct$get2.code;\n\n                if (code == 0) {\n                  setProductList(_data);\n                  _data && _data.length && setProductId(String(_data[0].id));\n                  fetchIndex(_data[0].id);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    var dayAddLoanAmount = coreIndex.dayAddLoanAmount,\n        dayAddLoanBalanceAmount = coreIndex.dayAddLoanBalanceAmount,\n        dayAddInterestAmount = coreIndex.dayAddInterestAmount,\n        dayAddBadLoanAmount = coreIndex.dayAddBadLoanAmount,\n        dayAddLoanUser = coreIndex.dayAddLoanUser,\n        historyLoanAmount = coreIndex.historyLoanAmount,\n        historyLoanBalanceAmount = coreIndex.historyLoanBalanceAmount,\n        historyLoanNum = coreIndex.historyLoanNum,\n        historyLoanUser = coreIndex.historyLoanUser,\n        historyInterestAmount = coreIndex.historyInterestAmount,\n        listCoreIndexYear = coreIndex.listCoreIndexYear,\n        dayAddLoanAmountList = coreIndex.dayAddLoanAmountList,\n        dayAddLoanBalanceAmountList = coreIndex.dayAddLoanBalanceAmountList,\n        dayAddInterestAmountList = coreIndex.dayAddInterestAmountList,\n        dayAddBadLoanAmountList = coreIndex.dayAddBadLoanAmountList,\n        dayAddLoanUserList = coreIndex.dayAddLoanUserList,\n        yearBadLoanAmount = coreIndex.yearBadLoanAmount,\n        yearInterestAmount = coreIndex.yearInterestAmount,\n        yearProfit = coreIndex.yearProfit,\n        coreIndexNowBadLoan = coreIndex.coreIndexNowBadLoan,\n        coreIndexNowOverdue = coreIndex.coreIndexNowOverdue;\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {\n      rate: 0\n    };\n    coreIndexNowOverdue = coreIndexNowOverdue || {\n      rate: 0\n    };\n    setCoreIndexBadLoan(coreIndexNowBadLoan);\n    setCoreIndexOverdue(coreIndexNowOverdue);\n    setListCoreIndexYear(listCoreIndexYear);\n    setDayAddLoanAmountList(dayAddLoanAmountList);\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList);\n    setDayAddInterestAmountList(dayAddInterestAmountList);\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList);\n    setDayAddLoanUserList(dayAddLoanUserList);\n    setCoreIndexBadLoanAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowBadLoan.amount || 0,\n      tips: '不良订单的剩余贷款余额（本金部分）'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowBadLoan.count || 0,\n      tips: '订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowBadLoan.peopleNumber || 0,\n      tips: '用户的人数'\n    }]);\n    setCoreIndexOverdueAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowOverdue.amount || 0,\n      tips: '逾期订单的逾期期数本金之和'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowOverdue.count || 0,\n      tips: '逾期订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowOverdue.peopleNumber || 0,\n      tips: '用户的人数'\n    }]); // setTopIndexDatas([\n    //   {\n    //     title: '当日新增(放款金额)',\n    //     tips: '当日放款金额的累计',\n    //     unit: '元',\n    //     value: dayAddLoanAmount,\n    //   },\n    //   {\n    //     title: '当日净增 (贷款余额)',\n    //     tips: '当日放款金额-当日还款金额',\n    //     unit: '元',\n    //     value: dayAddLoanBalanceAmount,\n    //   },\n    //   {\n    //     title: '当日实收利息',\n    //     tips: '当日结息金额',\n    //     unit: '元',\n    //     value: dayAddInterestAmount,\n    //   },\n    //   {\n    //     title: '当日新增(60+不良本金)',\n    //     tips: '当日新增的不良（逾期60+）本金',\n    //     unit: '元',\n    //     value: dayAddBadLoanAmount,\n    //   },\n    //   {\n    //     title: '当日新增（放款用户）',\n    //     tips: '当日放款用户数的累计',\n    //     unit: '人',\n    //     value: dayAddLoanUser,\n    //   },\n    // ])\n\n    setTimingDatas([// {\n    //   title: '累放金额',\n    //   tips: '历史放款本金金额累计',\n    //   unit: '元',\n    //   value: historyLoanAmount,\n    // },\n    // {\n    //   title: '贷款余额',\n    //   tips: '所有在途订单(含逾期)的剩余待还本金之和',\n    //   unit: '元',\n    //   value: historyLoanBalanceAmount,\n    // },\n    // {\n    //   title: '累放笔数',\n    //   tips: '历史所有用户放款笔数',\n    //   unit: '笔',\n    //   value: historyLoanNum,\n    // },\n    // {\n    //   title: '累放用户数',\n    //   tips: '历史放款用户数',\n    //   unit: '人',\n    //   value: historyLoanUser,\n    // },\n    // {\n    //   title: '实收息费（包含利息罚息）',\n    //   tips: '利息+罚息',\n    //   unit: '元',\n    //   value: historyInterestAmount,\n    // },\n    {\n      title: '申请笔数',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '授信笔数',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '授信金额',\n      unit: '元',\n      value: ''\n    }, {\n      title: '用信金额',\n      unit: '元',\n      value: ''\n    }, {\n      title: '用信余额',\n      unit: '元',\n      value: ''\n    }]);\n    setCumulative([{\n      title: '家乡贷申请笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '家乡贷授信笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '家乡贷信用笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '家乡贷用信余额',\n      tips: '',\n      unit: '元',\n      value: ''\n    }, {\n      title: '随心贷申请笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '随心贷授信笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '随心贷用信笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '随心贷用信余额',\n      tips: '',\n      unit: '元',\n      value: ''\n    }]);\n    setCoreIndexYears([{\n      title: '年度利润率（未剔除获客成本）',\n      tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n      unit: '',\n      value: yearProfit\n    }, {\n      title: '年度实收利息',\n      tips: '当前年内的结息之和',\n      unit: '元',\n      value: yearInterestAmount\n    }, {\n      title: '年度净不良本金（60+）',\n      tips: '当前年内的不良本金之和',\n      unit: '元',\n      value: yearBadLoanAmount\n    }]);\n  }, [coreIndex]);\n\n  var fetchIndex = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var _yield$api$get_core_i, _yield$api$get_core_i2, _data2, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return api.get_core_index({\n                productId: id\n              });\n\n            case 3:\n              _yield$api$get_core_i = _context2.sent;\n              _yield$api$get_core_i2 = _yield$api$get_core_i.data;\n              _data2 = _yield$api$get_core_i2.data;\n              code = _yield$api$get_core_i2.code;\n\n              if (code == 0 && _data2) {\n                setCoreIndex(_data2);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function fetchIndex(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var toWan = function toWan(decimal) {\n    var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return \"\".concat((decimal / 10000).toFixed(fixed), \"\\u4E07\");\n  };\n\n  var toBaiFen = function toBaiFen(decimal) {\n    var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return \"\".concat(decimal, \"%\");\n  };\n\n  var changeProduct = function changeProduct(val) {\n    setProductId(val);\n    fetchIndex(val);\n  };\n\n  return __jsx(Layout, {\n    isGray: true\n  }, __jsx(_Card, {\n    title: \"\\u5F53\\u65E5\\u7D2F\\u8BA1\\u4EA4\\u6613\\u60C5\\u51B5\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, {\n    gutter: [30, 0]\n  }, timingDatas.length ? timingDatas.map(function (item, i) {\n    return __jsx(_Col, {\n      span: 4.6,\n      key: i\n    }, __jsx(_Card, {\n      bordered: false\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858',\n        height: '22px'\n      }\n    }, computeUnit(item.value))));\n  }) : null)), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '50px',\n      marginTop: '20px',\n      background: '#FFFFFF',\n      padding: '15px 20px',\n      fontSize: '16px'\n    }\n  }, \"\\u4E0A\\u4E00\\u65E5\\u6C47\\u603B\\u6570\\u636E\"), __jsx(_Row, null, __jsx(_Col, {\n    span: 12\n  }, __jsx(_Card, {\n    title: \"\\u4E0A\\u4E00\\u65E5\\u6388\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '99%',\n      marginTop: '10px'\n    }\n  }, __jsx(PieChart, {\n    width: 430,\n    height: 300\n  }, __jsx(Pie, {\n    data: data02,\n    cx: \"50%\",\n    cy: \"40%\",\n    outerRadius: 100,\n    nameKey: \"name\",\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    label: true\n  }, data02.map(function (entry, index) {\n    return __jsx(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length]\n    });\n  })), __jsx(Tooltip, null), __jsx(Legend, null)))), __jsx(_Col, {\n    span: 12\n  }, __jsx(_Card, {\n    title: \"\\u4E0A\\u4E00\\u65E5\\u7528\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '99%',\n      marginTop: '10px'\n    }\n  }, __jsx(BarChart, {\n    width: 450,\n    height: 300,\n    data: data02\n  }, __jsx(XAxis, {\n    type: \"number\"\n  }), __jsx(YAxis, {\n    dataKey: \"name\",\n    type: \"value\",\n    scale: \"band\"\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Bar, {\n    dataKey: \"\\u5BB6\\u4E61\\u8D37\",\n    fill: \"#8884d8\",\n    style: {\n      bottom: '-15px'\n    }\n  }), __jsx(Bar, {\n    dataKey: \"\\u968F\\u5FC3\\u8D37\",\n    fill: \"#82ca9d\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u7389\\u4E50\\u8D37\",\n    fill: \"#8884d8\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u4F17\\u4E50\\u8D37\",\n    fill: \"#82ca9d\"\n  }))))), __jsx(TableList, {\n    list: list,\n    setList: setList\n  }), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '50px',\n      marginTop: '20px',\n      background: '#FFFFFF',\n      padding: '15px 20px',\n      fontSize: '16px'\n    }\n  }, \"\\u5386\\u53F2\\u6570\\u636E\\u6C47\\u603B\"), __jsx(_Card, {\n    title: \"\\u5386\\u53F2\\u7D2F\\u8BA1\\u4FE1\\u7528\\u4F59\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(ComposedChart, {\n    width: 980,\n    height: 240,\n    data: dayAddLoanAmountList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toWan\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#1890ff\",\n    name: \"\\u7533\\u8BF7\\u7B14\\u6570\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#5cc35c\",\n    name: \"\\u6388\\u4FE1\\u7B14\\u6570\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#6EC3C9\",\n    name: \"\\u6388\\u4FE1\\u91D1\\u989D\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#67BF7F\",\n    name: \"\\u7528\\u4FE1\\u7B14\\u6570 \"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#A2007C\",\n    name: \" \\u7528\\u4FE1\\u91D1\\u989D \"\n  }))), __jsx(_Card, {\n    title: \"\\u5386\\u53F2\\u7D2F\\u8BA1\\u6388\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(BarChart, {\n    width: 980,\n    height: 300,\n    data: data\n  }, __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(XAxis, {\n    dataKey: \"name\"\n  }), __jsx(YAxis, null), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(Bar, {\n    dataKey: \"\\u5BB6\\u4E61\\u8D37\",\n    fill: \"#5072CB\",\n    style: {\n      bottom: '-10px'\n    }\n  }), __jsx(Bar, {\n    dataKey: \"\\u968F\\u5FC3\\u8D37\",\n    fill: \"#8DD06F\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u7389\\u4E50\\u8D37\",\n    fill: \"#F8C558\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u4F17\\u4E50\\u8D37\",\n    fill: \"#F26665\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u516C\\u4FE1\\u8D37\",\n    fill: \"#74BFDE\"\n  }))), __jsx(_Card, {\n    title: \"\\u5386\\u53F2\\u7D2F\\u8BA1\\u7528\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '20px'\n    }\n  }, \"\\u7D2F\\u8BA1\\u7528\\u4FE1\\u91D1\\u989D\"), __jsx(PieChart, {\n    width: 960,\n    height: 400\n  }, __jsx(Pie, {\n    data: data02,\n    cx: \"50%\",\n    cy: \"45%\",\n    outerRadius: 150,\n    nameKey: \"name\",\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    label: true\n  }, data02.map(function (entry, index) {\n    return __jsx(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length]\n    });\n  })), __jsx(Tooltip, null), __jsx(Legend, null))), __jsx(TableTitle, {\n    title: title,\n    setTitle: setTitle\n  }));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}