{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport apiReview from '~/api/review';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 20\n  }\n};\nvar tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 20\n  }\n};\n\nfunction BatchedAssignModal(props) {\n  var visible = props.visible,\n      onHide = props.onHide,\n      productList = props.productList,\n      selectData = props.selectData,\n      assignType = props.assignType,\n      verifyStatus = props.verifyStatus;\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      batchedAssignModal = _Form$useForm2[0];\n\n  var _useState = useState([]),\n      selectValue = _useState[0],\n      setSelectValue = _useState[1];\n\n  var _useState2 = useState([]),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(productList);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    visible && fetchData();\n  }, [visible]);\n\n  var changeProductId = function changeProductId(val) {\n    batchedAssignModal.setFieldsValue('productId', val);\n  };\n\n  var onAllSearch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var values, _yield$apiReview$fetc, _yield$apiReview$fetc2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return batchedAssignModal.validateFields();\n\n            case 2:\n              values = _context2.sent;\n              _context2.prev = 3;\n              _context2.next = 6;\n              return apiReview.fetch_countOrder({\n                productType: values.productType,\n                verifyStatus: verifyStatus\n              });\n\n            case 6:\n              _yield$apiReview$fetc = _context2.sent;\n              _yield$apiReview$fetc2 = _yield$apiReview$fetc.data;\n              data = _yield$apiReview$fetc2.data;\n              code = _yield$apiReview$fetc2.code;\n\n              if (code == 0) {\n                _message.success('查询成功');\n\n                setSize(data);\n              }\n\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 13]]);\n    }));\n\n    return function onAllSearch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(value) {\n    setSelectValue(value);\n  };\n\n  var onEdit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var values, _yield$apiReview$fetc3, _yield$apiReview$fetc4, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return batchedAssignModal.validateFields();\n\n            case 2:\n              values = _context3.sent;\n              _context3.prev = 3;\n              _context3.next = 6;\n              return apiReview.fetch_assign_update(_objectSpread({\n                assignType: assignType,\n                verifyStatus: verifyStatus,\n                checkedUser: selectValue\n              }, values));\n\n            case 6:\n              _yield$apiReview$fetc3 = _context3.sent;\n              _yield$apiReview$fetc4 = _yield$apiReview$fetc3.data;\n              data = _yield$apiReview$fetc4.data;\n              code = _yield$apiReview$fetc4.code;\n\n              if (code == 0) {\n                _message.success('选择分配成功');\n\n                onHide();\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.log(_context3.t0);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 13]]);\n    }));\n\n    return function onEdit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(_Modal, {\n    title: \"\\u6309\\u91CF\\u5206\\u914D\",\n    maskClosable: false,\n    visible: visible,\n    onOk: onEdit,\n    onCancel: onHide,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\",\n    forceRender: true,\n    width: 600,\n    destroyOnClose: true\n  }, __jsx(_Form, _extends({}, layout, {\n    form: batchedAssignModal,\n    name: \"batchedAssignModal\",\n    initialValues: {\n      productId: '',\n      collectionLevel: ''\n    }\n  }), __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\",\n    name: \"productType\",\n    rules: [{\n      required: true,\n      message: '请先选择产品'\n    }]\n  }, __jsx(_Select, {\n    onChange: function onChange(val) {\n      return changeProductId(val);\n    },\n    placeholder: \"\\u8BF7\\u9009\\u62E9\"\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u8BF7\\u9009\\u62E9\"), productList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.name);\n  }))), __jsx(_Form.Item, tailLayout, __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    onClick: onAllSearch\n  }, \"\\u603B\\u5355\\u6570\\u67E5\\u8BE2\"), __jsx(\"span\", null, \"\\u5F53\\u524D\\u603B\\u5355\\u6570\\uFF1A\", size)), __jsx(_Form.Item, {\n    label: \"\\u5206\\u914D\\u6570\\u91CF\",\n    name: \"num\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u6574\\u6570\\uFF0C\\u4E0D\\u5F97\\u8D85\\u8FC7\\u603B\\u5355\\u6570\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u4EBA\\u5458\"\n  }, __jsx(_Select, {\n    mode: \"multiple\",\n    onChange: handleChange\n  }, selectData.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.accountName, \"_\", v.roleName);\n  })))));\n}\n\nexport default BatchedAssignModal;","map":null,"metadata":{},"sourceType":"module"}