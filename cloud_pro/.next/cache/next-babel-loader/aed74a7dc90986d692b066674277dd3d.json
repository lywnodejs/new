{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, useRef } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/credit';\n\nfunction memoForm(props) {\n  var _useCookies = useCookies(['name']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      memoForm = _Form$useForm2[0];\n\n  var visible = props.visible,\n      onHide = props.onHide,\n      selectItem = props.selectItem,\n      onSubmit = props.onSubmit;\n  useEffect(function () {\n    memoForm.resetFields();\n  }, [visible]);\n\n  var onEdit = function onEdit() {\n    onSubmit(memoForm, selectItem);\n  };\n\n  return __jsx(_Modal, {\n    title: '备注',\n    maskClosable: false,\n    visible: visible,\n    destroyOnClose: true,\n    forceRender: true,\n    onOk: onEdit,\n    onCancel: onHide,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\"\n  }, __jsx(_Form, {\n    key: Date.now,\n    form: memoForm,\n    name: \"memoForm\",\n    initialValues: {\n      note: ''\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u5907\\u6CE8\",\n    name: \"note\",\n    rules: [{\n      required: true,\n      message: '请输入备注'\n    }]\n  }, __jsx(_Input.TextArea, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u6CE8\"\n  }))));\n}\n\nmemoForm.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default memoForm;","map":null,"metadata":{},"sourceType":"module"}