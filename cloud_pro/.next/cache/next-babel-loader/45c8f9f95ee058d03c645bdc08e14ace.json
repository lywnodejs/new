{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport Router, { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport api from '~/api/collection';\nvar breadcrumbs = [{\n  text: '催收管理'\n}, {\n  text: '催收历史记录'\n}, {\n  text: '催收历史'\n}, {\n  text: '历史详情'\n}];\n\nfunction body(_ref) {\n  var router = _ref.router;\n\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState({\n    page: 1,\n    pageSize: 10\n  }),\n      pageParams = _useState2[0],\n      setPageParams = _useState2[1];\n\n  var _useState3 = useState([]),\n      companys = _useState3[0],\n      setCompanys = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$api$fetch_all_, _yield$api$fetch_all_2, data, code;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.fetch_all_whitelist({\n                  page: 1,\n                  pageSize: 9999,\n                  useStatus: 1\n                });\n\n              case 3:\n                _yield$api$fetch_all_ = _context.sent;\n                _yield$api$fetch_all_2 = _yield$api$fetch_all_.data;\n                data = _yield$api$fetch_all_2.data;\n                code = _yield$api$fetch_all_2.code;\n\n                if (code == 0) {\n                  setCompanys(data.list);\n                }\n\n                fetchList(pageParams);\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var fetchList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pageParams) {\n      var _yield$api$fetch_hist, _yield$api$fetch_hist2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return api.fetch_history_detail({\n                collectionOrderId: router.query.id,\n                page: pageParams.page,\n                pageSize: pageParams.pageSize\n              });\n\n            case 3:\n              _yield$api$fetch_hist = _context2.sent;\n              _yield$api$fetch_hist2 = _yield$api$fetch_hist.data;\n              data = _yield$api$fetch_hist2.data;\n              code = _yield$api$fetch_hist2.code;\n\n              if (code == 0) {\n                setList(data);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function fetchList(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: '催收订单ID',\n    dataIndex: 'collectionOrderId',\n    key: 'collectionOrderId',\n    width: 150\n  }, {\n    title: '催收级别',\n    dataIndex: 'collectionLevel',\n    key: 'collectionLevel',\n    width: 150\n  }, // {\n  //   title: '逾期天数',\n  //   dataIndex: 'overdueDays',\n  //   key: 'overdueDays',\n  //   width: 150,\n  // },\n  // {\n  //   title: '状态',\n  //   dataIndex: 'collectionStatus',\n  //   key: 'collectionStatus',\n  //   width: 150,\n  // },\n  {\n    title: '催收员账号',\n    dataIndex: 'accountId',\n    key: 'accountId',\n    width: 150\n  }, {\n    title: '催收员姓名',\n    dataIndex: 'accountName',\n    key: 'accountName',\n    width: 150\n  }, {\n    title: '催收员所属部门',\n    dataIndex: 'companyId',\n    key: 'companyId',\n    width: 150,\n    render: function render(text, record, index) {\n      var findOne = companys.find(function (one) {\n        return one.id == text;\n      });\n      return findOne ? findOne.companyName : '';\n    }\n  }, {\n    title: '入催日期',\n    dataIndex: 'beginTime',\n    key: 'beginTime',\n    width: 150\n  }, {\n    title: '最近一次催收日期',\n    dataIndex: 'lastCollectionTime',\n    key: 'lastCollectionTime',\n    width: 250\n  }, {\n    title: '入催期应还日期',\n    dataIndex: 'planRepayTime',\n    key: 'planRepayTime',\n    width: 250\n  }, {\n    title: '实际还款日期',\n    dataIndex: 'realRepayTime',\n    key: 'realRepayTime',\n    width: 250\n  }, {\n    title: '催收次数',\n    dataIndex: 'collectionTimes',\n    key: 'collectionTimes',\n    width: 150\n  }, {\n    title: '备注',\n    dataIndex: 'remark',\n    key: 'remark',\n    width: 150\n  }, {\n    title: '创建人',\n    dataIndex: 'createUser',\n    key: 'createUser',\n    width: 150\n  }, {\n    title: '创建日期',\n    dataIndex: 'createTime',\n    key: 'createTime',\n    width: 250\n  }];\n\n  var onChange = function onChange(pagination, filters, sorter, extra) {\n    console.log(pagination, filters, sorter, extra);\n    pageParams.page = pagination.current;\n    pageParams.pageSize = pagination.pageSize;\n    setPageParams(_objectSpread({}, pageParams));\n    fetchList(pageParams);\n  };\n\n  var paginationConfig = {\n    total: list.total,\n    current: pageParams.page,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(total, \" \\u6761\");\n    }\n  };\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Table, {\n    rowKey: \"id\",\n    dataSource: list.list,\n    columns: columns,\n    bordered: true,\n    pagination: paginationConfig,\n    scroll: {\n      y: '100%',\n      x: '100%'\n    },\n    onChange: onChange\n  }));\n}\n\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}