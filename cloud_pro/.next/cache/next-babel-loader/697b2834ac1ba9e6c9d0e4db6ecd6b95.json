{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport TableList from './TableList';\nimport apiAccounting from '~/api/accounting';\nimport moment from 'moment';\nvar RangePicker = _DatePicker.RangePicker;\nvar breadcrumbs = [{\n  text: '账务管理'\n}, {\n  text: '成本明细'\n}, {\n  text: '成本核算'\n}];\nvar pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nvar values = {};\n\nfunction body(props) {\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState([]),\n      totalData = _useState2[0],\n      setTotalData = _useState2[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  useEffect(function () {\n    fetchCostMothlyList();\n  }, []);\n\n  var fetchCostMothlyList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values,\n          _values,\n          time,\n          _yield$apiAccounting$,\n          _yield$apiAccounting$2,\n          data,\n          code,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _values = values, time = _values.time;\n              _context.prev = 2;\n\n              if (time != null && time != undefined) {\n                values = _objectSpread(_objectSpread({}, values), {}, {\n                  statDate: moment(time).format('YYYY-MM')\n                });\n              } else if (time === undefined) {\n                values = _objectSpread(_objectSpread({}, values), {}, {\n                  statDate: moment(getCurrentMonthFirst()).format('YYYY-MM')\n                });\n              } else if (time === null) {\n                values = _objectSpread(_objectSpread({}, values), {}, {\n                  statDate: null\n                });\n              }\n\n              delete values.time;\n              _context.next = 7;\n              return apiAccounting.fetch_costMonthly_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n            case 7:\n              _yield$apiAccounting$ = _context.sent;\n              _yield$apiAccounting$2 = _yield$apiAccounting$.data;\n              data = _yield$apiAccounting$2.data;\n              code = _yield$apiAccounting$2.code;\n\n              if (code == 0) {\n                setTotalData(data);\n                setList(data.list);\n              }\n\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 14]]);\n    }));\n\n    return function fetchCostMothlyList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(value);\n              values = value;\n              pageParams.pageNum = 1;\n              fetchCostMothlyList(_objectSpread({}, values));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSearch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onReset = function onReset() {\n    form.resetFields();\n    onSearch({});\n  };\n\n  var onPage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fetchCostMothlyList(values);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onPage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getCurrentMonthFirst = function getCurrentMonthFirst() {\n    var date = new Date();\n    date.setDate(1);\n    return date;\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(_Form, {\n    form: form,\n    onFinish: onSearch,\n    layout: \"inline\",\n    className: \"searchForm\",\n    initialValues: {\n      time: moment(getCurrentMonthFirst(), 'YYYY-MM')\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u6838\\u7B97\\u5468\\u671F\",\n    name: \"time\"\n  }, __jsx(_DatePicker, {\n    picker: \"month\"\n  })), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: onReset\n  }, \"\\u91CD\\u7F6E\")), __jsx(TableList, {\n    list: list,\n    totalData: totalData,\n    onPage: onPage,\n    pageParams: pageParams,\n    fetchCostMothlyList: fetchCostMothlyList\n  })));\n}\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}