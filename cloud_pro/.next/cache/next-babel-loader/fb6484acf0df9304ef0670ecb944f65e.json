{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport Router, { withRouter, useRouter } from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport styles from './index.less';\nimport TableList from './TableList';\nimport api from '~/api/dataUpdate';\nimport { constant, values } from 'lodash';\nimport { base64ToFileOrBlob } from 'web-downloadfile';\nimport { postForm, post } from '~/utils/fetch';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nconst breadcrumbs = [{\n  text: '乡村振兴'\n}, {\n  text: '数据更新'\n}];\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 20\n};\nconst fileTypeList = [{\n  id: 11,\n  name: '人工调整信用分'\n}, {\n  id: 12,\n  name: '医保数据'\n}, {\n  id: 13,\n  name: '劳动力数据'\n}, {\n  id: 14,\n  name: '存款数据'\n}, {\n  id: 15,\n  name: '不良贷款数据'\n}, {\n  id: 16,\n  name: '存量贷款数据'\n}, {\n  id: 17,\n  name: '线下搜集数据'\n}];\nconst fileVertical = [{\n  id: 1,\n  name: '增量 (追加新数据，覆盖重复数据)'\n}, {\n  id: 2,\n  name: '全量 (请慎重选择，此方式将删除所有同类别旧数据)'\n}];\n\nfunction body(props) {\n  //获取个人数据上传记录\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: totalData,\n    1: setTotalData\n  } = useState([]);\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    0: onModalVisible,\n    1: setOnModalVisible\n  } = useState(false);\n  const {\n    0: valuesForm,\n    1: setValueForm\n  } = useState({});\n  const {\n    0: valuesTestFile,\n    1: setValuesTestFile\n  } = useState({});\n  const {\n    0: fileTypeId,\n    1: setFileTypeId\n  } = useState(11);\n  const {\n    0: fileTemplate,\n    1: setFileTemplate\n  } = useState(11);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  useEffect(() => {\n    fetchList(); // onSearch()\n    // onRescore()\n  }, []); //下载模板\n\n  const onDownLoad = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_downloadTemplate_list({});\n\n      if (code == 0) {\n        const linkElement = document.createElement('a');\n        linkElement.style.display = 'none';\n        linkElement.href = data;\n        document.body.appendChild(linkElement);\n        linkElement.click();\n        document.body.removeChild(linkElement);\n        console.log(data);\n        base64ToFileOrBlob('data:wKgc4WDMQI6AOn16AAC22lK3WwU732/zip;base64,' + data.pdfData);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; //获取个人数据上传记录\n\n\n  const fetchList = async (values = {}) => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_uploadRecord_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n      if (code === 0) {\n        data.list.forEach(item => {\n          item.uploadSuccNum = item.uploadSuccNum || '-';\n          item.uploadFailNum = item.uploadFailNum || '-';\n          item.scoreSuccNum = item.scoreSuccNum || '-';\n          item.scoreFailNum = item.scoreFailNum || '-';\n        });\n        setList(data.list);\n        setTotalData(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onBeforeUpload = () => {\n    return false;\n  };\n\n  const onChangeUpload = info => {\n    let files = [...info.fileList];\n    files = files.slice(-1);\n    setFileList(files);\n  };\n\n  const onCancel = () => {\n    form.resetFields();\n    setFileList([]);\n    setIsModalVisible(false);\n  };\n\n  const onUpload = values => {\n    console.log(values);\n    values.testFile = values.testFile.file;\n\n    if (isMac()) {\n      const fileType = values.testFile.name.endsWith('.xlsx') || values.testFile.name.endsWith('.xls');\n\n      if (!fileType) {\n        _message.warning('只能上传excel文件！请重新选择');\n\n        return;\n      }\n    }\n\n    setValueForm(values);\n    setValuesTestFile(values.testFile);\n    setOnModalVisible(true);\n  };\n\n  const onConfirmUpload = async () => {\n    setLoading(true);\n\n    try {\n      const {\n        data: {\n          code\n        }\n      } = await postForm('core/rural/upload', valuesForm);\n\n      if (code === 0) {\n        onCancel();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    setOnModalVisible(false);\n    setLoading(false);\n  };\n\n  const isMac = () => {\n    if (typeof navigator !== 'undefined') {\n      return /macintosh|mac os x/i.test(navigator.userAgent);\n    }\n\n    return false;\n  };\n\n  const onSearch = async value => {\n    pageParams.pageNum = 1;\n    fetchList(_objectSpread({}, values));\n  };\n\n  const onPage = async () => {\n    fetchList(values);\n  }; //重新评分\n\n\n  const onFail = async record => {\n    console.log(record);\n\n    _Modal.confirm({\n      title: '下载失败的数据',\n\n      onOk() {\n        return new Promise((resolve, reject) => {\n          post('core/rural/rescore', {\n            recordId: record.uploadFailNum\n          }).then(({\n            data: {\n              data,\n              code\n            }\n          }) => {\n            if (code === 0) {\n              const linkElement = document.createElement('a');\n              linkElement.style.display = 'none';\n              linkElement.href = 'https://test-oss.xysl.com/group1/M00/01/68/wKgc4WDRjCGAMYJaAABoALb4cjY950.xls';\n              document.body.appendChild(linkElement);\n              linkElement.click();\n              document.body.removeChild(linkElement);\n              console.log(data);\n              resolve();\n\n              _message.success('下载成功');\n\n              console.log(record.uploadFailNum);\n            }\n\n            reject();\n          });\n        }).catch(() => console.log('Oops errors!'));\n      }\n\n    });\n  };\n\n  const onScore = async record => {\n    console.log(record);\n\n    _Modal.confirm({\n      title: '确定重新评分？',\n\n      onOk() {\n        return new Promise((resolve, reject) => {\n          post('core/rural/rescore', {\n            recordId: record.id\n          }).then(({\n            data: {\n              data,\n              code\n            }\n          }) => {\n            if (code === 0) {\n              resolve();\n\n              _message.success('提交成功');\n            }\n\n            reject();\n          });\n        }).catch(() => console.log('Oops errors!'));\n      }\n\n    });\n  };\n\n  const getFileTypeList = () => {\n    let a = fileTypeList.find(item => item.id === valuesForm.fileType);\n\n    if (a) {\n      return a.name;\n    }\n  };\n\n  const getHandleType = () => {\n    let a = fileVertical.find(item => item.id === valuesForm.handleType);\n\n    if (a) {\n      return a.name;\n    }\n  };\n\n  const fileTypeChange = val => {\n    setFileTypeId(val);\n    setFileTemplate(val);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Form, null, __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      width: 120,\n      borderRadius: 5\n    },\n    onClick: showModal\n  }, \"\\u5BFC\\u5165\\u6570\\u636E\"), __jsx(\"u\", {\n    className: styles.item,\n    id: \"a\",\n    onClick: onDownLoad\n  }, \"\\u4E0B\\u8F7D\\u6A21\\u677F\"))), __jsx(TableList, {\n    list,\n    setList,\n    totalData,\n    pageParams,\n    onPage,\n    onSearch,\n    values,\n    onScore,\n    onFail\n  })), __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(_Form, {\n    layout: \"inline\",\n    className: \"searchForm\",\n    initialValues: {\n      fileType: '',\n      testFile: '',\n      handleType: '',\n      name: '0'\n    },\n    form: form,\n    onFinish: onUpload\n  }, __jsx(_Modal, {\n    title: \"\\u5BFC\\u5165\\u6570\\u636E\",\n    visible: isModalVisible,\n    onOk: () => {\n      form.submit();\n    },\n    okText: \"\\u7EE7\\u7EED\",\n    onCancel: onCancel\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u6570\\u636E\\u7C7B\\u522B\",\n    name: \"name\",\n    rules: [{\n      required: true\n    }]\n  }, __jsx(_Select, {\n    style: {\n      width: '130px'\n    }\n  }, __jsx(_Select.Option, {\n    value: \"0\"\n  }, \"\\u4E2A\\u4EBA\"))), __jsx(_Form.Item, {\n    name: \"fileType\",\n    rules: [{\n      required: true,\n      message: '请选择数据类别'\n    }]\n  }, __jsx(_Select, {\n    style: {\n      width: '130px',\n      marginLeft: '10px'\n    },\n    onChange: val => fileTypeChange(val)\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u8BF7\\u9009\\u62E9\"), fileTypeList.map(item => {\n    return __jsx(_Select.Option, {\n      value: item.id,\n      key: item.id\n    }, item.name);\n  })))), __jsx(_Form.Item, {\n    label: \"\\u6570\\u636E\\u6587\\u4EF6\",\n    name: \"testFile\",\n    rules: [{\n      required: true,\n      message: '请上传文件'\n    }]\n  }, __jsx(_Upload, {\n    beforeUpload: onBeforeUpload,\n    onChange: onChangeUpload,\n    showUploadList: {\n      showRemoveIcon: false\n    },\n    fileList: fileList,\n    accept: isMac() ? '' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel'\n  }, __jsx(_Button, {\n    style: {\n      width: '130px'\n    }\n  }, \"\\u4E0A\\u4F20\\u6587\\u4EF6\"))), fileTypeId !== 11 && __jsx(_Form.Item, {\n    label: \"\\u5BFC\\u5165\\u6A21\\u5F0F\",\n    name: \"handleType\",\n    rules: [{\n      required: true,\n      message: '请选择导入模式'\n    }]\n  }, __jsx(_Radio.Group, null, __jsx(_Space, {\n    direction: \"vertical\"\n  }, fileVertical.map(item => {\n    return __jsx(_Radio, {\n      value: item.id,\n      key: item.id\n    }, item.name);\n  })))))), __jsx(_Modal, {\n    visible: onModalVisible,\n    onOk: onConfirmUpload,\n    onCancel: () => {\n      setOnModalVisible(false);\n    },\n    closeIcon: true,\n    confirmLoading: loading\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(ExclamationCircleFilled, {\n    style: {\n      color: 'rgb(250, 173, 20)',\n      fontSize: '24px'\n    }\n  }), __jsx(\"p\", {\n    style: {\n      marginLeft: '10px',\n      fontSize: '16px'\n    }\n  }, \"\\u8BF7\\u786E\\u8BA4\\u4EE5\\u4E0B\\u4FE1\\u606F\")), __jsx(\"div\", null, __jsx(\"div\", {\n    className: styles.upData\n  }, __jsx(\"span\", null, \"\\u6570\\u636E\\u7C7B\\u522B:\"), __jsx(\"span\", null, \"\\u4E2A\\u4EBA-\", getFileTypeList())), __jsx(\"div\", {\n    className: styles.upData\n  }, __jsx(\"span\", null, \"\\u6570\\u636E\\u6587\\u4EF6:\"), __jsx(\"span\", null, valuesTestFile.name)), fileTemplate !== 11 && __jsx(\"div\", {\n    className: styles.upData\n  }, __jsx(\"span\", null, \"\\u5BFC\\u5165\\u6A21\\u5F0F:\"), __jsx(\"span\", null, getHandleType()))))));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}