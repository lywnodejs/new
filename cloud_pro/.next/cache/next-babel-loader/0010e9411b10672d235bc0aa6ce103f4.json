{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport apiBusiness from '~/api/business';\nimport api from '~/api/authority';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { useCookies } from 'react-cookie';\nconst {\n  RangePicker\n} = _TimePicker;\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\n\nconst EditModal = props => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(props.show);\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: showRoles,\n    1: setShowRoles\n  } = useState(props.branches || []);\n\n  const [form] = _Form.useForm();\n\n  const [cookies] = useCookies(['name']);\n  const {\n    0: showDepartments,\n    1: setShowDepartments\n  } = useState([]);\n  useEffect(() => {\n    setShow(props.show);\n\n    if (!props.show) {\n      form.resetFields();\n      setConfirmLoading(false);\n    } else {\n      let data = props.data;\n\n      if (data && data.startTime) {\n        data.time = [moment(data.startTime, 'HH:mm'), moment(data.endTime, 'HH:mm')];\n      }\n\n      form.setFieldsValue(data);\n    }\n\n    if (props.departments) {\n      setShowDepartments(props.departments);\n    }\n  }, [props]);\n\n  const handleSearchDepart = keyword => {\n    if (!keyword) {\n      return setShowDepartments(props.departments);\n    }\n\n    const arr = props.departments.filter(v => v.name.indexOf(keyword) > -1);\n    setShowDepartments(arr);\n  };\n\n  const handleCancel = () => {\n    form.resetFields();\n    form.setFieldsValue(null);\n    props.close();\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    form.validateFields().then(async values => {\n      const {\n        time\n      } = values,\n            paramData = _objectWithoutProperties(values, [\"time\"]);\n\n      const params = _objectSpread({\n        startTime: moment(time[0]).format('HH:mm'),\n        endTime: moment(time[1]).format('HH:mm')\n      }, paramData);\n\n      if (props.data) {\n        params.id = props.data.id;\n      }\n\n      let {\n        data: {\n          code\n        }\n      } = await apiBusiness.editBranchItem(params);\n      setConfirmLoading(false);\n\n      if (code == 0) {\n        form.resetFields();\n        form.setFieldsValue(null);\n        props.close(true, true);\n      }\n    }).catch(err => {\n      setConfirmLoading(false);\n    });\n  };\n\n  return __jsx(_Modal, {\n    title: props.data ? '编辑' : '新增',\n    visible: show,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    confirmLoading: confirmLoading\n  }, __jsx(_Form, _extends({}, layout, {\n    form: form,\n    name: \"basic\"\n  }), __jsx(_Form.Item, {\n    label: \"\\u652F\\u884C\\u4EE3\\u7801\",\n    name: \"code\" // rules={[{required: true, message: '支行代码不可为空'}]}\n\n  }, __jsx(_Input, {\n    maxLength: 25\n  })), __jsx(_Form.Item, {\n    label: \"\\u652F\\u884C\\u540D\\u79F0\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: '支行名称不可为空'\n    }]\n  }, __jsx(_Input, {\n    maxLength: 25\n  })), __jsx(_Form.Item, {\n    label: \"\\u90E8\\u95E8\\u540D\\u79F0\",\n    rules: [{\n      required: true,\n      message: '部门名称不可为空'\n    }],\n    name: \"departmentId\"\n  }, __jsx(_Select, {\n    showSearch: true,\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u90E8\\u95E8\",\n    filterOption: false,\n    defaultActiveFirstOption: false,\n    onSearch: handleSearchDepart,\n    style: {\n      width: '200px'\n    }\n  }, showDepartments.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: i\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u652F\\u884C\\u5730\\u5740\",\n    name: \"address\" // rules={[{required: true, message: '支行地址不可为空'}]}\n\n  }, __jsx(_Input, {\n    maxLength: 25\n  })), __jsx(_Form.Item, {\n    label: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n    name: \"mobile\" // rules={[{required: true, message: '联系电话不可为空'}]}\n\n  }, __jsx(_Input, {\n    maxLength: 25\n  })), __jsx(_Form.Item, {\n    label: \"\\u8425\\u4E1A\\u65F6\\u95F4\",\n    name: \"time\" // rules={[{required: true, message: '营业时间不可为空'}]}\n\n  }, __jsx(RangePicker, {\n    format: \"HH:mm\"\n  }))));\n};\n\nexport default EditModal;","map":null,"metadata":{},"sourceType":"module"}