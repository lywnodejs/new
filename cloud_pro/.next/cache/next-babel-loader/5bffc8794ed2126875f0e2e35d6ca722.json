{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState, useContext } from 'react';\nimport apicustomer from '~/api/customer';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nimport { withKeepAlive } from 'react-next-keep-alive';\nconst breadcrumbs = [{\n  text: '客户管理'\n}, {\n  text: '客户列表'\n}];\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nlet values = {};\n\nfunction body(props) {\n  const {\n    0: totalData,\n    1: setTotalData\n  } = useState([]);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        onSearch();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const fetchList = async (values = {}) => {\n    try {\n      values.fiveLevelType = values.fiveLevelType || null;\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apicustomer.get_customer_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n      if (code === 0 && data) {\n        setTotalData(data);\n        setList(data.list);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSearch = async value => {\n    values = value;\n    pageParams.pageNum = 1;\n    fetchList(_objectSpread({}, values));\n  };\n\n  const onPage = async () => {\n    fetchList(values);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(SearchForm, {\n    onSearch,\n    fetchList\n  }), __jsx(TableList, {\n    list,\n    onPage,\n    pageParams,\n    totalData\n  })));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default withKeepAlive(body, 'customer-list');","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/customer/list/index.js"],"names":["Layout","React","useEffect","useState","useContext","apicustomer","SearchForm","TableList","withKeepAlive","breadcrumbs","text","pageParams","pageNum","pageSize","values","body","props","totalData","setTotalData","list","setList","fetchData","onSearch","error","console","log","fetchList","fiveLevelType","data","code","get_customer_list","err","value","onPage","width","getInitialProps"],"mappings":";;;;;;;;;;AAAA,SAAQA,MAAR,QAAqB,qBAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAD,EAAiB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAAjB,CAApB;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAAnB;AAIA,IAAIC,MAAM,GAAG,EAAb;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACgB,IAAD;AAAA,OAAOC;AAAP,MAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,SAAf,GAA2B;AACzB,UAAI;AACFC,QAAAA,QAAQ;AACT,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDF,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;;AAWA,QAAMK,SAAS,GAAG,OAAOZ,MAAM,GAAG,EAAhB,KAAuB;AACvC,QAAI;AACFA,MAAAA,MAAM,CAACa,aAAP,GAAuBb,MAAM,CAACa,aAAP,IAAwB,IAA/C;AACA,YAAM;AACJC,QAAAA,IAAI,EAAE;AAACA,UAAAA,IAAD;AAAOC,UAAAA;AAAP;AADF,UAEF,MAAMxB,WAAW,CAACyB,iBAAZ,iCAAkCnB,UAAlC,GAAiDG,MAAjD,EAFV;;AAGA,UAAIe,IAAI,KAAK,CAAT,IAAcD,IAAlB,EAAwB;AACtBV,QAAAA,YAAY,CAACU,IAAD,CAAZ;AACAR,QAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACD;AACF,KATD,CASE,OAAOY,GAAP,EAAY;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD;AACF,GAbD;;AAeA,QAAMT,QAAQ,GAAG,MAAOU,KAAP,IAAiB;AAChClB,IAAAA,MAAM,GAAGkB,KAAT;AACArB,IAAAA,UAAU,CAACC,OAAX,GAAqB,CAArB;AACAc,IAAAA,SAAS,mBAAKZ,MAAL,EAAT;AACD,GAJD;;AAMA,QAAMmB,MAAM,GAAG,YAAY;AACzBP,IAAAA,SAAS,CAACZ,MAAD,CAAT;AACD,GAFD;;AAIA,SACE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAEL;AAArB,KACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAE;AAACyB,MAAAA,KAAK,EAAE;AAAR;AAAhD,KACE,MAAC,UAAD,EACM;AACFZ,IAAAA,QADE;AAEFI,IAAAA;AAFE,GADN,CADF,EAQE,MAAC,SAAD,EACM;AACFP,IAAAA,IADE;AAEFc,IAAAA,MAFE;AAGFtB,IAAAA,UAHE;AAIFM,IAAAA;AAJE,GADN,CARF,CADF,CADF;AAqBD;;AAEDF,IAAI,CAACoB,eAAL,GAAuB,YAAY;AACjC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAe3B,aAAa,CAACO,IAAD,EAAO,eAAP,CAA5B","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState, useContext} from 'react'\nimport {Space, message} from 'antd'\nimport apicustomer from '~/api/customer'\nimport SearchForm from './SearchForm'\nimport TableList from './TableList'\nimport {withKeepAlive} from 'react-next-keep-alive'\n\nconst breadcrumbs = [{text: '客户管理'}, {text: '客户列表'}]\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10,\n}\nlet values = {}\nfunction body(props) {\n  const [totalData, setTotalData] = useState([])\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        onSearch()\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const fetchList = async (values = {}) => {\n    try {\n      values.fiveLevelType = values.fiveLevelType || null\n      const {\n        data: {data, code},\n      } = await apicustomer.get_customer_list({...pageParams, ...values})\n      if (code === 0 && data) {\n        setTotalData(data)\n        setList(data.list)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const onSearch = async (value) => {\n    values = value\n    pageParams.pageNum = 1\n    fetchList({...values})\n  }\n\n  const onPage = async () => {\n    fetchList(values)\n  }\n\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Space direction=\"vertical\" size=\"large\" style={{width: '100%'}}>\n        <SearchForm\n          {...{\n            onSearch,\n            fetchList,\n          }}\n        />\n\n        <TableList\n          {...{\n            list,\n            onPage,\n            pageParams,\n            totalData,\n          }}\n        />\n      </Space>\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  return {}\n}\n\nexport default withKeepAlive(body, 'customer-list')\n"]},"metadata":{},"sourceType":"module"}