{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState, useRef } from 'react';\nimport { Layout } from '~/components/Layout';\nimport moment from 'moment';\nimport { biFetch } from '~/utils/fetch';\nimport { CSVLink } from 'react-csv';\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\nvar TabPane = _Tabs.TabPane;\nvar breadcrumbs = [{\n  text: 'BI报表'\n}, {\n  text: '贷后分析'\n}, {\n  text: '逾期率报表'\n}];\nvar tabs = ['M0+', 'M1+', 'M2+', 'M3+'];\nvar pages = {\n  pageNo: 1,\n  pageSize: 20\n};\nvar startDate = moment().subtract(1, 'M').format('YYYY-MM');\nvar endDate = moment().format('YYYY-MM');\n\nvar fetchList = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var params,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            params = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : _objectSpread({\n              startDate: startDate,\n              endDate: endDate\n            }, pages);\n            return _context2.abrupt(\"return\", _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var _i, _Object$entries, _Object$entries$_i, key, value, startDate, endDate;\n\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      for (_i = 0, _Object$entries = Object.entries(params); _i < _Object$entries.length; _i++) {\n                        _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n\n                        if (!value) {\n                          delete params[key];\n                        }\n                      }\n\n                      startDate = Array.isArray(params.date) ? moment(params.date[0]).format('YYYY-MM') : undefined;\n                      endDate = Array.isArray(params.date) ? moment(params.date[1]).format('YYYY-MM') : undefined;\n                      delete params.date;\n                      _context.next = 6;\n                      return biFetch('/overdue/stat/rate', _objectSpread({\n                        startDate: startDate,\n                        endDate: endDate,\n                        type: tabs[0]\n                      }, params));\n\n                    case 6:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchList() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar columns = [{\n  title: '放款月份',\n  dataIndex: 'grantMonth',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '渠道',\n  dataIndex: 'srcChannel',\n  align: 'left',\n  width: 80,\n  fixed: 'left'\n}, {\n  title: '放款金额(元)',\n  dataIndex: 'grantAmount',\n  align: 'left',\n  width: 120,\n  fixed: 'left',\n  render: function render(value) {\n    return value.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n  }\n}];\n\nfor (var i = 1; i < 25; i++) {\n  columns.push({\n    title: \"MOB\".concat(i),\n    dataIndex: \"mob\".concat(i),\n    align: 'left',\n    width: 100\n  });\n}\n\nvar TableList = function TableList(_ref3) {\n  var onPage = _ref3.onPage,\n      _ref3$data = _ref3.data,\n      _ref3$data$extra = _ref3$data.extra,\n      extra = _ref3$data$extra === void 0 ? [] : _ref3$data$extra,\n      _ref3$data$list = _ref3$data.list,\n      list = _ref3$data$list === void 0 ? [] : _ref3$data$list,\n      _ref3$data$pageRet = _ref3$data.pageRet,\n      pageRet = _ref3$data$pageRet === void 0 ? {} : _ref3$data$pageRet,\n      _ref3$columns = _ref3.columns,\n      columns = _ref3$columns === void 0 ? [] : _ref3$columns;\n\n  var onShowSizeChange = function onShowSizeChange(current, size) {\n    console.log(current, size);\n    pagination.pageSize = size;\n  };\n\n  var pagination = {\n    position: 'bottom',\n    total: pageRet.totalCount,\n    pageSize: pages.pageSize,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(pageRet.totalCount, \" \\u6761\\u8BB0\\u5F55\");\n    },\n    onChange: onPage,\n    onShowSizeChange: onShowSizeChange\n  };\n  return __jsx(_Table, {\n    rowKey: \"statDate\",\n    dataSource: list,\n    columns: columns,\n    pagination: pagination,\n    scroll: {\n      x: 1500\n    }\n  });\n};\n\nvar DownloadCSV = function DownloadCSV(_ref4) {\n  var form = _ref4.form,\n      fetchList = _ref4.fetchList;\n  var csvInstance = useRef();\n\n  var _useState = useState({}),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var onDownload = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var values, _yield$fetchList, _yield$fetchList$data, code, list;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              values = form.getFieldsValue();\n              _context3.next = 4;\n              return fetchList(values);\n\n            case 4:\n              _yield$fetchList = _context3.sent;\n              _yield$fetchList$data = _yield$fetchList.data;\n              code = _yield$fetchList$data.code;\n              list = _yield$fetchList$data.data;\n\n              if (code === 0) {\n                setData(list);\n              }\n\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onDownload() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (data.list !== undefined && csvInstance.current && csvInstance.current.link) {\n      setTimeout(function () {\n        csvInstance.current.link.click();\n        setData({});\n      });\n    }\n  }, [data]);\n  var headers = columns.map(function (column) {\n    return {\n      label: column.title,\n      key: column.dataIndex\n    };\n  });\n  return __jsx(React.Fragment, null, __jsx(CSVLink, {\n    headers: headers,\n    data: data.list || [],\n    ref: csvInstance\n  }), __jsx(_Button, {\n    loading: loading,\n    type: \"primary\",\n    onClick: onDownload\n  }, \"\\u4E0B\\u8F7D\"));\n};\n\nvar Search = function Search(_ref6) {\n  var onSearch = _ref6.onSearch,\n      channels = _ref6.channels,\n      products = _ref6.products,\n      form = _ref6.form,\n      fetchList = _ref6.fetchList;\n  return __jsx(_Form, {\n    layout: \"inline\",\n    form: form,\n    initialValues: {\n      date: [moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD')],\n      srcCode: '',\n      productId: '',\n      type: tabs[0]\n    },\n    onFinish: onSearch,\n    className: \"searchForm\"\n  }, __jsx(_Form.Item, _extends({\n    label: \"\\u653E\\u6B3E\\u6708\\u4EFD\",\n    name: \"date\"\n  }, {\n    rules: [{\n      type: 'array',\n      required: true,\n      message: '请选时间!'\n    }]\n  }), __jsx(RangePicker, {\n    picker: \"month\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\",\n    name: \"productId\"\n  }, __jsx(_Select, {\n    style: {\n      width: 120\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), products.map(function (v) {\n    return __jsx(_Select.Option, {\n      key: v.productId,\n      value: v.productId\n    }, v.productName);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u8FDB\\u4EF6\\u6E20\\u9053\",\n    name: \"srcCode\"\n  }, __jsx(_Select, {\n    style: {\n      width: 120\n    }\n  }, __jsx(Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), channels.map(function (v) {\n    return __jsx(Option, {\n      key: v.srcCode,\n      value: v.srcCode\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    hidden: true,\n    name: \"type\"\n  }, __jsx(_Input, null)), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\")), __jsx(_Form.Item, null, __jsx(DownloadCSV, {\n    form: form,\n    fetchList: fetchList\n  })));\n};\n\nvar body = function body(_ref7) {\n  var list = _ref7.list,\n      channels = _ref7.channels,\n      products = _ref7.products;\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState3 = useState(list),\n      data = _useState3[0],\n      setData = _useState3[1];\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values) {\n      var _yield$fetchList2, _yield$fetchList2$dat, code, data;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(values);\n              _context4.next = 3;\n              return fetchList(_objectSpread(_objectSpread({}, values), pages));\n\n            case 3:\n              _yield$fetchList2 = _context4.sent;\n              _yield$fetchList2$dat = _yield$fetchList2.data;\n              code = _yield$fetchList2$dat.code;\n              data = _yield$fetchList2$dat.data;\n\n              if (code === 0) {\n                setData(data);\n              }\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onSearch(_x) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var onPage = function onPage(page) {\n    var values = form.getFieldsValue();\n    pages.pageNo = page;\n    onSearch(values);\n  };\n\n  var onTab = function onTab(i) {\n    form.setFieldsValue({\n      type: tabs[i]\n    });\n    form.submit();\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(Search, {\n    onSearch: onSearch,\n    channels: channels,\n    products: products,\n    form: form,\n    fetchList: fetchList\n  }), __jsx(\"div\", {\n    style: {\n      background: '#fff'\n    }\n  }, __jsx(_Tabs, {\n    tabBarStyle: {\n      paddingLeft: 30\n    },\n    onChange: onTab\n  }, tabs.map(function (v, i) {\n    return __jsx(TabPane, {\n      tab: v,\n      key: i\n    }, __jsx(TableList, {\n      data: data,\n      columns: columns\n    }));\n  })))));\n};\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n  var _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, code, _yield$Promise$all2$$, list, _yield$Promise$all2$2, channels, _yield$Promise$all2$3, products;\n\n  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return Promise.all([fetchList(), biFetch('/common/allChannel'), biFetch('/common/allProduct')]);\n\n        case 3:\n          _yield$Promise$all = _context5.sent;\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n          _yield$Promise$all2$ = _yield$Promise$all2[0].data;\n          code = _yield$Promise$all2$.code;\n          _yield$Promise$all2$$ = _yield$Promise$all2$.data;\n          list = _yield$Promise$all2$$ === void 0 ? [] : _yield$Promise$all2$$;\n          _yield$Promise$all2$2 = _yield$Promise$all2[1].data.data;\n          channels = _yield$Promise$all2$2 === void 0 ? [] : _yield$Promise$all2$2;\n          _yield$Promise$all2$3 = _yield$Promise$all2[2].data.data;\n          products = _yield$Promise$all2$3 === void 0 ? [] : _yield$Promise$all2$3;\n          return _context5.abrupt(\"return\", {\n            list: list,\n            channels: channels,\n            products: products\n          });\n\n        case 16:\n          _context5.prev = 16;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 19:\n          return _context5.abrupt(\"return\", {\n            list: [],\n            channels: [],\n            products: []\n          });\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5, null, [[0, 16]]);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}