{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { cloneDeep, isString, flow, curry } from 'lodash';\nexport function cookies() {\n  var cookie = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return cookie.split('; ').reduce(function (prev, current) {\n    var _current$split = current.split('='),\n        _current$split2 = _slicedToArray(_current$split, 2),\n        name = _current$split2[0],\n        value = _current$split2[1];\n\n    prev[name] = value;\n    return prev;\n  }, {});\n}\nexport var formatMoney = function formatMoney(s) {\n  if (!s) {\n    return 0;\n  }\n\n  var noNegative = true; //默认是正值。\n\n  s = parseFloat(s + '');\n  s = s + ''; //转换成字符串\n\n  if (parseFloat(s) < 0) {\n    //是负数\n    s = Math.abs(s) + '';\n    noNegative = false;\n  }\n\n  var zheng = s.split('.')[0];\n  var dian = s.split('.')[1]; //将整数部分，利用字符串的charAt() 方法，转换成数组。\n\n  var zhengArr = [];\n\n  for (var i = 0; i < zheng.length; i++) {\n    zhengArr.push(zheng.charAt(i));\n  }\n\n  zhengArr = zhengArr.reverse();\n  var t = '';\n\n  for (var i = 0; i < zhengArr.length; i++) {\n    if (i % 3 == 2 && i != zhengArr.length - 1) {\n      //为第三位，并且并不是最后了。如123456时，6并不加,\n      t += zhengArr[i] + ',';\n    } else {\n      t += zhengArr[i] + ''; //加上空格\n    }\n  }\n\n  return (noNegative ? '' : '-') + t.split('').reverse().join('') + \"\".concat(dian ? '.' + dian : '');\n};\nexport function isEmpty(param) {\n  if (param.length == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function isNumber(param) {\n  if (isNaN(param)) {\n    return false;\n  } else {\n    return true;\n  }\n} //匹配IP地址的正则表达式\n\nexport function isIP(strIP) {\n  var re = /^((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2}|\\*)(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2}|\\*)){3}$/g;\n\n  if (re.test(strIP)) {\n    return true;\n  }\n\n  return false;\n}\nexport function computeUnit(val) {\n  var arr = [{\n    name: '万',\n    value: 5\n  }, {\n    name: '十万',\n    value: 6\n  }, {\n    name: '百万',\n    value: 7\n  }, {\n    name: '千万',\n    value: 8\n  }, {\n    name: '亿',\n    value: 9\n  }, {\n    name: '十亿',\n    value: 10\n  }, {\n    name: '百亿',\n    value: 11\n  }, {\n    name: '千亿',\n    value: 12\n  }];\n\n  if (val) {\n    var len = Number(val).toFixed(0).length;\n    var findOne = arr.find(function (v) {\n      return v.value == len;\n    });\n    return findOne ? findOne.name : '';\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}