{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/descriptions/style\";\nimport _Descriptions from \"antd/lib/descriptions\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/image/style\";\nimport _Image from \"antd/lib/image\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/steps/style\";\nimport _Steps from \"antd/lib/steps\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport { useCookies } from 'react-cookie';\nimport Router, { useRouter, withRouter } from 'next/router';\nimport RepayList from '../RepayList';\nimport TableList from './TableList';\nimport api from '~/api/order';\nimport apiCredit from '~/api/credit';\nimport apiProduct from '~/api/product';\nimport _ from 'lodash';\nimport styles from './index.less';\nconst {\n  Step\n} = _Steps;\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nconst {\n  TabPane\n} = _Tabs;\nconst breadcrumbs = [{\n  text: '进件管理'\n}, {\n  text: '进件列表'\n}, {\n  text: '详情'\n}];\nconst tabBarStyle = {\n  backgroundColor: '#fff',\n  marginBottom: 15,\n  paddingLeft: 15\n};\nconst idCardImgType = ['idCardFrontOcr', 'idCardBackOcr', 'livenessOcr'];\n\nfunction body(props) {\n  const {\n    0: showCourt,\n    1: setShowCourt\n  } = useState(false);\n  const {\n    0: detail,\n    1: setDetail\n  } = useState({});\n  const {\n    0: courtData,\n    1: setCourtData\n  } = useState([]);\n  const {\n    0: defaultActiveKey,\n    1: setDefaultActiveKey\n  } = useState('tab');\n  const router = useRouter();\n  useEffect(() => {\n    getDetail();\n  }, []);\n  const contactColumns = [{\n    title: '联系人姓名',\n    dataIndex: 'userName'\n  }, {\n    title: '联系电话',\n    dataIndex: 'phoneNo'\n  }, {\n    title: '联系人关系',\n    dataIndex: 'attrName'\n  }];\n  const riskColumns = [{\n    title: '序号',\n    key: 'sortNum',\n    render: (text, record, index) => {\n      return index + 1;\n    }\n  }, {\n    title: '规则名称',\n    dataIndex: 'ruleName'\n  }, {\n    title: '规则设定',\n    dataIndex: 'scriptSource',\n    width: 300,\n    render: (text, record) => __jsx(\"div\", {\n      style: {\n        wordWrap: 'break-word',\n        wordBreak: 'break-word'\n      }\n    }, text)\n  }, {\n    title: '命中详情',\n    dataIndex: 'fieldValueStrL',\n    width: 300,\n    render: (text, record) => __jsx(\"div\", {\n      style: {\n        wordWrap: 'break-word',\n        wordBreak: 'break-word'\n      }\n    }, text)\n  }, {\n    title: '满足条件是否通过',\n    dataIndex: 'expectedValue',\n    render: (text, record, index) => {\n      return text ? '通过' : '拒绝';\n    }\n  }, {\n    title: '命中结果',\n    dataIndex: 'result',\n    render: (text, record, index) => {\n      return text ? '命中' : '未命中';\n    }\n  }, {\n    title: '操作',\n    key: 'cz',\n    width: 100,\n    fixed: 'right',\n    render: (text, record, index) => {\n      return record.simpleRuleCode == 'Blacklist_access_rules-RA_101' || record.simpleRuleCode == 'Blacklist_access_rules-RS_101' ? __jsx(_Button, {\n        type: \"link\",\n        onClick: () => checkDetail(record)\n      }, \"\\u67E5\\u770B\\u8BE6\\u60C5\") : '-';\n    }\n  }];\n  const courtColumns = [{\n    title: '序号',\n    dataIndex: 'name',\n    render: (text, record, index) => {\n      return index + 1;\n    }\n  }, {\n    title: '失信案件发生时间',\n    dataIndex: 'datatime'\n  }, {\n    title: '失信案件执行类型',\n    dataIndex: 'datatype'\n  }, {\n    title: '失信案件执行法院',\n    dataIndex: 'court'\n  }, {\n    title: '失信案件执行标的',\n    dataIndex: 'money'\n  }, {\n    title: '失信案件生效法律文书确定的义务',\n    dataIndex: 'obligation'\n  }, {\n    title: '失信案件被执行人的履行情况',\n    dataIndex: 'performance'\n  }, {\n    title: '失信被执行人行为具体情形',\n    dataIndex: 'concretesituation'\n  }, {\n    title: '执行案件类型',\n    dataIndex: 'execDatatype'\n  }, {\n    title: '执行案件执行法院',\n    dataIndex: 'execCourt'\n  }, {\n    title: '执行案件立案时间',\n    dataIndex: 'execDatatime'\n  }, {\n    title: '执行案件标的',\n    dataIndex: 'execMoney'\n  }, {\n    title: '执行案件状态',\n    dataIndex: 'statute'\n  }, {\n    title: '执行案件做出执行依据的机构',\n    dataIndex: 'basiccourt'\n  }];\n\n  const ContactList = props => {\n    let data = Array.isArray(props.data) ? _.cloneDeep(props.data) : [];\n    data = data.map((v, i) => {\n      let arr = v.showValue ? v.showValue.split('|') : [];\n      return _objectSpread(_objectSpread({}, v), {}, {\n        userName: arr[0],\n        phoneNo: arr[1],\n        contactId: i\n      });\n    });\n    return __jsx(_Table, {\n      dataSource: data,\n      columns: contactColumns,\n      pagination: false,\n      rowKey: \"contactId\"\n    });\n  };\n\n  const ShowValContainer = ({\n    type,\n    showValue\n  }) => {\n    if (idCardImgType.indexOf(type) > -1) {\n      type = 'image';\n    }\n\n    if (type == 'image' || type == 'voice' || type == 'video') {\n      showValue = showValue ? showValue.split(',') : [];\n    }\n\n    const getByType = () => {\n      let template = null;\n\n      switch (type) {\n        case 'image':\n          template = __jsx(\"div\", {\n            className: \"imageBox\"\n          }, __jsx(_Image.PreviewGroup, null, showValue.map((src, i) => {\n            return __jsx(_Image, {\n              src: src,\n              key: i\n            });\n          })));\n          break;\n\n        case 'video':\n          template = __jsx(_Row, {\n            gutter: 10\n          }, showValue.map((src, i) => {\n            return __jsx(_Col, {\n              key: i\n            }, __jsx(\"video\", {\n              width: \"100\",\n              height: \"75\",\n              controls: true\n            }, __jsx(\"source\", {\n              src: src,\n              type: \"video/mp4\"\n            }), __jsx(\"source\", {\n              src: src,\n              type: \"video/ogg\"\n            }), \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301Video\\u6807\\u7B7E\\u3002\"));\n          }));\n          break;\n\n        case 'voice':\n          template = __jsx(\"audio\", {\n            controls: true\n          }, __jsx(\"source\", {\n            src: showValue,\n            type: \"audio/ogg\"\n          }), __jsx(\"source\", {\n            src: showValue,\n            type: \"audio/mpeg\"\n          }), \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301 audio \\u5143\\u7D20\\u3002\");\n          break;\n\n        default:\n          template = showValue;\n      }\n\n      return template;\n    };\n\n    return __jsx(React.Fragment, null, getByType());\n  };\n\n  const ShowDescriptions = props => {\n    const {\n      list\n    } = props.data;\n    let template = Array.isArray(list) ? __jsx(_Descriptions, {\n      bordered: true\n    }, list.map((desc, desc_index) => {\n      let values = desc.showValue;\n      let span = 1;\n\n      if (desc.attrType == 'image' || desc.attrType == 'voice' || desc.attrType == 'video') {\n        values = values ? values.split(',') : [];\n      }\n\n      if (Array.isArray(desc.list) && desc.list.length > 0 || desc.attrType == 'video' && Array.isArray(values) && values.length > 0) {\n        span = 3;\n      }\n\n      return __jsx(_Descriptions.Item, {\n        label: desc.attrName,\n        key: desc_index,\n        span: span\n      }, Array.isArray(desc.list) ? __jsx(ShowDescriptions, {\n        data: desc\n      }) : __jsx(ShowValContainer, {\n        type: desc.attrType,\n        showValue: desc.showValue\n      }));\n    })) : null;\n    return template;\n  };\n\n  const getDetail = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_all_list(router.query.id || props.id); // } = await api.getTestData()\n\n      if (code === 0) {\n        const catDTOS = data.catSnapShotDTOS; // console.log(data.catSnapShotDTOS)\n\n        if (Array.isArray(catDTOS) && catDTOS.length > 0) {\n          setDefaultActiveKey('1');\n          let address = '';\n          let date = '';\n\n          if (Array.isArray(data.catSnapShotDTOS[0].secondLList) && data.catSnapShotDTOS[0].secondLList.length > 0 && Array.isArray(data.catSnapShotDTOS[0].secondLList[0].list)) {\n            let list = data.catSnapShotDTOS[0].secondLList[0].list;\n            list.map(v => {\n              if (v.attrId === 91) {\n                date = v.value;\n              }\n\n              if (v.attrId === 88) {\n                address = v.value;\n              }\n            });\n            console.log(data.catSnapShotDTOS[0].secondLList[0].list[3]);\n          }\n\n          catDTOS[0].secondLList.splice(1, 0, {\n            catName: '身份认证OCR',\n            catType: 'ocr_info',\n            cardId: data.userInfo.certNo,\n            name: data.userInfo.name,\n            address,\n            date,\n            secondList: null\n          });\n        }\n\n        setDetail(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const checkDetail = record => {\n    fetchRiskDetail(record.userType);\n  };\n\n  const fetchRiskDetail = async type => {\n    const {\n      name,\n      certNo,\n      phone,\n      spouseName,\n      spousePhone,\n      spouseCertNo\n    } = detail.userInfo;\n    const params = {\n      orderId: router.query.orderId,\n      userType: type,\n      name: type == 1 ? name : spouseName,\n      idCard: type == 1 ? certNo : spouseCertNo,\n      mobile: type == 1 ? phone : spousePhone\n    };\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiCredit.fetch_risk_detail({\n        params\n      });\n\n      if (code == 0) {\n        setCourtData(data);\n        setShowCourt(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs,\n    extra: __jsx(_Button, {\n      onClick: () => {\n        props.pop();\n      }\n    }, \"\\u8FD4\\u56DE\\u4E0A\\u4E00\\u9875\")\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Descriptions, {\n    title: __jsx(\"div\", {\n      className: styles.userinfo\n    }, __jsx(_Avatar, {\n      size: 64,\n      icon: __jsx(UserOutlined, null)\n    }), __jsx(\"span\", null, detail.name)),\n    extra: __jsx(\"div\", {\n      className: styles.extraTit\n    }, __jsx(\"span\", null, \"\\u8FDB\\u4EF6\\u5355\\u53F7\\uFF1A\"), detail.orderNo),\n    column: 5\n  }, __jsx(_Descriptions.Item, {\n    label: \"\\u5BA2\\u6237\\u7ECF\\u7406\"\n  }, detail.custMgrName, \" \", detail.applyTag), __jsx(_Descriptions.Item, {\n    label: \"\\u8FDB\\u4EF6\\u6E20\\u9053\"\n  }, detail.applySource), __jsx(_Descriptions.Item, {\n    label: \"\\u8054\\u7CFB\\u7535\\u8BDD\"\n  }, detail.phone), __jsx(_Descriptions.Item, {\n    label: \"\\u4EA7\\u54C1\\u540D\\u79F0\"\n  }, detail.productName), __jsx(_Descriptions.Item, {\n    label: \"\\u6388\\u4FE1\\u91D1\\u989D\"\n  }, detail.creditAmount), __jsx(_Descriptions.Item, {\n    label: \"\\u5E74\\u5316\\u5229\\u7387\"\n  }, ' ', detail.yearRate))), __jsx(_Card, {\n    title: detail.orderDesc,\n    style: {\n      marginBottom: 30\n    }\n  }, Array.isArray(detail.loanApplyStatusDetail) ? __jsx(_Steps, {\n    progressDot: true,\n    current: detail.loanApplyStatusDetail.length\n  }, detail.loanApplyStatusDetail.map((v, i) => {\n    return __jsx(Step, {\n      title: v.statusDesc,\n      description: v.updateTime,\n      key: i\n    });\n  })) : null), __jsx(_Tabs, {\n    animated: {\n      tabPane: true\n    },\n    activeKey: defaultActiveKey,\n    onTabClick: key => setDefaultActiveKey(key),\n    tabBarStyle: tabBarStyle\n  }, Array.isArray(detail.catSnapShotDTOS) && detail.catSnapShotDTOS.map((v, i) => {\n    const key = i + 1 + '';\n    return __jsx(TabPane, {\n      className: styles.tabPaneBox,\n      tab: v.catName,\n      key: key\n    }, __jsx(_Card, {\n      title: v.catName\n    }, Array.isArray(v.secondLList) ? v.secondLList.map((s_item, s_index) => {\n      return __jsx(_Card, {\n        style: {\n          marginBottom: 15\n        },\n        key: s_index,\n        type: \"inner\",\n        title: s_item.catName\n      }, //身份认证\n      s_item.catType === 'cat_ocr' && __jsx(_Image.PreviewGroup, null, __jsx(_Row, {\n        gutter: 25\n      }, Array.isArray(s_item.list) && s_item.list.filter(img => idCardImgType.indexOf(img.attrType) > -1).map((img, img_index) => {\n        return __jsx(_Col, {\n          flex: \"0 0 200\",\n          key: img_index\n        }, __jsx(_Image, {\n          style: {\n            'object-fit': 'contain'\n          },\n          width: 200,\n          height: 150,\n          src: img.showValue\n        }), __jsx(\"div\", {\n          className: styles.imgTime\n        }, img.updateTime || '-'));\n      }))), s_item.catType === 'ocr_info' && __jsx(\"div\", null, __jsx(_Row, null, __jsx(_Col, {\n        span: 2\n      }, \"\\u59D3\\u540D:\"), __jsx(_Col, {\n        span: 10\n      }, s_item.name), __jsx(_Col, {\n        span: 2\n      }, \"\\u5730\\u5740:\"), __jsx(_Col, {\n        span: 10\n      }, s_item.address)), __jsx(_Row, null, __jsx(_Col, {\n        span: 2\n      }, \"\\u8EAB\\u4EFD\\u8BC1:\"), __jsx(_Col, {\n        span: 10\n      }, s_item.cardId), __jsx(_Col, {\n        span: 2\n      }, \"\\u6709\\u6548\\u671F:\"), __jsx(_Col, {\n        span: 10\n      }, s_item.date))), //基本信息\n      s_item.catType === 'cat_info' && __jsx(ShowDescriptions, {\n        data: s_item\n      }), //联系人信息\n      s_item.catType === 'cat_contact' && __jsx(ContactList, {\n        data: s_item.list\n      }));\n    }) : null));\n  }), __jsx(TabPane, {\n    tab: \"\\u98CE\\u63A7\\u51B3\\u7B56\",\n    key: \"tab\"\n  }, __jsx(_Card, {\n    title: \"\\u98CE\\u63A7\\u51B3\\u7B56\"\n  }, Array.isArray(detail.riskList) ? detail.riskList.map((riskItem, i) => {\n    const list = Array.isArray(riskItem.riskBaseInfoList) ? riskItem.riskBaseInfoList.map((v, i) => {\n      v.riskId = i;\n      v.userType = riskItem.userType;\n      return v;\n    }) : [];\n    return __jsx(\"div\", {\n      className: styles.fkjc,\n      key: i\n    }, __jsx(\"h3\", {\n      className: \"title\"\n    }, riskItem.userType == 1 ? '借款人' : '借款人配偶'), __jsx(_Row, {\n      gutter: 24,\n      className: \"desc\"\n    }, __jsx(_Col, null, \"\\u6267\\u884C\\u6761\\u6570\\uFF1A\", riskItem.resultCount), __jsx(_Col, null, \"\\u547D\\u4E2D\\u62D2\\u7EDD\\uFF1A\", riskItem.denyCount)), __jsx(_Table, {\n      dataSource: list,\n      columns: riskColumns,\n      pagination: false,\n      bordered: true,\n      rowKey: \"riskId\"\n    }));\n  }) : null))), __jsx(_Modal, {\n    title: \"\\u8BE6\\u60C5\",\n    width: \"80%\",\n    footer: null,\n    onCancel: () => setShowCourt(false),\n    visible: showCourt\n  }, __jsx(_Table, {\n    dataSource: courtData,\n    columns: courtColumns,\n    pagination: false,\n    bordered: true,\n    rowKey: \"id\"\n  })));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}