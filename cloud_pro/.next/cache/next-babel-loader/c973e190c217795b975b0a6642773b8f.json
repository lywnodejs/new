{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/collection';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 20\n  }\n};\nvar tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 20\n  }\n};\n\nfunction BatchedAssignModal(props) {\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(props.visible),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      batchedAssignModal = _Form$useForm2[0];\n\n  useEffect(function () {\n    setVisible(props.visible);\n\n    if (props.visible) {\n      setLoading(false);\n      batchedAssignModal.resetFields();\n    }\n  }, [props.visible]);\n\n  var onEdit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values, params, _yield$api$edit_overd, _yield$api$edit_overd2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return batchedAssignModal.validateFields();\n\n            case 3:\n              values = _context.sent;\n              console.log(values);\n              params = {\n                collectionOrderIdList: null,\n                accountIdList: _toConsumableArray(values.accountIds),\n                accountNameList: [],\n                companyIdList: [1],\n                productId: values.productId,\n                sendOrderNum: values.sendOrderNum,\n                collectionLevel: values.collectionLevel,\n                type: 2\n              };\n              values.accountIds.forEach(function (id) {\n                var item = props.showList.find(function (item) {\n                  return item.id == id;\n                });\n                params.accountNameList.push(item.accountName);\n              });\n              setLoading(true);\n              props.onOk(params, onFail);\n              return _context.abrupt(\"return\");\n\n            case 12:\n              _yield$api$edit_overd = _context.sent;\n              _yield$api$edit_overd2 = _yield$api$edit_overd.data;\n              data = _yield$api$edit_overd2.data;\n              code = _yield$api$edit_overd2.code;\n\n              if (code == 0) {\n                onHide();\n\n                _message.success('按量分配成功');\n\n                pullData();\n              }\n\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Failed:', _context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    return function onEdit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onFail = function onFail() {\n    setLoading(false);\n  };\n\n  var onAllSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return batchedAssignModal.validateFields(['productId', 'collectionLevel']);\n\n            case 2:\n              values = _context2.sent;\n              props.onSearch(values);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onAllSearch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(_Modal, {\n    title: \"\\u6309\\u91CF\\u5206\\u914D\",\n    visible: visible,\n    onOk: onEdit,\n    onCancel: props.onHide,\n    confirmLoading: loading,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\",\n    width: 600,\n    destroyOnClose: true\n  }, __jsx(_Form, _extends({}, layout, {\n    form: batchedAssignModal,\n    name: \"batchedAssignModal\",\n    initialValues: {\n      productId: '',\n      collectionLevel: ''\n    }\n  }), __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\",\n    name: \"productId\",\n    rules: [{\n      required: true,\n      message: '请先选择产品'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\"\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u8BF7\\u9009\\u62E9\"), props.productList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u50AC\\u6536\\u7EA7\\u522B\",\n    name: \"collectionLevel\",\n    rules: [{\n      required: true,\n      message: '请先选择催收级别'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\"\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u8BF7\\u9009\\u62E9\"), props.collectionLevels.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.code\n    }, v.description);\n  }))), __jsx(_Form.Item, tailLayout, __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    onClick: onAllSearch\n  }, \"\\u603B\\u5355\\u6570\\u67E5\\u8BE2\"), __jsx(\"span\", null, \"\\u5F53\\u524D\\u603B\\u5355\\u6570\\uFF1A\", props.total)), __jsx(_Form.Item, {\n    label: \"\\u5206\\u914D\\u6570\\u91CF\",\n    name: \"sendOrderNum\",\n    rules: [{\n      required: true,\n      message: '请输入分配数量'\n    }]\n  }, __jsx(_InputNumber, {\n    style: {\n      width: '100%'\n    },\n    min: 1,\n    precision: 0,\n    max: props.total || 1,\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u6574\\u6570\\uFF0C\\u4E0D\\u5F97\\u8D85\\u8FC7\\u603B\\u5355\\u6570\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u4EBA\\u5458\",\n    rules: [{\n      required: true,\n      message: '请选择分配对象'\n    }],\n    name: \"accountIds\"\n  }, __jsx(_Select, {\n    mode: \"multiple\",\n    style: {\n      width: 450\n    }\n  }, props.showList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: i\n    }, v.accountName, \"_\", v.roleName);\n  })))));\n}\n\nexport default BatchedAssignModal;","map":null,"metadata":{},"sourceType":"module"}