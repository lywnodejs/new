{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nconst {\n  RangePicker\n} = _DatePicker;\n\nconst getInitDay = () => {\n  const currentDay = moment().format('YYYY-MM-DD');\n  const firstDay = moment().format('YYYY-MM') + '-01';\n  return [moment(firstDay), moment(currentDay)];\n};\n\nconst getInitMouth = () => {\n  const mouth = moment().format('YYYY-MM');\n  return [moment(mouth), moment(mouth)];\n};\n\nconst SearchForm = ({\n  onSearch,\n  netWorks,\n  activeKey,\n  proList\n}) => {\n  const {\n    0: picker,\n    1: setPicker\n  } = useState('date');\n\n  const [form] = _Form.useForm();\n\n  useEffect(() => {\n    form.resetFields();\n    setPicker('date');\n    form.setFieldsValue({\n      time: getInitDay()\n    });\n    onSearch(form.getFieldsValue());\n  }, [activeKey]);\n\n  const downloadData = () => {\n    onSearch(form.getFieldsValue(), true);\n  };\n\n  const changeReportType = val => {\n    setPicker(val == 1 ? 'month' : 'date');\n    form.setFieldsValue({\n      time: val == 1 ? getInitMouth() : getInitDay()\n    });\n  };\n\n  const getFields = () => {\n    let children = [__jsx(_Form.Item, {\n      name: \"reportType\",\n      label: \"\\u62A5\\u8868\\u7C7B\\u578B\"\n    }, __jsx(_Select, {\n      style: {\n        width: '130px'\n      },\n      onChange: changeReportType\n    }, __jsx(_Select.Option, {\n      value: \"0\"\n    }, \"\\u65E5\\u62A5\\u8868\"), __jsx(_Select.Option, {\n      value: \"1\"\n    }, \"\\u6708\\u62A5\\u8868\"), __jsx(_Select.Option, {\n      value: \"2\"\n    }, \"\\u7EDF\\u8BA1\\u62A5\\u8868\"))), __jsx(_Form.Item, {\n      label: \"\\u65E5\\u671F\\u9009\\u62E9\",\n      name: \"time\"\n    }, __jsx(RangePicker, {\n      picker: picker\n    })), __jsx(_Form.Item, {\n      name: \"networkId\",\n      label: \"\\u7F51\\u70B9\\u540D\\u79F0\"\n    }, __jsx(_Select, {\n      style: {\n        width: '130px'\n      }\n    }, __jsx(_Select.Option, {\n      value: null\n    }, \"\\u5168\\u90E8\"), netWorks.map((v, i) => __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.name)))), __jsx(_Form.Item, {\n      name: \"productId\",\n      label: \"\\u4EA7\\u54C1\\u540D\\u79F0\"\n    }, __jsx(_Select, {\n      style: {\n        width: '130px'\n      }\n    }, __jsx(_Select.Option, {\n      value: null\n    }, \"\\u5168\\u90E8\"), Array.isArray(proList) && proList.map((v, i) => __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.productName))))];\n\n    if (activeKey == 1) {\n      children = [...children, __jsx(_Form.Item, {\n        name: \"managerName\",\n        label: \"\\u5BA2\\u6237\\u7ECF\\u7406\"\n      }, __jsx(_Input, null)), __jsx(_Form.Item, {\n        name: \"jobNumber\",\n        label: \"\\u5DE5\\u53F7\"\n      }, __jsx(_Input, null))];\n    }\n\n    return children;\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  return __jsx(_Form, {\n    form: form,\n    onFinish: onSearch,\n    layout: \"inline\",\n    className: \"searchForm\",\n    initialValues: {\n      reportType: '0',\n      networkId: null,\n      productId: null\n    }\n  }, getFields(), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    onClick: downloadData\n  }, \"\\u5BFC\\u51FA\"));\n};\n\nexport default SearchForm;","map":null,"metadata":{},"sourceType":"module"}