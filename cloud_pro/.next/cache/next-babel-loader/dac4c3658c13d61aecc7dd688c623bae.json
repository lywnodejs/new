{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiProduct from '~/api/product';\nimport apiBusiness from '~/api/business';\nimport moment from 'moment';\nimport apiAccounting from '~/api/accounting';\nvar pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nvar RangePicker = _DatePicker.RangePicker;\n\nvar getCurrentMonthFirst = function getCurrentMonthFirst() {\n  var date = new Date();\n  date.setDate(1);\n  return date;\n};\n\nvar getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var values,\n        _values,\n        time,\n        _yield$apiProduct$get,\n        _yield$apiProduct$get2,\n        code,\n        data,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            values = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _values = values, time = _values.time;\n\n            if (Array.isArray(time)) {\n              values = _objectSpread(_objectSpread({}, values), {}, {\n                startTime: moment(time[0]).format('YYYY-MM-DD'),\n                endTime: moment(time[1]).format('YYYY-MM-DD')\n              });\n            } else if (time === undefined) {\n              values = _objectSpread(_objectSpread({}, values), {}, {\n                startTime: moment(getCurrentMonthFirst(), 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                endTime: moment(new Date(new Date().setDate(new Date().getDate()))).format('YYYY-MM-DD')\n              });\n            } else if (time === null) {\n              values = _objectSpread(_objectSpread({}, values), {}, {\n                startTime: null,\n                endTime: null\n              });\n            }\n\n            delete values.time;\n            _context.prev = 4;\n            _context.next = 7;\n            return apiProduct.getMechanism(_objectSpread(_objectSpread({}, pageParams), values));\n\n          case 7:\n            _yield$apiProduct$get = _context.sent;\n            _yield$apiProduct$get2 = _yield$apiProduct$get.data;\n            code = _yield$apiProduct$get2.code;\n            data = _yield$apiProduct$get2.data;\n\n            if (!(code == 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", data);\n\n          case 13:\n            return _context.abrupt(\"return\", {\n              total: 0,\n              list: []\n            });\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](4);\n            return _context.abrupt(\"return\", {\n              total: 0,\n              list: []\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 16]]);\n  }));\n\n  return function getData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar breadcrumbs = [{\n  text: 'BI报表'\n}, {\n  text: '业务台账'\n}, {\n  text: '机构考核报表'\n}];\n\nfunction body(props) {\n  _s();\n\n  var _useState = useState(props.data),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState2 = useState({}),\n      searchParams = _useState2[0],\n      setSearchParams = _useState2[1];\n\n  var _useState3 = useState([]),\n      products = _useState3[0],\n      setProducts = _useState3[1];\n\n  useEffect(function () {\n    getBranch4search();\n  }, []);\n\n  var onSearch = function onSearch(value) {\n    pageParams.pageNum = 1;\n    updateList(_objectSpread(_objectSpread({}, value), pageParams));\n    setSearchParams(_objectSpread(_objectSpread({}, value), pageParams));\n  };\n\n  var onResetForm = function onResetForm() {\n    form.resetFields();\n    onSearch();\n  };\n\n  var getBranch4search = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$apiBusiness$ge, _yield$apiBusiness$ge2, code, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return apiBusiness.getBranch4other();\n\n            case 2:\n              _yield$apiBusiness$ge = _context2.sent;\n              _yield$apiBusiness$ge2 = _yield$apiBusiness$ge.data;\n              code = _yield$apiBusiness$ge2.code;\n              data = _yield$apiBusiness$ge2.data;\n\n              if (code == 0) {\n                setProducts(data || []);\n              } else {\n                setProducts([]);\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getBranch4search() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChangePage = function onChangePage() {\n    var pageNum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : pageParams.pageNum;\n    pageParams.pageNum = pageNum;\n    updateList(_objectSpread(_objectSpread({}, searchParams), pageParams));\n  };\n\n  var updateList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getData(_objectSpread({}, params));\n\n            case 2:\n              data = _context3.sent;\n              setData(data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function updateList(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: '日期',\n    dataIndex: 'statDate',\n    align: 'left',\n    fixed: 'left'\n  }, {\n    title: '营销部门',\n    dataIndex: 'orgName',\n    align: 'left',\n    fixed: 'left'\n  }, {\n    title: '新增贷款笔数',\n    dataIndex: 'loanNum',\n    align: 'left'\n  }, {\n    title: '新增贷款金额',\n    dataIndex: 'loanAmount',\n    align: 'left'\n  }, {\n    title: '累计贷款笔数',\n    dataIndex: 'cumulativeLoanNum',\n    align: 'left'\n  }, {\n    title: '累计贷款金额',\n    dataIndex: 'cumulativeLoanAmount',\n    align: 'left'\n  }, {\n    title: '新增授信金额',\n    dataIndex: 'creditAmount',\n    align: 'left'\n  }, {\n    title: '累计授信金额',\n    dataIndex: 'cumulativeCreditAmount',\n    align: 'left'\n  }, {\n    title: '贷款余额',\n    dataIndex: 'balance',\n    align: 'left'\n  }, {\n    title: '用信率',\n    dataIndex: 'loanRate',\n    align: 'left'\n  }, {\n    title: '户均金额',\n    dataIndex: 'perHouseholdAmount',\n    align: 'left'\n  }, {\n    title: '支农比例',\n    dataIndex: 'supportAgricultureRatio',\n    align: 'left'\n  }, {\n    title: '支小比例',\n    dataIndex: 'supportSmallRatio',\n    align: 'left'\n  }, {\n    title: '应收利息',\n    dataIndex: 'interestReceivable',\n    align: 'left'\n  }, {\n    title: '实收利息',\n    dataIndex: 'netReceiptsInterest',\n    align: 'left'\n  }, {\n    title: '收息率',\n    dataIndex: 'interestCollectionRatio',\n    align: 'left'\n  }, {\n    title: '逾期本金',\n    dataIndex: 'overduePrincipal',\n    align: 'left'\n  }, {\n    title: '逾期利息',\n    dataIndex: 'overdueInterest',\n    align: 'left'\n  }, {\n    title: '逾期率',\n    dataIndex: 'overdueRatio',\n    align: 'left'\n  }];\n  var paginationConfig = {\n    total: data.total,\n    current: pageParams.pageNum,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(total, \" \\u6761\");\n    },\n    onChange: onChangePage\n  };\n\n  var exportExcel = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var values, postData, _yield$apiAccounting$, _yield$apiAccounting$2, _data, code;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              values = form.getFieldValue();\n              postData = {};\n              _context4.prev = 2;\n\n              if (Array.isArray(values.time)) {\n                postData = {\n                  startTime: moment(values.time[0]).format('YYYY-MM-DD'),\n                  endTime: moment(values.time[1]).format('YYYY-MM-DD')\n                };\n              }\n\n              delete values.time;\n              _context4.next = 7;\n              return apiAccounting.fetch_mechanism_export(_objectSpread(_objectSpread({}, values), postData));\n\n            case 7:\n              _yield$apiAccounting$ = _context4.sent;\n              _yield$apiAccounting$2 = _yield$apiAccounting$.data;\n              _data = _yield$apiAccounting$2.data;\n              code = _yield$apiAccounting$2.code;\n\n              if (code == 0) {\n                window.open(_data);\n              }\n\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log(_context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 14]]);\n    }));\n\n    return function exportExcel() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Form, {\n    form: form,\n    name: \"search\",\n    onFinish: onSearch,\n    layout: \"inline\",\n    initialValues: {\n      time: [moment(getCurrentMonthFirst(), 'YYYY-MM-DD'), moment(new Date(new Date().setDate(new Date().getDate())), 'YYYY-MM-DD')],\n      companyId: ''\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u8425\\u9500\\u90E8\\u95E8\",\n    name: \"companyId\"\n  }, __jsx(_Select, {\n    style: {\n      width: 120\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), products.map(function (v) {\n    return __jsx(_Select.Option, {\n      key: v.id,\n      value: v.id\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u65E5\\u671F\",\n    name: \"time\"\n  }, __jsx(RangePicker, null)), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\")), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"default\",\n    onClick: onResetForm\n  }, \"\\u91CD\\u7F6E\")), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: exportExcel,\n    type: \"primary\"\n  }, \"\\u5BFC\\u51FA\"))), __jsx(_Table, {\n    bordered: true,\n    rowKey: function rowKey(v, i) {\n      return i;\n    },\n    align: \"center\",\n    scroll: {\n      x: 'max-content'\n    },\n    pagination: paginationConfig,\n    columns: columns,\n    dataSource: data.list || []\n  }));\n}\n\n_s(body, \"A+TU/e6m8RVjXG7YyFClwCteEGM=\", false, function () {\n  return [_Form.useForm];\n});\n\nbody.getInitialProps = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ctx) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return getData();\n\n          case 3:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", {\n              data: data\n            });\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n\n  return function (_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/bi/book/mechanism/index.js"],"names":["Layout","React","useEffect","useState","apiProduct","apiBusiness","moment","apiAccounting","pageParams","pageNum","pageSize","RangePicker","getCurrentMonthFirst","date","Date","setDate","getData","values","time","Array","isArray","startTime","format","endTime","undefined","getDate","getMechanism","data","code","total","list","breadcrumbs","text","body","props","setData","useForm","form","searchParams","setSearchParams","products","setProducts","getBranch4search","onSearch","value","updateList","onResetForm","resetFields","getBranch4other","onChangePage","params","columns","title","dataIndex","align","fixed","paginationConfig","current","showSizeChanger","showQuickJumper","defaultPageSize","showTotal","onChange","exportExcel","getFieldValue","postData","fetch_mechanism_export","window","open","console","log","marginBottom","companyId","width","map","v","id","name","marginRight","i","x","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState} from 'react'\nimport apiProduct from '~/api/product'\nimport apiBusiness from '~/api/business'\nimport {Table, Button, Form, Input, Card, DatePicker, Select} from 'antd'\nimport moment from 'moment'\nimport apiAccounting from '~/api/accounting'\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10,\n}\nconst {RangePicker} = DatePicker\n\nconst getCurrentMonthFirst = () => {\n  var date = new Date()\n  date.setDate(1)\n  return date\n}\n\nconst getData = async (values = {}) => {\n  const {time} = values\n  if (Array.isArray(time)) {\n    values = {\n      ...values,\n      startTime: moment(time[0]).format('YYYY-MM-DD'),\n      endTime: moment(time[1]).format('YYYY-MM-DD'),\n    }\n  } else if (time === undefined) {\n    values = {\n      ...values,\n      startTime: moment(getCurrentMonthFirst(), 'YYYY-MM-DD').format(\n        'YYYY-MM-DD',\n      ),\n      endTime: moment(\n        new Date(new Date().setDate(new Date().getDate())),\n      ).format('YYYY-MM-DD'),\n    }\n  } else if (time === null) {\n    values = {\n      ...values,\n      startTime: null,\n      endTime: null,\n    }\n  }\n  delete values.time\n  try {\n    let {\n      data: {code, data},\n    } = await apiProduct.getMechanism({\n      ...pageParams,\n      ...values,\n    })\n    if (code == 0) {\n      return data\n    }\n    return {\n      total: 0,\n      list: [],\n    }\n  } catch (e) {\n    return {\n      total: 0,\n      list: [],\n    }\n  }\n}\n\nconst breadcrumbs = [\n  {text: 'BI报表'},\n  {text: '业务台账'},\n  {text: '机构考核报表'},\n]\n\nfunction body(props) {\n  const [data, setData] = useState(props.data)\n  const [form] = Form.useForm()\n  const [searchParams, setSearchParams] = useState({})\n  const [products, setProducts] = useState([])\n  useEffect(() => {\n    getBranch4search()\n  }, [])\n  const onSearch = (value) => {\n    pageParams.pageNum = 1\n    updateList({...value, ...pageParams})\n    setSearchParams({...value, ...pageParams})\n  }\n  const onResetForm = () => {\n    form.resetFields()\n    onSearch()\n  }\n\n  const getBranch4search = async () => {\n    let {\n      data: {code, data},\n    } = await apiBusiness.getBranch4other()\n    if (code == 0) {\n      setProducts(data || [])\n    } else {\n      setProducts([])\n    }\n  }\n\n  const onChangePage = (pageNum = pageParams.pageNum) => {\n    pageParams.pageNum = pageNum\n    updateList({...searchParams, ...pageParams})\n  }\n\n  const updateList = async (params) => {\n    let data = await getData({...params})\n    setData(data)\n  }\n\n  const columns = [\n    {\n      title: '日期',\n      dataIndex: 'statDate',\n      align: 'left',\n      fixed: 'left',\n    },\n    {\n      title: '营销部门',\n      dataIndex: 'orgName',\n      align: 'left',\n      fixed: 'left',\n    },\n    {\n      title: '新增贷款笔数',\n      dataIndex: 'loanNum',\n      align: 'left',\n    },\n    {\n      title: '新增贷款金额',\n      dataIndex: 'loanAmount',\n      align: 'left',\n    },\n    {\n      title: '累计贷款笔数',\n      dataIndex: 'cumulativeLoanNum',\n      align: 'left',\n    },\n    {\n      title: '累计贷款金额',\n      dataIndex: 'cumulativeLoanAmount',\n      align: 'left',\n    },\n    {\n      title: '新增授信金额',\n      dataIndex: 'creditAmount',\n      align: 'left',\n    },\n    {\n      title: '累计授信金额',\n      dataIndex: 'cumulativeCreditAmount',\n      align: 'left',\n    },\n    {\n      title: '贷款余额',\n      dataIndex: 'balance',\n      align: 'left',\n    },\n    {\n      title: '用信率',\n      dataIndex: 'loanRate',\n      align: 'left',\n    },\n    {\n      title: '户均金额',\n      dataIndex: 'perHouseholdAmount',\n      align: 'left',\n    },\n    {\n      title: '支农比例',\n      dataIndex: 'supportAgricultureRatio',\n      align: 'left',\n    },\n    {\n      title: '支小比例',\n      dataIndex: 'supportSmallRatio',\n      align: 'left',\n    },\n    {\n      title: '应收利息',\n      dataIndex: 'interestReceivable',\n      align: 'left',\n    },\n    {\n      title: '实收利息',\n      dataIndex: 'netReceiptsInterest',\n      align: 'left',\n    },\n    {\n      title: '收息率',\n      dataIndex: 'interestCollectionRatio',\n      align: 'left',\n    },\n    {\n      title: '逾期本金',\n      dataIndex: 'overduePrincipal',\n      align: 'left',\n    },\n    {\n      title: '逾期利息',\n      dataIndex: 'overdueInterest',\n      align: 'left',\n    },\n    {\n      title: '逾期率',\n      dataIndex: 'overdueRatio',\n      align: 'left',\n    },\n  ]\n\n  const paginationConfig = {\n    total: data.total,\n    current: pageParams.pageNum,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: (total) => `共 ${total} 条`,\n    onChange: onChangePage,\n  }\n\n  const exportExcel = async () => {\n    const values = form.getFieldValue()\n    let postData = {}\n    try {\n      if (Array.isArray(values.time)) {\n        postData = {\n          startTime: moment(values.time[0]).format('YYYY-MM-DD'),\n          endTime: moment(values.time[1]).format('YYYY-MM-DD'),\n        }\n      }\n      delete values.time\n      const {\n        data: {data, code},\n      } = await apiAccounting.fetch_mechanism_export({\n        ...values,\n        ...postData,\n      })\n      if (code == 0) {\n        window.open(data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Card style={{marginBottom: 30}}>\n        <Form\n          form={form}\n          name=\"search\"\n          onFinish={onSearch}\n          layout=\"inline\"\n          initialValues={{\n            time: [\n              moment(getCurrentMonthFirst(), 'YYYY-MM-DD'),\n              moment(\n                new Date(new Date().setDate(new Date().getDate())),\n                'YYYY-MM-DD',\n              ),\n            ],\n            companyId: '',\n          }}\n        >\n          <Form.Item label=\"营销部门\" name=\"companyId\">\n            <Select style={{width: 120}}>\n              <Select.Option value=\"\">全部</Select.Option>\n              {products.map((v) => (\n                <Select.Option key={v.id} value={v.id}>\n                  {v.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"日期\" name=\"time\">\n            <RangePicker />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              查询\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"default\" onClick={onResetForm}>\n              重置\n            </Button>\n          </Form.Item>\n          <Button\n            style={{marginRight: 15}}\n            onClick={exportExcel}\n            type=\"primary\"\n          >\n            导出\n          </Button>\n        </Form>\n      </Card>\n      <Table\n        bordered\n        rowKey={(v, i) => i}\n        align=\"center\"\n        scroll={{x: 'max-content'}}\n        pagination={paginationConfig}\n        columns={columns}\n        dataSource={data.list || []}\n      />\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async (ctx) => {\n  try {\n    let data = await getData()\n    return {data: data}\n  } catch (error) {}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}