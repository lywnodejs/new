{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport apiBusiness from '~/api/business';\nimport apiPay from '~/api/pay';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { useCookies } from 'react-cookie';\nvar RangePicker = _TimePicker.RangePicker;\nvar layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\n\nvar EditModal = function EditModal(props) {\n  var _useState = useState(props.show),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState(false),\n      confirmLoading = _useState2[0],\n      setConfirmLoading = _useState2[1];\n\n  var _useState3 = useState(props.branches || []),\n      showRoles = _useState3[0],\n      setShowRoles = _useState3[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useCookies = useCookies(['name']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _useState4 = useState([]),\n      channels = _useState4[0],\n      setChannels = _useState4[1];\n\n  useEffect(function () {\n    setShow(props.show);\n\n    if (!props.show) {\n      form.resetFields();\n      setConfirmLoading(false);\n    } else {\n      var data = props.data;\n      form.setFieldsValue(data);\n\n      if (data) {\n        changePayType(data.payChannelType, data.payChannelCode);\n      }\n    }\n  }, [props]);\n\n  var changePayType = function changePayType(type, payChannelCode) {\n    var arr = props.channels.filter(function (v) {\n      return v.code.indexOf(\"-\".concat(type)) > -1;\n    });\n    setChannels(arr);\n    form.setFieldsValue({\n      payChannelCode: payChannelCode\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    form.resetFields();\n    form.setFieldsValue(null);\n    props.close();\n  };\n\n  var handleOk = function handleOk() {\n    setConfirmLoading(true);\n    form.validateFields().then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var params, _yield$apiPay$editPay, code;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _extends({}, values);\n\n                if (props.data) {\n                  params.id = props.data.id;\n                }\n\n                _context.next = 4;\n                return apiPay.editPayChannelConfig(params);\n\n              case 4:\n                _yield$apiPay$editPay = _context.sent;\n                code = _yield$apiPay$editPay.data.code;\n                setConfirmLoading(false);\n\n                if (code == 0) {\n                  form.resetFields();\n                  form.setFieldsValue(null);\n                  props.close(true, true);\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      setConfirmLoading(false);\n    });\n  };\n\n  return __jsx(_Modal, {\n    title: props.data ? '编辑' : '新增',\n    visible: show,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    confirmLoading: confirmLoading\n  }, __jsx(_Form, _extends({}, layout, {\n    form: form,\n    name: \"basic\"\n  }), __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\\u540D\\u79F0\",\n    name: \"productType\",\n    rules: [{\n      required: true,\n      message: '请选择产品名称'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u4EA7\\u54C1\\u540D\\u79F0\",\n    style: {\n      width: '200px'\n    }\n  }, props.products.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      value: v.code + '',\n      key: i\n    }, v.description);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u652F\\u4ED8\\u7C7B\\u578B\",\n    name: \"payChannelType\",\n    rules: [{\n      required: true,\n      message: '请选择支付类型'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u652F\\u4ED8\\u7C7B\\u578B\",\n    style: {\n      width: '200px'\n    },\n    onChange: function onChange(v) {\n      return changePayType(v);\n    }\n  }, __jsx(_Select.Option, {\n    value: \"in\"\n  }, \"\\u6536\\u6B3E\"), __jsx(_Select.Option, {\n    value: \"out\"\n  }, \"\\u653E\\u6B3E\"))), __jsx(_Form.Item, {\n    label: \"\\u652F\\u4ED8\\u901A\\u9053\",\n    name: \"payChannelCode\",\n    rules: [{\n      required: true,\n      message: '请选择支付通道'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u652F\\u4ED8\\u901A\\u9053\",\n    style: {\n      width: '200px'\n    }\n  }, channels.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      value: v.code,\n      key: i\n    }, v.description);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u8DEF\\u7531\\u6BD4\\u4F8B\",\n    name: \"channelWeight\",\n    rules: [{\n      required: true,\n      message: '路由比例不可为空'\n    }]\n  }, __jsx(_InputNumber, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u8DEF\\u7531\\u6BD4\\u4F8B\\uFF080-100\\uFF09\",\n    min: 0,\n    max: 100,\n    precision: 0\n  })), __jsx(_Form.Item, {\n    label: \"\\u542F\\u7528\\u72B6\\u6001\",\n    name: \"relaStatus\",\n    rules: [{\n      required: true,\n      message: '请选择启用状态'\n    }]\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: 1\n  }, \"\\u542F\\u7528\"), __jsx(_Radio, {\n    value: 0\n  }, \"\\u505C\\u7528\")))));\n};\n\nexport default EditModal;","map":null,"metadata":{},"sourceType":"module"}