{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/collection';\nimport TreeMembers from './TreeMembers';\n\nfunction AssignModal(props) {\n  const {\n    visible,\n    onHide,\n    orderIds,\n    pullData,\n    tenantId,\n    onAssignSubmit,\n    sourceCom\n  } = props;\n  const {\n    0: pids,\n    1: setPids\n  } = useState([]);\n  const {\n    0: accountIds,\n    1: setAccountIds\n  } = useState([]);\n  const {\n    0: accountNames,\n    1: setAccountNames\n  } = useState([]);\n  const {\n    0: companyIds,\n    1: setCompanyIds\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {}\n\n    visible && fetchData();\n  }, [visible]);\n\n  const onEdit = async () => {\n    console.log(pids);\n\n    try {\n      if (pids.length) {\n        const pidSource = Math.max.apply(null, pids);\n        const pidTarget = Math.min.apply(null, pids);\n\n        if (pidSource !== pidTarget) {\n          return _message.error('分配对象需同一岗位级别');\n        }\n      }\n\n      if (!accountIds.length) {\n        return _message.error(`请选择要分配的${onAssignSubmit && sourceCom != 'cs' ? '信审员' : sourceCom == 'cs' ? '所选人数' : '催收员'}`);\n      }\n\n      if (orderIds.length < accountIds.length) {\n        return _message.error(`${onAssignSubmit && sourceCom != 'cs' ? '订单数量不能小于信审员数量' : sourceCom == 'cs' ? '分配单数不能小于所选人数' : '催收单数量不能小于催收员数量'}`);\n      }\n\n      if (onAssignSubmit) {\n        typeof onAssignSubmit === 'function' && onAssignSubmit({\n          orderIds,\n          accountIds,\n          accountNames,\n          assignType: 1\n        });\n        return;\n      }\n\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.edit_overdueAlloc_allselect({\n        type: 1,\n        collectionOrderIdList: orderIds,\n        accountIdList: accountIds,\n        accountNameList: accountNames,\n        companyIdList: companyIds,\n        tenantId\n      });\n\n      if (code == 0) {\n        onHide();\n\n        _message.success('选择分配成功');\n\n        pullData();\n      }\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return __jsx(_Modal, {\n    title: \"\\u9009\\u62E9\\u5206\\u914D\",\n    maskClosable: false,\n    visible: visible,\n    onOk: onEdit,\n    onCancel: onHide,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\",\n    width: 600,\n    height: 600\n  }, __jsx(_Row, {\n    gutter: [0, 16]\n  }, __jsx(_Col, {\n    span: 4\n  }, \"\\u9009\\u4E2D\\u6570\\u91CF\\uFF1A\"), __jsx(_Col, {\n    span: 20\n  }, Array.isArray(orderIds) ? orderIds.length : 0, \"\\u4E2A\\uFF0C\\u8BF7\\u9009\\u62E9\\u5206\\u914D\\u5BF9\\u8C61\")), __jsx(_Row, {\n    gutter: [0, 260]\n  }, __jsx(_Col, {\n    span: 2\n  }, \"\\u4EBA\\u5458\\uFF1A\"), __jsx(_Col, {\n    span: 22\n  }, __jsx(TreeMembers, {\n    onSetPids: payload => setPids(payload),\n    onSetAccountIds: payload => setAccountIds(payload),\n    onSetAccountNames: payload => setAccountNames(payload),\n    onSetCompanyIds: payload => setCompanyIds(payload)\n  }))));\n}\n\nexport default AssignModal;","map":null,"metadata":{},"sourceType":"module"}