{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useCookies } from 'react-cookie';\nimport React, { useEffect, useState } from 'react';\nimport api from '~/api/authority';\nimport TreeMembers from '~/components/common/TreeMembers';\nimport _ from 'lodash';\n\nfunction accountForm(props) {\n  const [accountForm] = _Form.useForm();\n\n  const {\n    selectIndex,\n    visible,\n    onHide,\n    selectItem,\n    changePageParams\n  } = props;\n  const [cookies] = useCookies(['name']);\n  useEffect(() => {\n    if (selectIndex == -1) {\n      accountForm.resetFields();\n    } else {\n      accountForm.setFieldsValue(_objectSpread({}, selectItem));\n    }\n  }, [visible, selectIndex]);\n\n  const onEdit = async () => {\n    try {\n      const params = Object.assign({}, await accountForm.validateFields());\n\n      if (selectIndex != -1) {\n        params.id = selectItem.id;\n      }\n\n      const {\n        data\n      } = await api.editAccount(params);\n\n      if (data.code == 0) {\n        onHide();\n\n        _message.success('保存成功');\n\n        if (selectIndex != -1) {\n          changePageParams();\n        } else {\n          changePageParams(1);\n        }\n      }\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return __jsx(_Modal, {\n    title: selectIndex === -1 ? '新增' : '编辑',\n    maskClosable: false,\n    visible: visible,\n    destroyOnClose: true,\n    forceRender: true,\n    onOk: onEdit,\n    onCancel: onHide,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\"\n  }, __jsx(_Form, {\n    key: Date.now,\n    form: accountForm,\n    name: \"accountForm\",\n    initialValues: {\n      status: 1\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u59D3\\u540D\",\n    name: \"accountName\",\n    rules: [{\n      required: true,\n      message: '请输入姓名'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (value && value.length > 20) {\n          return Promise.reject('输入范围大于0字符，小于等于20字符');\n        }\n\n        return Promise.resolve();\n      }\n\n    })]\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\uFF0C\\u6700\\u591A20\\u5B57\\u7B26\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u624B\\u673A\\u53F7\\u7801\",\n    name: \"mobile\",\n    rules: [{\n      required: true,\n      message: '手机号码'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (value && value.length > 20) {\n          return Promise.reject('输入范围大于0字符，小于等于20字符');\n        }\n\n        if (!/^1[3456789]\\d{9}$/.test(value)) {\n          // alert('手机号码有误')\n          return Promise.reject('手机号码有误');\n        }\n\n        return Promise.resolve();\n      }\n\n    })]\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\\u7801\\uFF08\\u767B\\u5F55\\u8D26\\u53F7\\uFF09\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u90AE\\u7BB1\",\n    name: \"email\",\n    rules: [// {required: true, message: '请输入登录邮箱'},\n    ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (value && value.length > 50) {\n          return Promise.reject('输入范围大于0字符，小于等于50字符');\n        }\n\n        return Promise.resolve();\n      }\n\n    })]\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\uFF0C\\u6700\\u591A50\\u5B57\\u7B26\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u90E8\\u95E8\",\n    name: \"departmentId\",\n    rules: [{\n      required: true,\n      message: '请选择部门'\n    }]\n  }, __jsx(_Select, {\n    showSearch: true,\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u90E8\\u95E8\",\n    filterOption: false,\n    defaultActiveFirstOption: false,\n    onSearch: props.handleSearchDepart,\n    onChange: props.handleChangeDepart,\n    style: {\n      width: '200px'\n    }\n  }, props.showDepartments.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: i\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u89D2\\u8272\",\n    name: \"roleId\",\n    rules: [{\n      required: true,\n      message: '请选择角色'\n    }]\n  }, __jsx(_Select, {\n    showSearch: true,\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u89D2\\u8272\",\n    filterOption: false,\n    defaultActiveFirstOption: false,\n    onSearch: props.handleSearchRole,\n    onChange: props.handleChangeRole,\n    style: {\n      width: '200px'\n    }\n  }, props.showRoles.map(v => {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: v.id\n    }, v.roleName);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u72B6\\u6001\",\n    name: \"status\",\n    rules: [{\n      required: true,\n      message: '请选择状态'\n    }]\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: 1\n  }, \"\\u542F\\u7528\"), __jsx(_Radio, {\n    value: 0\n  }, \"\\u7981\\u7528\"))), __jsx(_Form.Item, {\n    label: \"\\u4EBA\\u5458\\u5907\\u6CE8\",\n    name: \"personRemark\",\n    rules: [({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (value && value.length > 50) {\n          return Promise.reject('输入范围小于等于50字符');\n        }\n\n        return Promise.resolve();\n      }\n\n    })]\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\uFF0C\\u6700\\u591A50\\u5B57\\u7B26\"\n  }))));\n}\n\naccountForm.getInitialProps = async () => ({});\n\nexport default accountForm;","map":null,"metadata":{},"sourceType":"module"}