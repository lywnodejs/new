{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport businessApi from '~/api/business';\nimport proApi from '~/api/product';\nimport SearchForm from './SearchForm';\nimport { useCookies } from 'react-cookie';\nimport moment from 'moment';\nvar pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nvar dataType = [{\n  type: '0',\n  key: 'allStatisticsVoList'\n}, {\n  type: '1',\n  key: 'networkStatisticsVoList'\n}, {\n  type: '2',\n  key: 'managerStatisticsVoList'\n}];\n\nvar getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var params,\n        _yield$businessApi$ge,\n        _yield$businessApi$ge2,\n        code,\n        data,\n        item,\n        key,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _args.length > 0 && _args[0] !== undefined ? _args[0] : pageParams;\n            _context.prev = 1;\n            _context.next = 4;\n            return businessApi.getTaskList(params);\n\n          case 4:\n            _yield$businessApi$ge = _context.sent;\n            _yield$businessApi$ge2 = _yield$businessApi$ge.data;\n            code = _yield$businessApi$ge2.code;\n            data = _yield$businessApi$ge2.data;\n\n            if (!(code == 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            item = dataType.find(function (v) {\n              return v.type == params.statisticsType;\n            });\n            key = item.key || '';\n            data.list = data.vo[key] || [];\n            return _context.abrupt(\"return\", data);\n\n          case 13:\n            return _context.abrupt(\"return\", []);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", []);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 16]]);\n  }));\n\n  return function getData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getInitMouth = function getInitMouth() {\n  var mouth = moment().format('YYYY-MM');\n  return [moment(mouth), moment(mouth)];\n};\n\nvar breadcrumbs = [{\n  text: '客户经理管理'\n}, {\n  text: '任务分配统计'\n}];\nvar columns0 = [{\n  title: '日期',\n  dataIndex: 'dateTime'\n}, {\n  title: '客户经理数量',\n  dataIndex: 'managerCount'\n}, {\n  title: '分配数量',\n  dataIndex: 'distributeCount'\n}, {\n  title: '完成数量',\n  dataIndex: 'finishCount'\n}, {\n  title: '完成度',\n  dataIndex: 'finishRate'\n}].map(function (v) {\n  v.align = 'center';\n  return v;\n});\nvar columns1 = [{\n  title: '日期',\n  dataIndex: 'dateTime'\n}, {\n  title: '支行代码',\n  dataIndex: 'networkCode'\n}, {\n  title: '网点名称',\n  dataIndex: 'networkName'\n}, {\n  title: '客户经理数量',\n  dataIndex: 'managerCount'\n}, {\n  title: '分配数量',\n  dataIndex: 'distributeCount'\n}, {\n  title: '完成数量',\n  dataIndex: 'finishCount'\n}, {\n  title: '完成度',\n  dataIndex: 'finishRate'\n}].map(function (v) {\n  v.align = 'center';\n  return v;\n});\nvar columns2 = [{\n  title: '日期',\n  dataIndex: 'dateTime'\n}, {\n  title: '客户经理',\n  dataIndex: 'managerName'\n}, {\n  title: '工号',\n  dataIndex: 'jobNumber'\n}, {\n  title: '所属网点',\n  dataIndex: 'networkName'\n}, {\n  title: '分配数量',\n  dataIndex: 'distributeCount'\n}, {\n  title: '完成数量',\n  dataIndex: 'finishCount'\n}, {\n  title: '完成度',\n  dataIndex: 'finishRate'\n}].map(function (v) {\n  v.align = 'center';\n  return v;\n});\n\nfunction body(props) {\n  var _useState = useState(props.data),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState({}),\n      searchParams = _useState2[0],\n      setSearchParams = _useState2[1];\n\n  var _useState3 = useState([]),\n      netWorks = _useState3[0],\n      setNetWorks = _useState3[1];\n\n  var _useState4 = useState([]),\n      proList = _useState4[0],\n      setProList = _useState4[1];\n\n  var _useState5 = useState('0'),\n      activeKey = _useState5[0],\n      setActiveKey = _useState5[1];\n\n  var _useCookies = useCookies(['name']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _useCookies3 = useCookies(['tenantId']),\n      _useCookies4 = _slicedToArray(_useCookies3, 1),\n      cookiesTenantId = _useCookies4[0];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState6 = useState([]),\n      branch4search = _useState6[0],\n      setBranch4search = _useState6[1];\n\n  useEffect(function () {\n    fetchProList();\n    getBranch4search();\n  }, []); // 获取产品\n\n  var fetchProList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$proApi$getProd, _yield$proApi$getProd2, _data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return proApi.getProduct4search({\n                tenantId: cookiesTenantId.tenantId\n              });\n\n            case 3:\n              _yield$proApi$getProd = _context2.sent;\n              _yield$proApi$getProd2 = _yield$proApi$getProd.data;\n              _data = _yield$proApi$getProd2.data;\n              code = _yield$proApi$getProd2.code;\n\n              if (code === 0) {\n                setProList(_data);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function fetchProList() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // 获取网点\n\n\n  var getBranch4search = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$businessApi$ge3, _yield$businessApi$ge4, code, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return businessApi.getBranch4other();\n\n            case 2:\n              _yield$businessApi$ge3 = _context3.sent;\n              _yield$businessApi$ge4 = _yield$businessApi$ge3.data;\n              code = _yield$businessApi$ge4.code;\n              data = _yield$businessApi$ge4.data;\n\n              if (code == 0) {\n                setBranch4search(data || []);\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getBranch4search() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var changeTab = function changeTab(key) {\n    setActiveKey(key);\n    initList(key);\n  };\n\n  var initList = function initList(key) {\n    form.resetFields();\n    onSearch(form.getFieldsValue(), key);\n  };\n\n  var onSearch = function onSearch(params, key) {\n    var new_params = params == 'export' ? form.getFieldsValue() : params || form.getFieldsValue();\n    pageParams.pageNo = 1;\n\n    if (Array.isArray(new_params.time)) {\n      var format = new_params.reportType == 1 ? 'YYYY-MM' : 'YYYY-MM-DD';\n      new_params.startTime = moment(new_params.time[0]).format(format);\n      new_params.endTime = moment(new_params.time[1]).format(format);\n\n      if (new_params.reportType == 1) {\n        new_params.startTime += '-00';\n        new_params.endTime += '-00';\n      }\n    }\n\n    new_params.statisticsType = key || activeKey;\n    delete new_params.time;\n    setSearchParams(_objectSpread({}, new_params));\n\n    var all_params = _objectSpread(_objectSpread({}, new_params), pageParams);\n\n    if (params == 'export') {\n      downloadData(all_params);\n    } else {\n      updateList(all_params);\n    }\n  };\n\n  var onChangePage = function onChangePage() {\n    var pageNo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : pageParams.pageNo;\n    pageParams.pageNo = pageNo;\n    updateList(_objectSpread(_objectSpread({}, searchParams), pageParams));\n  };\n\n  var updateList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return getData(_objectSpread({}, params));\n\n            case 2:\n              data = _context4.sent;\n              console.log(data);\n              setData(data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function updateList(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var downloadData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return businessApi.exportTaskData(params);\n\n            case 2:\n              data = _context5.sent;\n\n              if (data.data.code == 0) {\n                if (data.data.data) {\n                  window.open(data.data.data);\n                } else {\n                  _message.warning('暂无可导出数据');\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function downloadData(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var paginationConfig = {\n    total: data.totalSize,\n    current: pageParams.pageNo,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(total, \" \\u6761\");\n    },\n    onChange: onChangePage\n  };\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 25\n    }\n  }, __jsx(_Tabs, {\n    activeKey: activeKey,\n    onChange: changeTab\n  }, __jsx(_Tabs.TabPane, {\n    tab: \"\\u6574\\u4F53\\u7EDF\\u8BA1\",\n    key: \"0\"\n  }), __jsx(_Tabs.TabPane, {\n    tab: \"\\u7F51\\u70B9\\u7EDF\\u8BA1\",\n    key: \"1\"\n  }), __jsx(_Tabs.TabPane, {\n    tab: \"\\u4E2A\\u4EBA\\u7EDF\\u8BA1\",\n    key: \"2\"\n  })), __jsx(SearchForm, {\n    form: form,\n    netWorks: netWorks,\n    branch4search: branch4search,\n    proList: proList,\n    activeKey: activeKey,\n    onSearch: onSearch\n  })), activeKey == 0 && __jsx(_Table, {\n    bordered: true,\n    rowKey: \"id\",\n    pagination: paginationConfig,\n    columns: columns0,\n    dataSource: data.list || []\n  }), activeKey == 1 && __jsx(_Table, {\n    bordered: true,\n    rowKey: \"id\",\n    pagination: paginationConfig,\n    columns: columns1,\n    dataSource: data.list || []\n  }), activeKey == 2 && __jsx(_Table, {\n    bordered: true,\n    rowKey: \"id\",\n    pagination: paginationConfig,\n    columns: columns2,\n    dataSource: data.list || []\n  }));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n  var initParams, data;\n  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          // statisticsType 统计类型(0:整体统计；1:网点统计；2:个人统计)\n          // reportType 报表类型(0:日报表；1:月报表；2:统计报表)\n          initParams = _objectSpread(_objectSpread({}, pageParams), {}, {\n            statisticsType: 0,\n            reportType: 1,\n            startTime: moment().format('YYYY-MM') + '-00',\n            endTime: moment().format('YYYY-MM') + '-00'\n          });\n          _context6.next = 3;\n          return getData(initParams);\n\n        case 3:\n          data = _context6.sent;\n          return _context6.abrupt(\"return\", {\n            data: data\n          });\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}