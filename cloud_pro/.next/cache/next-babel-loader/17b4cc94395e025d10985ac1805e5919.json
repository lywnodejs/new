{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useRef, useState } from 'react';\nimport apiAccounting from '~/api/accounting';\nimport Router, { withRouter } from 'next/router';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nvar breadcrumbs = [{\n  text: '账务管理'\n}, {\n  text: '成本明细'\n}, {\n  text: '资金成本明细'\n}];\nvar pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\n\nfunction body(props) {\n  var _useState = useState([]),\n      itemList = _useState[0],\n      setItemList = _useState[1];\n\n  var _useState2 = useState(false),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState3 = useState([]),\n      channelList = _useState3[0],\n      setChannelList = _useState3[1];\n\n  var _useState4 = useState([]),\n      timeDate = _useState4[0],\n      setTimeDate = _useState4[1];\n\n  var _useState5 = useState([]),\n      returnData = _useState5[0],\n      setReturnData = _useState5[1];\n\n  var _useState6 = useState(false),\n      confirmVisible = _useState6[0],\n      setConfirmVisible = _useState6[1];\n\n  var _useState7 = useState([]),\n      accountList = _useState7[0],\n      setAccountList = _useState7[1];\n\n  var columns = [{\n    title: '发生日期',\n    dataIndex: 'happenDate',\n    key: 'happenDate',\n    width: 150\n  }, {\n    title: '类型',\n    dataIndex: 'operType',\n    key: 'operType',\n    width: 150,\n    render: function render(text) {\n      switch (text) {\n        case 1:\n          return '开始占用';\n\n        case 2:\n          return '解除占用';\n      }\n    }\n  }, {\n    title: '发生金额（元）',\n    dataIndex: 'amount',\n    key: 'amount',\n    width: 150,\n    render: function render(record) {\n      if (record == null) {\n        return null;\n      } else {\n        var str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '利率（年）',\n    dataIndex: 'rate',\n    key: 'rate',\n    width: 150,\n    render: function render(record, text) {\n      if (record == 0) {\n        return 0;\n      }\n\n      var str = Number(record).toFixed(3);\n      str += '%';\n      return str;\n    }\n  }, {\n    title: '发生账户',\n    dataIndex: 'accountType',\n    key: 'accountType',\n    width: 150,\n    render: function render(record, row) {\n      return __jsx(\"div\", null, __jsx(\"p\", null, row.accountType, \"\\xA0\\xA0\", row.account));\n    }\n  }, {\n    title: '操作人',\n    dataIndex: 'updateBy',\n    key: 'updateBy',\n    width: 150,\n    render: function render(record, row) {\n      return __jsx(\"span\", null, __jsx(\"p\", null, row.updateBy), __jsx(\"p\", null, row.updateTime));\n    }\n  }];\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                recordDetail();\n                fetchAccount();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var recordDetail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$apiAccounting$, _yield$apiAccounting$2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return apiAccounting.fetch_record_detail(_objectSpread(_objectSpread({}, pageParams), {}, {\n                moneyCostId: Number(props.router.query.moneyCostId)\n              }));\n\n            case 3:\n              _yield$apiAccounting$ = _context2.sent;\n              _yield$apiAccounting$2 = _yield$apiAccounting$.data;\n              data = _yield$apiAccounting$2.data;\n              code = _yield$apiAccounting$2.code;\n\n              if (code == 0) {\n                setItemList(data.list);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function recordDetail() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchAccount = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$apiAccounting$3, _yield$apiAccounting$4, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return apiAccounting.get_data_dict('FUND_PAY_CHANNEL_MERCHANT_CODE');\n\n            case 3:\n              _yield$apiAccounting$3 = _context3.sent;\n              _yield$apiAccounting$4 = _yield$apiAccounting$3.data;\n              data = _yield$apiAccounting$4.data;\n              code = _yield$apiAccounting$4.code;\n\n              if (code == 0) {\n                setAccountList(data);\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function fetchAccount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var channelId = function channelId(payChannelName) {\n    var findOne = accountList.find(function (one) {\n      return one.description == payChannelName;\n    });\n    return findOne ? findOne.code : '';\n  };\n\n  var release = function release() {\n    setVisible(true);\n  };\n\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n  };\n\n  var nextStep = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return form.validateFields();\n\n            case 2:\n              values = _context4.sent;\n              setReturnData(values);\n              setConfirmVisible(true);\n              setTimeDate(moment(values.time).format('YYYY-MM-DD'));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function nextStep() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var submit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var postData, _yield$apiAccounting$5, _yield$apiAccounting$6, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              postData = {\n                happenDate: timeDate,\n                amount: returnData.amount,\n                accountType: channelId(returnData.payChannelName),\n                account: returnData.payChannelName,\n                moneyCostId: props.router.query.moneyCostId\n              };\n              _context5.prev = 1;\n              _context5.next = 4;\n              return apiAccounting.fetch_relieve_delete(postData);\n\n            case 4:\n              _yield$apiAccounting$5 = _context5.sent;\n              _yield$apiAccounting$6 = _yield$apiAccounting$5.data;\n              data = _yield$apiAccounting$6.data;\n              code = _yield$apiAccounting$6.code;\n\n              if (code == 0) {\n                setConfirmVisible(false);\n                setVisible(false);\n                recordDetail();\n                message.success('解除成功');\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.log(_context5.t0);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 11]]);\n    }));\n\n    return function submit() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    isGray: true,\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      position: 'relative'\n    }\n  }, \"\\u5269\\u4F59\\u5360\\u7528\\u91D1\\u989D\\uFF1A\", __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      position: 'absolute',\n      top: 25,\n      right: 23\n    },\n    onClick: release\n  }, \"\\u89E3\\u9664\\u5360\\u7528\"), __jsx(_Table, {\n    style: {\n      marginTop: 20\n    },\n    columns: columns,\n    dataSource: itemList\n  }), __jsx(_Modal, {\n    title: \"\\u89E3\\u9664\\u8D44\\u91D1\\u5360\\u7528\",\n    visible: visible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: handleCancel\n    }, \"\\u53D6\\u6D88\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: nextStep\n    }, \"\\u4E0B\\u4E00\\u6B65\")],\n    onCancel: function onCancel() {\n      return setVisible(false);\n    }\n  }, __jsx(_Form, {\n    name: form,\n    form: form,\n    style: {\n      marginLeft: 50\n    },\n    initialValues: {\n      happenDate: ''\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u89E3\\u9664\\u65E5\\u671F\",\n    name: \"time\",\n    rules: [{\n      required: true,\n      message: '请选择开始日期'\n    }]\n  }, __jsx(_DatePicker, {\n    allowClear: true,\n    style: {\n      width: 200\n    }\n  })), __jsx(_Form.Item, {\n    label: \"\\u91D1\\u989D\",\n    name: \"amount\",\n    rules: [{\n      required: true,\n      message: '请输入金额'\n    }, function (_ref5) {\n      var getFieldValue = _ref5.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var reg = /^(([0-9]+)|([0-9]+\\.[0-9]{0,2}))$/;\n\n          if (value && !reg.test(value)) {\n            return Promise.reject('请输入大于等于0的数，最多输入12位数，并且最多保留2位小数');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }]\n  }, __jsx(_InputNumber, {\n    style: {\n      width: 200,\n      marginLeft: 30\n    },\n    max: 999999999999\n  })), __jsx(_Form.Item, {\n    label: \"\\u884C\\u65B9\\u8D26\\u6237\",\n    name: \"payChannelName\",\n    rules: [{\n      required: true,\n      message: '请选择行方账户'\n    }]\n  }, __jsx(_Select, {\n    style: {\n      width: 200\n    }\n  }, accountList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.description\n    }, v.description);\n  }))))), __jsx(_Modal, {\n    title: \"\\u64CD\\u4F5C\\u786E\\u8BA4\",\n    visible: confirmVisible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: function onClick() {\n        return setConfirmVisible(false);\n      }\n    }, \"\\u8FD4\\u56DE\\u4FEE\\u6539\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: submit\n    }, \"\\u786E\\u8BA4\\u63D0\\u4EA4\")],\n    onCancel: function onCancel() {\n      return setConfirmVisible(false);\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      backgroundColor: '#d1e9ff',\n      color: '#3da2ff',\n      height: 30,\n      margin: '0 auto',\n      paddingTop: 5\n    }\n  }, __jsx(InfoCircleOutlined, {\n    style: {\n      paddingRight: 5\n    }\n  }), \"\\u8BF7\\u786E\\u8BA4\\u4FE1\\u606F\\u662F\\u5426\\u6B63\\u786E\"), __jsx(\"div\", {\n    style: {\n      marginLeft: 40,\n      marginTop: 20\n    }\n  }, __jsx(\"p\", null, \"\\u89E3\\u9664\\u65E5\\u671F\\uFF1A\", timeDate), __jsx(\"p\", null, \"\\u91D1\\u989D\\uFF1A\", returnData.amount, \" \\u5143\"), __jsx(\"p\", null, \"\\u884C\\u65B9\\u8D26\\u6237\\uFF1A\", returnData.payChannelName)))));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6);\n}));\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}