{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport React, { useEffect, useState } from 'react';\n\nvar TableList = function TableList(_ref) {\n  _s();\n\n  var tolist = _ref.tolist,\n      setTolist = _ref.setTolist,\n      gotalData = _ref.gotalData,\n      pageParams = _ref.pageParams,\n      onPage = _ref.onPage;\n\n  var _useState = useState(pageParams.pageSize),\n      pageSize = _useState[0],\n      setPageSize = _useState[1];\n\n  var columns = [{\n    title: '街道/乡镇名称',\n    dataIndex: 'name',\n    key: 'name',\n    width: 160\n  }, {\n    title: '信用分',\n    dataIndex: 'creditScore',\n    key: 'creditScore',\n    width: 100\n  }, {\n    title: '信用评级',\n    dataIndex: 'creditLevel',\n    key: 'creditLevel',\n    width: 120\n  }, {\n    title: '更新时间',\n    dataIndex: 'updateTime',\n    key: 'updateTime',\n    width: 150\n  }, {\n    title: '操作',\n    dataIndex: 'cz',\n    key: 'cz',\n    width: 150,\n    render: function render(text, record, index) {\n      return __jsx(React.Fragment, null, __jsx(_Button, {\n        type: \"link\",\n        onClick: function onClick() {\n          return onEdit(record);\n        }\n      }, \"\\u67E5\\u770B\"));\n    }\n  }];\n\n  var onEdit = function onEdit(record) {\n    var url = \"/vitalization/creditScore/streetTown/detail?id=\".concat(record.id, \"&name=\").concat(record.name);\n    Router.push(url);\n  };\n\n  var onShowSizeChange = function onShowSizeChange(current, pageSize) {\n    console.log(current, pageSize);\n    pageParams.pageSize = pageSize;\n    setPageSize(pageSize);\n  };\n\n  var pagination = {\n    defaultCurrent: 1,\n    total: gotalData.total,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(total, \" \\u6761\\u8BB0\\u5F55\");\n    },\n    onChange: function onChange(pageNumber) {\n      pageParams.pageNum = pageNumber;\n      onPage();\n    }\n  };\n\n  var onEditStatus = function onEditStatus(record) {\n    record.status = !record.status;\n    setTolist(_toConsumableArray(tolist));\n  };\n\n  return __jsx(_Table, {\n    rowKey: function rowKey(record) {\n      return record.id;\n    },\n    columns: columns,\n    dataSource: tolist,\n    pagination: pagination\n  });\n};\n\n_s(TableList, \"2caPC0jY5uOHgCv8D7vtl66kjoI=\");\n\n_c = TableList;\nexport default TableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableList\");","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/vitalization/creditScore/streetTown/TownTableList.js"],"names":["Router","React","useEffect","useState","TableList","tolist","setTolist","gotalData","pageParams","onPage","pageSize","setPageSize","columns","title","dataIndex","key","width","render","text","record","index","onEdit","url","id","name","push","onShowSizeChange","current","console","log","pagination","defaultCurrent","total","showQuickJumper","showSizeChanger","pageNum","showTotal","onChange","pageNumber","onEditStatus","status"],"mappings":"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","sourcesContent":["import Router from 'next/router'\nimport {Table, Button} from 'antd'\nimport React, {useEffect, useState} from 'react'\n\nconst TableList = ({tolist, setTolist, gotalData, pageParams, onPage}) => {\n  const [pageSize, setPageSize] = useState(pageParams.pageSize)\n\n  const columns = [\n    {\n      title: '街道/乡镇名称',\n      dataIndex: 'name',\n      key: 'name',\n      width: 160,\n    },\n    {\n      title: '信用分',\n      dataIndex: 'creditScore',\n      key: 'creditScore',\n      width: 100,\n    },\n    {\n      title: '信用评级',\n      dataIndex: 'creditLevel',\n      key: 'creditLevel',\n      width: 120,\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'updateTime',\n      key: 'updateTime',\n      width: 150,\n    },\n    {\n      title: '操作',\n      dataIndex: 'cz',\n      key: 'cz',\n      width: 150,\n      render: (text, record, index) => {\n        return (\n          <>\n            <Button type=\"link\" onClick={() => onEdit(record)}>\n              查看\n            </Button>\n          </>\n        )\n      },\n    },\n  ]\n  const onEdit = (record) => {\n    let url = `/vitalization/creditScore/streetTown/detail?id=${record.id}&name=${record.name}`\n    Router.push(url)\n  }\n  const onShowSizeChange = (current, pageSize) => {\n    console.log(current, pageSize)\n    pageParams.pageSize = pageSize\n    setPageSize(pageSize)\n  }\n  const pagination = {\n    defaultCurrent: 1,\n    total: gotalData.total,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: (total) => {\n      return `共 ${total} 条记录`\n    },\n    onChange: (pageNumber) => {\n      pageParams.pageNum = pageNumber\n      onPage()\n    },\n  }\n  const onEditStatus = (record) => {\n    record.status = !record.status\n    setTolist([...tolist])\n  }\n  return (\n    <Table\n      rowKey={(record) => record.id}\n      columns={columns}\n      dataSource={tolist}\n      pagination={pagination}\n    />\n  )\n}\n\nexport default TableList\n"]},"metadata":{},"sourceType":"module"}