{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiBusiness from '~/api/business';\nimport api from '~/api/authority';\nimport Router from 'next/router';\nimport { SearchOutlined } from '@ant-design/icons';\nimport EditModal from './edit';\nimport { useCookies } from 'react-cookie';\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\n\nconst getData = async (params = pageParams) => {\n  try {\n    let {\n      data: {\n        code,\n        data\n      }\n    } = await apiBusiness.getManagerList(params);\n\n    if (code == 0) {\n      return data;\n    }\n\n    return [];\n  } catch (e) {\n    return [];\n  }\n};\n\nconst breadcrumbs = [{\n  text: '客户经理列表'\n}];\n\nconst Search = props => {\n  const [form] = _Form.useForm();\n\n  const [cookies] = useCookies(['dataScope']);\n  const {\n    0: dataScope,\n    1: setDataScope\n  } = useState(3);\n  useEffect(() => {\n    setDataScope(cookies.dataScope);\n  }, []);\n\n  const onSearch = () => {\n    let params = form.getFieldsValue();\n    Object.keys(params).forEach(key => {\n      if (!params[key]) {\n        delete params[key];\n      }\n    });\n    props.search(params);\n  };\n\n  return __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Form, {\n    form: form,\n    name: \"search\",\n    layout: \"inline\",\n    initialValues: {\n      status: null,\n      networkId: null\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\",\n    name: \"key\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u5DE5\\u53F7/\\u5BA2\\u6237\\u7ECF\\u7406/\\u7535\\u8BDD\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u72B6\\u6001\",\n    name: \"status\"\n  }, __jsx(_Select, {\n    style: {\n      width: 100\n    }\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u5168\\u90E8\"), __jsx(_Select.Option, {\n    value: '1'\n  }, \"\\u542F\\u7528\"), __jsx(_Select.Option, {\n    value: '0'\n  }, \"\\u7981\\u7528\"))), dataScope == 3 ? __jsx(_Form.Item, {\n    label: \"\\u6240\\u5C5E\\u673A\\u6784\",\n    name: \"networkId\"\n  }, __jsx(_Select, {\n    style: {\n      width: 200\n    }\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u5168\\u90E8\"), props.branch.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: v.id\n    }, v.name);\n  }))) : null, __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    icon: __jsx(SearchOutlined, null),\n    onClick: onSearch\n  }, \"\\u67E5\\u8BE2\")), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    onClick: props.showAddModal\n  }, \"\\u65B0\\u589E\"))));\n};\n\nfunction body(props) {\n  const {\n    0: data,\n    1: setData\n  } = useState(props.data);\n  const {\n    0: showModal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: showModalData,\n    1: setModalData\n  } = useState(null);\n  const {\n    0: searchParams,\n    1: setSearchParams\n  } = useState({});\n  const {\n    0: branch4search,\n    1: setBranch4search\n  } = useState([]);\n  const {\n    0: networkDepartmentTree,\n    1: setNetworkDepartmentTree\n  } = useState([]);\n  useEffect(() => {\n    getBranch4search();\n    fetchNetworkDepartmentTree();\n  }, []); // 获取网点 部门\n\n  const fetchNetworkDepartmentTree = async () => {\n    try {\n      const {\n        data\n      } = await apiBusiness.getNetworkDepartmentTree(); // data.code = 0;\n      // data.data = [\n      //   {networkName: 'test1',networkId: '9', departmentVoList: [{id:1, name: 'test1-1'}, {id:2, name: 'test1-2'}]},\n      //   {networkName: 'test2',networkId: '10', departmentVoList: [{id:3, name: 'test1-3'}, {id:4, name: 'test1-4'}]},\n      //   {networkName: 'test3',networkId: '11', departmentVoList: [{id:5, name: 'test1-5'}, {id:6, name: 'test1-6'}]},\n      //   {networkName: 'test4',networkId: '12', departmentVoList: [{id:7, name: 'test1-7'}, {id:8, name: 'test1-8'}]}\n      // ]\n\n      if (data.code == 0) {\n        // console.log(data.data)\n        setNetworkDepartmentTree(data.data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getBranch4search = async () => {\n    let {\n      data: {\n        code,\n        data\n      }\n    } = await apiBusiness.getBranch4other();\n\n    if (code == 0) {\n      setBranch4search(data || []);\n    } else {\n      setBranch4search([]);\n    }\n  };\n\n  const onSearch = params => {\n    setSearchParams(params);\n    pageParams.pageNo = 1;\n    updateList(_objectSpread(_objectSpread({}, params), pageParams));\n  };\n\n  const onChangePage = (pageNo = pageParams.pageNo) => {\n    pageParams.pageNo = pageNo;\n    updateList(_objectSpread(_objectSpread({}, searchParams), pageParams));\n  };\n\n  const updateList = async params => {\n    let data = await getData(_objectSpread({}, params));\n    setData(data);\n  };\n\n  const deleteItem = i => {\n    _Modal.confirm({\n      content: '确定删除该项数据？',\n      onOk: async () => {\n        let newData = [...data.list];\n        const {\n          data: {\n            code\n          }\n        } = await apiBusiness.deleteManager(newData[i].id);\n\n        if (code == 0) {\n          newData.splice(i, 1);\n          setData(_objectSpread(_objectSpread({}, data), {}, {\n            list: newData\n          }));\n\n          _message.success('删除成功');\n        }\n      }\n    });\n  };\n\n  const changeStatus = async i => {\n    let nData = [...data.list];\n    let status = nData[i].status == 0 ? '1' : '0';\n    let text = nData[i].status == 0 ? '启用' : '禁用';\n\n    _Modal.confirm({\n      content: `确定${text}此客户经理账号？`,\n      onOk: async () => {\n        const {\n          data: {\n            code\n          }\n        } = await apiBusiness.updateManagerStatus({\n          id: nData[i].id,\n          status\n        });\n\n        if (code == 0) {\n          nData[i].status = status;\n          setData(_objectSpread(_objectSpread({}, data), {}, {\n            list: nData\n          }));\n\n          _message.success('修改成功');\n        }\n      }\n    });\n  };\n\n  const columns = [{\n    title: '工号',\n    dataIndex: 'jobNumber'\n  }, {\n    title: '客户经理',\n    dataIndex: 'name'\n  }, {\n    title: '电话（登录账号）',\n    dataIndex: 'mobile'\n  }, {\n    title: '所属机构',\n    dataIndex: 'branchNetworkName'\n  }, {\n    title: '对应组织架构',\n    dataIndex: 'departmentName'\n  }, {\n    title: '状态',\n    dataIndex: 'status',\n    render: (v, r, i) => {\n      const text = v == 0 ? '禁用' : '启用';\n      const color = v == 0 ? 'red' : 'green';\n      return __jsx(_Badge, {\n        color: color,\n        text: text\n      });\n    }\n  }, {\n    title: '操作',\n    render: (v, r, i) => {\n      return __jsx(_Space, null, __jsx(_Button, {\n        type: \"link\",\n        onClick: () => showAddModal(i)\n      }, \"\\u7F16\\u8F91\"), __jsx(_Button, {\n        type: \"link\",\n        onClick: () => changeStatus(i)\n      }, r.status == 1 ? '禁用' : '启用'), __jsx(_Button, {\n        type: \"link\",\n        danger: true,\n        onClick: () => deleteItem(i)\n      }, \"\\u5220\\u9664\"));\n    }\n  }].map(v => {\n    v.align = 'center';\n    return v;\n  });\n\n  const showAddModal = i => {\n    let editData = null;\n\n    if (i > -1) {\n      editData = data.list[i];\n    }\n\n    setModalData(editData);\n    setModal(true);\n  };\n\n  const closeModal = (isSuccess, isUpdateList) => {\n    setModal(false);\n\n    if (isUpdateList) {\n      onChangePage();\n      getBranch();\n    }\n\n    if (isSuccess) {\n      _message.success('编辑成功');\n    }\n  };\n\n  const paginationConfig = {\n    total: data.totalSize,\n    current: pageParams.pageNo,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: total => `共 ${total} 条`,\n    onChange: onChangePage\n  };\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(Search, {\n    search: onSearch,\n    branch: branch4search,\n    showAddModal: () => showAddModal(-1)\n  }), __jsx(_Table, {\n    bordered: true,\n    rowKey: \"id\",\n    pagination: paginationConfig,\n    columns: columns,\n    dataSource: data.list || []\n  }), __jsx(EditModal, {\n    show: showModal,\n    data: showModalData,\n    branch: branch4search,\n    departments: [],\n    networkDepartmentTree: networkDepartmentTree,\n    close: closeModal\n  }));\n}\n\nbody.getInitialProps = async () => {\n  let data = await getData();\n  return {\n    data\n  };\n};\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/business/manager/index.js"],"names":["Layout","React","useEffect","useState","apiBusiness","api","Router","SearchOutlined","EditModal","useCookies","pageParams","pageNo","pageSize","getData","params","data","code","getManagerList","e","breadcrumbs","text","Search","props","form","useForm","cookies","dataScope","setDataScope","onSearch","getFieldsValue","Object","keys","forEach","key","search","marginBottom","status","networkId","width","branch","map","v","i","id","name","showAddModal","body","setData","showModal","setModal","showModalData","setModalData","searchParams","setSearchParams","branch4search","setBranch4search","networkDepartmentTree","setNetworkDepartmentTree","getBranch4search","fetchNetworkDepartmentTree","getNetworkDepartmentTree","err","console","log","getBranch4other","updateList","onChangePage","deleteItem","confirm","content","onOk","newData","list","deleteManager","splice","success","changeStatus","nData","updateManagerStatus","columns","title","dataIndex","render","r","color","align","editData","closeModal","isSuccess","isUpdateList","getBranch","paginationConfig","total","totalSize","current","showSizeChanger","showQuickJumper","defaultPageSize","showTotal","onChange","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,MAAR,QAAqB,qBAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAaA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,CADS;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAAnB;;AAIA,MAAMC,OAAO,GAAG,OAAOC,MAAM,GAAGJ,UAAhB,KAA+B;AAC7C,MAAI;AACF,QAAI;AACFK,MAAAA,IAAI,EAAE;AAACC,QAAAA,IAAD;AAAOD,QAAAA;AAAP;AADJ,QAEA,MAAMX,WAAW,CAACa,cAAZ,CAA2BH,MAA3B,CAFV;;AAGA,QAAIE,IAAI,IAAI,CAAZ,EAAe;AACb,aAAOD,IAAP;AACD;;AACD,WAAO,EAAP;AACD,GARD,CAQE,OAAOG,CAAP,EAAU;AACV,WAAO,EAAP;AACD;AACF,CAZD;;AAcA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAD,CAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,IAAD,IAAS,MAAKC,OAAL,EAAf;;AACA,QAAM,CAACC,OAAD,IAAYhB,UAAU,CAAC,CAAC,WAAD,CAAD,CAA5B;AAEA,QAAM;AAAA,OAACiB,SAAD;AAAA,OAAYC;AAAZ,MAA4BxB,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,YAAY,CAACF,OAAO,CAACC,SAAT,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAId,MAAM,GAAGS,IAAI,CAACM,cAAL,EAAb;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYjB,MAAZ,EAAoBkB,OAApB,CAA6BC,GAAD,IAAS;AACnC,UAAI,CAACnB,MAAM,CAACmB,GAAD,CAAX,EAAkB;AAChB,eAAOnB,MAAM,CAACmB,GAAD,CAAb;AACD;AACF,KAJD;AAKAX,IAAAA,KAAK,CAACY,MAAN,CAAapB,MAAb;AACD,GARD;;AAUA,SACE;AAAM,IAAA,KAAK,EAAE;AAACqB,MAAAA,YAAY,EAAE;AAAf;AAAb,KACE;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,aAAa,EAAE;AAACa,MAAAA,MAAM,EAAE,IAAT;AAAeC,MAAAA,SAAS,EAAE;AAA1B;AAJjB,KAME,YAAM,IAAN;AAAW,IAAA,KAAK,EAAC,EAAjB;AAAoB,IAAA,IAAI,EAAC;AAAzB,KACE;AAAO,IAAA,WAAW,EAAC;AAAnB,IADF,CANF,EAUE,YAAM,IAAN;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAsB,IAAA,IAAI,EAAC;AAA3B,KACE;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAf,KACE,cAAQ,MAAR;AAAe,IAAA,KAAK,EAAE;AAAtB,oBADF,EAEE,cAAQ,MAAR;AAAe,IAAA,KAAK,EAAE;AAAtB,oBAFF,EAGE,cAAQ,MAAR;AAAe,IAAA,KAAK,EAAE;AAAtB,oBAHF,CADF,CAVF,EAkBGZ,SAAS,IAAI,CAAb,GACC,YAAM,IAAN;AAAW,IAAA,KAAK,EAAC,0BAAjB;AAAwB,IAAA,IAAI,EAAC;AAA7B,KACE;AAAQ,IAAA,KAAK,EAAE;AAACY,MAAAA,KAAK,EAAE;AAAR;AAAf,KACE,cAAQ,MAAR;AAAe,IAAA,KAAK,EAAE;AAAtB,oBADF,EAEGhB,KAAK,CAACiB,MAAN,CAAaC,GAAb,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,WACE,cAAQ,MAAR;AAAe,MAAA,KAAK,EAAED,CAAC,CAACE,EAAxB;AAA4B,MAAA,GAAG,EAAEF,CAAC,CAACE;AAAnC,OACGF,CAAC,CAACG,IADL,CADF;AAKD,GANA,CAFH,CADF,CADD,GAaG,IA/BN,EAiCE,YAAM,IAAN,QACE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAE,MAAC,cAAD,OAA7B;AAAiD,IAAA,OAAO,EAAEhB;AAA1D,oBADF,CAjCF,EAuCE,YAAM,IAAN,QACE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEN,KAAK,CAACuB;AAAtC,oBADF,CAvCF,CADF,CADF;AAiDD,CArED;;AAuEA,SAASC,IAAT,CAAcxB,KAAd,EAAqB;AACnB,QAAM;AAAA,OAACP,IAAD;AAAA,OAAOgC;AAAP,MAAkB5C,QAAQ,CAACmB,KAAK,CAACP,IAAP,CAAhC;AACA,QAAM;AAAA,OAACiC,SAAD;AAAA,OAAYC;AAAZ,MAAwB9C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAAC+C,aAAD;AAAA,OAAgBC;AAAhB,MAAgChD,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAA,OAACiD,YAAD;AAAA,OAAeC;AAAf,MAAkClD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACmD,aAAD;AAAA,OAAgBC;AAAhB,MAAoCpD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACqD,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDtD,QAAQ,CAAC,EAAD,CAAlE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdwD,IAAAA,gBAAgB;AAChBC,IAAAA,0BAA0B;AAC3B,GAHQ,EAGN,EAHM,CAAT,CARmB,CAanB;;AACA,QAAMA,0BAA0B,GAAG,YAAY;AAC7C,QAAI;AACF,YAAM;AAAC5C,QAAAA;AAAD,UAAS,MAAMX,WAAW,CAACwD,wBAAZ,EAArB,CADE,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAI7C,IAAI,CAACC,IAAL,IAAa,CAAjB,EAAoB;AAClB;AACAyC,QAAAA,wBAAwB,CAAC1C,IAAI,CAACA,IAAN,CAAxB;AACD;AACF,KAbD,CAaE,OAAO8C,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAjBD;;AAmBA,QAAMH,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF3C,MAAAA,IAAI,EAAE;AAACC,QAAAA,IAAD;AAAOD,QAAAA;AAAP;AADJ,QAEA,MAAMX,WAAW,CAAC4D,eAAZ,EAFV;;AAGA,QAAIhD,IAAI,IAAI,CAAZ,EAAe;AACbuC,MAAAA,gBAAgB,CAACxC,IAAI,IAAI,EAAT,CAAhB;AACD,KAFD,MAEO;AACLwC,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,GATD;;AAWA,QAAM3B,QAAQ,GAAId,MAAD,IAAY;AAC3BuC,IAAAA,eAAe,CAACvC,MAAD,CAAf;AACAJ,IAAAA,UAAU,CAACC,MAAX,GAAoB,CAApB;AACAsD,IAAAA,UAAU,iCAAKnD,MAAL,GAAgBJ,UAAhB,EAAV;AACD,GAJD;;AAMA,QAAMwD,YAAY,GAAG,CAACvD,MAAM,GAAGD,UAAU,CAACC,MAArB,KAAgC;AACnDD,IAAAA,UAAU,CAACC,MAAX,GAAoBA,MAApB;AACAsD,IAAAA,UAAU,iCAAKb,YAAL,GAAsB1C,UAAtB,EAAV;AACD,GAHD;;AAKA,QAAMuD,UAAU,GAAG,MAAOnD,MAAP,IAAkB;AACnC,QAAIC,IAAI,GAAG,MAAMF,OAAO,mBAAKC,MAAL,EAAxB;AACAiC,IAAAA,OAAO,CAAChC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMoD,UAAU,GAAIzB,CAAD,IAAO;AACxB,WAAM0B,OAAN,CAAc;AACZC,MAAAA,OAAO,EAAE,WADG;AAEZC,MAAAA,IAAI,EAAE,YAAY;AAChB,YAAIC,OAAO,GAAG,CAAC,GAAGxD,IAAI,CAACyD,IAAT,CAAd;AAEA,cAAM;AACJzD,UAAAA,IAAI,EAAE;AAACC,YAAAA;AAAD;AADF,YAEF,MAAMZ,WAAW,CAACqE,aAAZ,CAA0BF,OAAO,CAAC7B,CAAD,CAAP,CAAWC,EAArC,CAFV;;AAGA,YAAI3B,IAAI,IAAI,CAAZ,EAAe;AACbuD,UAAAA,OAAO,CAACG,MAAR,CAAehC,CAAf,EAAkB,CAAlB;AACAK,UAAAA,OAAO,iCAAKhC,IAAL;AAAWyD,YAAAA,IAAI,EAAED;AAAjB,aAAP;;AACA,mBAAQI,OAAR,CAAgB,MAAhB;AACD;AACF;AAbW,KAAd;AAeD,GAhBD;;AAkBA,QAAMC,YAAY,GAAG,MAAOlC,CAAP,IAAa;AAChC,QAAImC,KAAK,GAAG,CAAC,GAAG9D,IAAI,CAACyD,IAAT,CAAZ;AACA,QAAIpC,MAAM,GAAGyC,KAAK,CAACnC,CAAD,CAAL,CAASN,MAAT,IAAmB,CAAnB,GAAuB,GAAvB,GAA6B,GAA1C;AACA,QAAIhB,IAAI,GAAGyD,KAAK,CAACnC,CAAD,CAAL,CAASN,MAAT,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B,IAAzC;;AACA,WAAMgC,OAAN,CAAc;AACZC,MAAAA,OAAO,EAAG,KAAIjD,IAAK,UADP;AAEZkD,MAAAA,IAAI,EAAE,YAAY;AAChB,cAAM;AACJvD,UAAAA,IAAI,EAAE;AAACC,YAAAA;AAAD;AADF,YAEF,MAAMZ,WAAW,CAAC0E,mBAAZ,CAAgC;AAACnC,UAAAA,EAAE,EAAEkC,KAAK,CAACnC,CAAD,CAAL,CAASC,EAAd;AAAkBP,UAAAA;AAAlB,SAAhC,CAFV;;AAGA,YAAIpB,IAAI,IAAI,CAAZ,EAAe;AACb6D,UAAAA,KAAK,CAACnC,CAAD,CAAL,CAASN,MAAT,GAAkBA,MAAlB;AACAW,UAAAA,OAAO,iCAAKhC,IAAL;AAAWyD,YAAAA,IAAI,EAAEK;AAAjB,aAAP;;AACA,mBAAQF,OAAR,CAAgB,MAAhB;AACD;AACF;AAXW,KAAd;AAaD,GAjBD;;AAmBA,QAAMI,OAAO,GAAG,CACd;AAACC,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,SAAS,EAAE;AAAzB,GADc,EAEd;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAFc,EAGd;AAACD,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAHc,EAId;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAJc,EAKd;AAACD,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,SAAS,EAAE;AAA7B,GALc,EAMd;AACED,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,MAAM,EAAE,CAACzC,CAAD,EAAI0C,CAAJ,EAAOzC,CAAP,KAAa;AACnB,YAAMtB,IAAI,GAAGqB,CAAC,IAAI,CAAL,GAAS,IAAT,GAAgB,IAA7B;AACA,YAAM2C,KAAK,GAAG3C,CAAC,IAAI,CAAL,GAAS,KAAT,GAAiB,OAA/B;AACA,aAAO;AAAO,QAAA,KAAK,EAAE2C,KAAd;AAAqB,QAAA,IAAI,EAAEhE;AAA3B,QAAP;AACD;AAPH,GANc,EAed;AACE4D,IAAAA,KAAK,EAAE,IADT;AAEEE,IAAAA,MAAM,EAAE,CAACzC,CAAD,EAAI0C,CAAJ,EAAOzC,CAAP,KAAa;AACnB,aACE,oBACE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAMG,YAAY,CAACH,CAAD;AAA/C,wBADF,EAKE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAMkC,YAAY,CAAClC,CAAD;AAA/C,SACGyC,CAAC,CAAC/C,MAAF,IAAY,CAAZ,GAAgB,IAAhB,GAAuB,IAD1B,CALF,EASE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,MAAM,MAA1B;AAA2B,QAAA,OAAO,EAAE,MAAM+B,UAAU,CAACzB,CAAD;AAApD,wBATF,CADF;AAeD;AAlBH,GAfc,EAmCdF,GAnCc,CAmCTC,CAAD,IAAO;AACXA,IAAAA,CAAC,CAAC4C,KAAF,GAAU,QAAV;AACA,WAAO5C,CAAP;AACD,GAtCe,CAAhB;;AAwCA,QAAMI,YAAY,GAAIH,CAAD,IAAO;AAC1B,QAAI4C,QAAQ,GAAG,IAAf;;AACA,QAAI5C,CAAC,GAAG,CAAC,CAAT,EAAY;AACV4C,MAAAA,QAAQ,GAAGvE,IAAI,CAACyD,IAAL,CAAU9B,CAAV,CAAX;AACD;;AACDS,IAAAA,YAAY,CAACmC,QAAD,CAAZ;AACArC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAPD;;AASA,QAAMsC,UAAU,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC9CxC,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAIwC,YAAJ,EAAkB;AAChBvB,MAAAA,YAAY;AACZwB,MAAAA,SAAS;AACV;;AACD,QAAIF,SAAJ,EAAe;AACb,eAAQb,OAAR,CAAgB,MAAhB;AACD;AACF,GATD;;AAWA,QAAMgB,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE7E,IAAI,CAAC8E,SADW;AAEvBC,IAAAA,OAAO,EAAEpF,UAAU,CAACC,MAFG;AAGvBoF,IAAAA,eAAe,EAAE,KAHM;AAIvBC,IAAAA,eAAe,EAAE,IAJM;AAKvBC,IAAAA,eAAe,EAAEvF,UAAU,CAACE,QALL;AAMvBsF,IAAAA,SAAS,EAAGN,KAAD,IAAY,KAAIA,KAAM,IANV;AAOvBO,IAAAA,QAAQ,EAAEjC;AAPa,GAAzB;AAUA,SACE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAE/C;AAArB,KACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAES,QADV;AAEE,IAAA,MAAM,EAAE0B,aAFV;AAGE,IAAA,YAAY,EAAE,MAAMT,YAAY,CAAC,CAAC,CAAF;AAHlC,IADF,EAOE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,UAAU,EAAE8C,gBAHd;AAIE,IAAA,OAAO,EAAEZ,OAJX;AAKE,IAAA,UAAU,EAAEhE,IAAI,CAACyD,IAAL,IAAa;AAL3B,IAPF,EAeE,MAAC,SAAD;AACE,IAAA,IAAI,EAAExB,SADR;AAEE,IAAA,IAAI,EAAEE,aAFR;AAGE,IAAA,MAAM,EAAEI,aAHV;AAIE,IAAA,WAAW,EAAE,EAJf;AAKE,IAAA,qBAAqB,EAAEE,qBALzB;AAME,IAAA,KAAK,EAAE+B;AANT,IAfF,CADF;AA0BD;;AAEDzC,IAAI,CAACsD,eAAL,GAAuB,YAAY;AACjC,MAAIrF,IAAI,GAAG,MAAMF,OAAO,EAAxB;AACA,SAAO;AAACE,IAAAA;AAAD,GAAP;AACD,CAHD;;AAKA,eAAe+B,IAAf","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState} from 'react'\nimport apiBusiness from '~/api/business'\nimport api from '~/api/authority'\nimport {\n  Button,\n  Table,\n  Space,\n  Form,\n  Input,\n  Modal,\n  Select,\n  message,\n  Badge,\n  Card,\n} from 'antd'\nimport Router from 'next/router'\nimport {SearchOutlined} from '@ant-design/icons'\nimport EditModal from './edit'\nimport {useCookies} from 'react-cookie'\n\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10,\n}\nconst getData = async (params = pageParams) => {\n  try {\n    let {\n      data: {code, data},\n    } = await apiBusiness.getManagerList(params)\n    if (code == 0) {\n      return data\n    }\n    return []\n  } catch (e) {\n    return []\n  }\n}\n\nconst breadcrumbs = [{text: '客户经理列表'}]\n\nconst Search = (props) => {\n  const [form] = Form.useForm()\n  const [cookies] = useCookies(['dataScope'])\n\n  const [dataScope, setDataScope] = useState(3)\n\n  useEffect(() => {\n    setDataScope(cookies.dataScope)\n  }, [])\n\n  const onSearch = () => {\n    let params = form.getFieldsValue()\n    Object.keys(params).forEach((key) => {\n      if (!params[key]) {\n        delete params[key]\n      }\n    })\n    props.search(params)\n  }\n\n  return (\n    <Card style={{marginBottom: 30}}>\n      <Form\n        form={form}\n        name=\"search\"\n        layout=\"inline\"\n        initialValues={{status: null, networkId: null}}\n      >\n        <Form.Item label=\"\" name=\"key\">\n          <Input placeholder=\"工号/客户经理/电话\" />\n        </Form.Item>\n\n        <Form.Item label=\"状态\" name=\"status\">\n          <Select style={{width: 100}}>\n            <Select.Option value={null}>全部</Select.Option>\n            <Select.Option value={'1'}>启用</Select.Option>\n            <Select.Option value={'0'}>禁用</Select.Option>\n          </Select>\n        </Form.Item>\n\n        {dataScope == 3 ? (\n          <Form.Item label=\"所属机构\" name=\"networkId\">\n            <Select style={{width: 200}}>\n              <Select.Option value={null}>全部</Select.Option>\n              {props.branch.map((v, i) => {\n                return (\n                  <Select.Option value={v.id} key={v.id}>\n                    {v.name}\n                  </Select.Option>\n                )\n              })}\n            </Select>\n          </Form.Item>\n        ) : null}\n\n        <Form.Item>\n          <Button type=\"primary\" icon={<SearchOutlined />} onClick={onSearch}>\n            查询\n          </Button>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" onClick={props.showAddModal}>\n            新增\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  )\n}\n\nfunction body(props) {\n  const [data, setData] = useState(props.data)\n  const [showModal, setModal] = useState(false)\n  const [showModalData, setModalData] = useState(null)\n  const [searchParams, setSearchParams] = useState({})\n  const [branch4search, setBranch4search] = useState([])\n  const [networkDepartmentTree, setNetworkDepartmentTree] = useState([])\n\n  useEffect(() => {\n    getBranch4search()\n    fetchNetworkDepartmentTree()\n  }, [])\n\n  // 获取网点 部门\n  const fetchNetworkDepartmentTree = async () => {\n    try {\n      const {data} = await apiBusiness.getNetworkDepartmentTree()\n      // data.code = 0;\n      // data.data = [\n      //   {networkName: 'test1',networkId: '9', departmentVoList: [{id:1, name: 'test1-1'}, {id:2, name: 'test1-2'}]},\n      //   {networkName: 'test2',networkId: '10', departmentVoList: [{id:3, name: 'test1-3'}, {id:4, name: 'test1-4'}]},\n      //   {networkName: 'test3',networkId: '11', departmentVoList: [{id:5, name: 'test1-5'}, {id:6, name: 'test1-6'}]},\n      //   {networkName: 'test4',networkId: '12', departmentVoList: [{id:7, name: 'test1-7'}, {id:8, name: 'test1-8'}]}\n      // ]\n      if (data.code == 0) {\n        // console.log(data.data)\n        setNetworkDepartmentTree(data.data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const getBranch4search = async () => {\n    let {\n      data: {code, data},\n    } = await apiBusiness.getBranch4other()\n    if (code == 0) {\n      setBranch4search(data || [])\n    } else {\n      setBranch4search([])\n    }\n  }\n\n  const onSearch = (params) => {\n    setSearchParams(params)\n    pageParams.pageNo = 1\n    updateList({...params, ...pageParams})\n  }\n\n  const onChangePage = (pageNo = pageParams.pageNo) => {\n    pageParams.pageNo = pageNo\n    updateList({...searchParams, ...pageParams})\n  }\n\n  const updateList = async (params) => {\n    let data = await getData({...params})\n    setData(data)\n  }\n\n  const deleteItem = (i) => {\n    Modal.confirm({\n      content: '确定删除该项数据？',\n      onOk: async () => {\n        let newData = [...data.list]\n\n        const {\n          data: {code},\n        } = await apiBusiness.deleteManager(newData[i].id)\n        if (code == 0) {\n          newData.splice(i, 1)\n          setData({...data, list: newData})\n          message.success('删除成功')\n        }\n      },\n    })\n  }\n\n  const changeStatus = async (i) => {\n    let nData = [...data.list]\n    let status = nData[i].status == 0 ? '1' : '0'\n    let text = nData[i].status == 0 ? '启用' : '禁用'\n    Modal.confirm({\n      content: `确定${text}此客户经理账号？`,\n      onOk: async () => {\n        const {\n          data: {code},\n        } = await apiBusiness.updateManagerStatus({id: nData[i].id, status})\n        if (code == 0) {\n          nData[i].status = status\n          setData({...data, list: nData})\n          message.success('修改成功')\n        }\n      },\n    })\n  }\n\n  const columns = [\n    {title: '工号', dataIndex: 'jobNumber'},\n    {title: '客户经理', dataIndex: 'name'},\n    {title: '电话（登录账号）', dataIndex: 'mobile'},\n    {title: '所属机构', dataIndex: 'branchNetworkName'},\n    {title: '对应组织架构', dataIndex: 'departmentName'},\n    {\n      title: '状态',\n      dataIndex: 'status',\n      render: (v, r, i) => {\n        const text = v == 0 ? '禁用' : '启用'\n        const color = v == 0 ? 'red' : 'green'\n        return <Badge color={color} text={text} />\n      },\n    },\n    {\n      title: '操作',\n      render: (v, r, i) => {\n        return (\n          <Space>\n            <Button type=\"link\" onClick={() => showAddModal(i)}>\n              编辑\n            </Button>\n\n            <Button type=\"link\" onClick={() => changeStatus(i)}>\n              {r.status == 1 ? '禁用' : '启用'}\n            </Button>\n\n            <Button type=\"link\" danger onClick={() => deleteItem(i)}>\n              删除\n            </Button>\n          </Space>\n        )\n      },\n    },\n  ].map((v) => {\n    v.align = 'center'\n    return v\n  })\n\n  const showAddModal = (i) => {\n    let editData = null\n    if (i > -1) {\n      editData = data.list[i]\n    }\n    setModalData(editData)\n    setModal(true)\n  }\n\n  const closeModal = (isSuccess, isUpdateList) => {\n    setModal(false)\n    if (isUpdateList) {\n      onChangePage()\n      getBranch()\n    }\n    if (isSuccess) {\n      message.success('编辑成功')\n    }\n  }\n\n  const paginationConfig = {\n    total: data.totalSize,\n    current: pageParams.pageNo,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: (total) => `共 ${total} 条`,\n    onChange: onChangePage,\n  }\n\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Search\n        search={onSearch}\n        branch={branch4search}\n        showAddModal={() => showAddModal(-1)}\n      />\n\n      <Table\n        bordered\n        rowKey=\"id\"\n        pagination={paginationConfig}\n        columns={columns}\n        dataSource={data.list || []}\n      />\n\n      <EditModal\n        show={showModal}\n        data={showModalData}\n        branch={branch4search}\n        departments={[]}\n        networkDepartmentTree={networkDepartmentTree}\n        close={closeModal}\n      />\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  let data = await getData()\n  return {data}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}