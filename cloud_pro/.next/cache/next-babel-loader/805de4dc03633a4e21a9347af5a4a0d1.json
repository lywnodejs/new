{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/authority';\nimport { USER_AUTH } from '~/utils/const';\n\nfunction roleForm(props) {\n  const [cookies] = useCookies(['name', 'roleId']);\n\n  const [roleForm] = _Form.useForm();\n\n  const {\n    selectIndex,\n    visible,\n    onHide,\n    selectItem,\n    pullData\n  } = props;\n  useEffect(() => {\n    if (selectIndex == -1) {\n      roleForm.resetFields();\n    } else {\n      roleForm.setFieldsValue(_objectSpread({}, selectItem));\n    }\n  }, [visible, selectIndex]);\n\n  const onEdit = async () => {\n    try {\n      const values = await roleForm.validateFields();\n\n      const postData = _objectSpread({}, values);\n\n      let requestFunc = api.createRole;\n\n      if (selectIndex != -1) {\n        postData.id = selectItem.id;\n        requestFunc = api.editRole;\n      }\n\n      const {\n        data\n      } = await requestFunc(postData);\n\n      if (data.code == 0) {\n        onHide();\n\n        _message.success('保存成功');\n\n        pullData();\n      }\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    } // try {\n    //   const values = await roleForm.validateFields()\n    //   const postData = {\n    //     ...values,\n    //     institutionUsername: cookies.name,\n    //     parentRoleId: cookies.roleId,\n    //     id: selectIndex == -1 ? null : selectItem.id,\n    //   }\n    //   const {data} = await api.handle_role(\n    //     selectIndex == -1 ? 'post' : 'put',\n    //     postData,\n    //   )\n    //\n    //   if (data.code == 0) {\n    //     onHide()\n    //     message.success('保存成功')\n    //     pullData()\n    //   }\n    // } catch (errorInfo) {\n    //   console.log('Failed:', errorInfo)\n    // }\n\n  };\n\n  return __jsx(_Modal, {\n    title: selectIndex === -1 ? '新增' : '编辑',\n    maskClosable: false,\n    visible: visible,\n    destroyOnClose: true,\n    forceRender: true,\n    onOk: onEdit,\n    onCancel: onHide,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\"\n  }, __jsx(_Form, {\n    key: Date.now,\n    form: roleForm,\n    name: \"roleForm\",\n    initialValues: {}\n  }, __jsx(_Form.Item, {\n    label: \"\\u89D2\\u8272\\u540D\\u79F0\",\n    name: \"roleName\",\n    rules: [{\n      required: true,\n      message: '请输入角色名称'\n    }]\n  }, __jsx(_Input, null)), __jsx(_Form.Item, {\n    label: \"\\u89D2\\u8272\\u63CF\\u8FF0\",\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: '请输入角色描述'\n    }]\n  }, __jsx(_Input, null)), __jsx(_Form.Item, {\n    label: \"\\u6570\\u636E\\u6743\\u9650\",\n    name: \"dataScope\",\n    rules: [{\n      required: true,\n      message: '请选择数据权限'\n    }]\n  }, __jsx(_Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"\\u8BF7\\u9009\\u62E9\"\n  }, USER_AUTH.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.key,\n      key: v.key\n    }, v.name);\n  })))));\n}\n\nroleForm.getInitialProps = async () => ({});\n\nexport default roleForm;","map":null,"metadata":{},"sourceType":"module"}