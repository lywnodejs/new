{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport { useEffect, useState } from 'react';\nimport apiAssets from '~/api/assets';\nconst breadcrumbs = [{\n  text: '资产保全'\n}, {\n  text: '导出记录'\n}];\nimport TableList from './TableList';\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nlet values = {};\n\nfunction body(props) {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: totalData,\n    1: setTotalData\n  } = useState([]);\n  useEffect(() => {\n    exportRecord();\n  }, []);\n\n  const exportRecord = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAssets.fetch_record_deduction(_objectSpread(_objectSpread({}, pageParams), {}, {\n        type: 1\n      }));\n\n      if (code == 0) {\n        setList(data.list);\n        setTotalData(data.totalSize);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onPage = async () => {\n    exportRecord(values);\n  };\n\n  const downloadList = async item => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAssets.fetch_export_downLoad({\n        fileLogId: item.id\n      });\n\n      if (code == 0) {\n        _message.success('下载成功');\n\n        window.open(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(Layout, {\n    isGray: true,\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, null, __jsx(TableList, {\n    list,\n    onPage,\n    pageParams,\n    totalData,\n    downloadList\n  })));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}