{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport api from '~/api/business';\nimport proApi from '~/api/product';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nimport moment from 'moment';\nimport { useCookies } from 'react-cookie';\nconst {\n  TabPane\n} = _Tabs;\nconst breadcrumbs = [{\n  text: '业务管理'\n}, {\n  text: '业绩统计'\n}];\n\nfunction body(props) {\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const {\n    0: searchParams,\n    1: setSearchParams\n  } = useState({});\n  const {\n    0: netWorks,\n    1: setNetWorks\n  } = useState([]);\n  const {\n    0: proList,\n    1: setProList\n  } = useState([]);\n  const {\n    0: pageParams,\n    1: setPageParams\n  } = useState({\n    pageNo: 1,\n    pageSize: 10\n  });\n  let {\n    0: activeKey,\n    1: setActiveKey\n  } = useState('0');\n  const [cookies] = useCookies(['tenantId']);\n  useEffect(() => {\n    fetchProList();\n    fetchNetwork();\n    const init_params = {\n      type: 0,\n      reportType: 0\n    };\n  }, []);\n\n  const fetchList = async values => {\n    try {\n      let postApi = activeKey == 0 ? api.getAchievementByNetwork : api.getAchievementByManager;\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await postApi(values);\n\n      if (code == 0) {\n        console.log(data);\n        setData(data);\n      } else {// setData({\n        //   total: 5,\n        //   list: [\n        //     {id:values.pageNo + 1},\n        //     {id:values.pageNo +2},\n        //     {id:values.pageNo +3},\n        //     {id:values.pageNo +4},\n        //     {id:values.pageNo +5},\n        //   ]\n        // })\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchNetwork = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getNetwork4report();\n\n      if (code === 0) {\n        setNetWorks(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchProList = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getProduct4report({\n        tenantId: cookies.tenantId\n      });\n\n      if (code === 0) {\n        setProList(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSearch = async (value, isExport) => {\n    let new_params = _objectSpread(_objectSpread({}, value), {}, {\n      type: activeKey\n    });\n\n    pageParams.pageNo = 1;\n\n    if (Array.isArray(new_params.time)) {\n      const format = new_params.reportType == 1 ? 'YYYY-MM' : 'YYYY-MM-DD';\n      new_params.startTime = moment(new_params.time[0]).format(format);\n      new_params.endTime = moment(new_params.time[1]).format(format);\n\n      if (new_params.reportType == 1) {\n        new_params.startTime += '-00';\n        new_params.endTime += '-00';\n      }\n    }\n\n    delete new_params.time;\n    setSearchParams(_objectSpread({}, new_params));\n\n    let all_params = _objectSpread(_objectSpread({}, new_params), pageParams);\n\n    if (isExport) {\n      downloadData(all_params);\n    } else {\n      console.log('get_list', all_params);\n      fetchList(all_params);\n    }\n  };\n\n  const downloadData = async params => {\n    console.log('downloadData', params);\n    let data = await api.exportReportData(params);\n\n    if (data.data.code == 0) {\n      if (data.data.data) {\n        window.open(data.data.data);\n      } else {\n        _message.warning('暂无可导出数据');\n      }\n    }\n  };\n\n  const changePageParams = page => {\n    let pParams = _objectSpread({}, page);\n\n    let params = _objectSpread(_objectSpread({}, searchParams), pParams);\n\n    setPageParams(pParams);\n    fetchList(params);\n  };\n\n  const changeTab = key => {\n    activeKey = key;\n    setActiveKey(key);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(\"div\", {\n    className: \"searchForm\",\n    style: {\n      marginBottom: '15px'\n    }\n  }, __jsx(_Tabs, {\n    activeKey: activeKey,\n    onTabClick: key => changeTab(key)\n  }, __jsx(TabPane, {\n    tab: \"\\u7F51\\u70B9\\u4E1A\\u7EE9\",\n    key: \"0\",\n    forceRender: true\n  }), __jsx(TabPane, {\n    tab: \"\\u4E2A\\u4EBA\\u4E1A\\u7EE9\",\n    key: \"1\",\n    forceRender: true\n  })), __jsx(SearchForm, {\n    onSearch,\n    netWorks,\n    activeKey,\n    proList\n  })), __jsx(TableList, {\n    data,\n    activeKey,\n    pageParams,\n    changePageParams\n  }));\n}\n\nbody.getInitialProps = async () => ({});\n\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}