{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport api from '~/api/product';\nimport { cookies } from '~/utils';\nimport '~/themes/index.less';\nimport { CommonLayout } from '~/components/Layout/Layout';\nimport Login from '~/pages/login';\nimport { KeepAliveProvider } from 'react-next-keep-alive';\nimport { useRouter } from 'next/router';\nexport const Context = React.createContext();\n\nconst Main = ({\n  statusCode,\n  Component,\n  pageProps\n}) => {\n  const router = useRouter();\n\n  if (pageProps.login || pageProps.isError) {\n    return __jsx(Component, pageProps);\n  }\n\n  return __jsx(CommonLayout, null, __jsx(KeepAliveProvider, {\n    router: router\n  }, __jsx(Component, pageProps)));\n};\n\nfunction App({\n  Component,\n  pageProps,\n  statusCode,\n  isServer,\n  menu\n}) {\n  return __jsx(_ConfigProvider, {\n    locale: zhCN\n  }, __jsx(Context.Provider, {\n    value: {\n      menu\n    }\n  }, __jsx(Main, {\n    Component,\n    pageProps,\n    statusCode,\n    isServer\n  })));\n}\n\nApp.getInitialProps = async appContext => {\n  let statusCode = 0;\n  const isServer = appContext.ctx.req !== undefined;\n\n  if (isServer) {\n    axios.defaults.baseURL = `${appContext.ctx.req.protocol}://${appContext.ctx.req.headers.host}`;\n\n    if (appContext.ctx.req.headers && appContext.ctx.req.headers.cookie) {\n      // console.log('server:', appContext.ctx.req.headers.cookie)\n      const cookie = appContext.ctx.req.headers.cookie.replace('sessionId=undefined;', '');\n      const {\n        sessionId\n      } = cookies(cookie);\n      delete axios.defaults.headers.common['token'];\n\n      if (sessionId !== undefined && sessionId !== 'undefined') {\n        axios.defaults.headers.common['token'] = sessionId;\n      }\n    }\n  }\n\n  let pageProps = {}; // let {menu} = await import('~/lib/menu')\n\n  let menu = [];\n\n  try {\n    // throw new Error({msg: 'test'})\n    const {\n      data: {\n        code,\n        data\n      }\n    } = await api.get_menu_list(); // console.log(code, data)\n\n    if (code == 0 && Array.isArray(data)) {\n      menu = data;\n    }\n\n    statusCode = code;\n  } catch (e) {\n    console.log(e);\n    menu = [];\n\n    if (isServer && !appContext.ctx.req.originalUrl.startsWith('/error')) {\n      appContext.ctx.res.writeHead(307, {\n        Location: '/error?statusCode=500'\n      });\n      appContext.ctx.res.end();\n    }\n  }\n\n  if (appContext.Component.getInitialProps) {\n    pageProps = await appContext.Component.getInitialProps(appContext);\n    statusCode = pageProps.code;\n  }\n\n  if (isServer && (statusCode === -8 || statusCode === 1) && !pageProps.isError) {\n    // console.log(pageProps)\n    if (appContext.ctx.req.originalUrl !== '/login') {\n      appContext.ctx.res.writeHead(307, {\n        Location: '/login'\n      });\n      appContext.ctx.res.end();\n    }\n  }\n\n  return {\n    pageProps,\n    menu,\n    statusCode\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/rxhui/信用算力/项目/cloud_pro/pages/_app.js"],"names":["React","axios","zhCN","api","cookies","CommonLayout","Login","KeepAliveProvider","useRouter","Context","createContext","Main","statusCode","Component","pageProps","router","login","isError","App","isServer","menu","getInitialProps","appContext","ctx","req","undefined","defaults","baseURL","protocol","headers","host","cookie","replace","sessionId","common","data","code","get_menu_list","Array","isArray","e","console","log","originalUrl","startsWith","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {ConfigProvider} from 'antd'\nimport zhCN from 'antd/lib/locale/zh_CN'\nimport api from '~/api/product'\nimport {cookies} from '~/utils'\nimport '~/themes/index.less'\nimport {CommonLayout} from '~/components/Layout/Layout'\nimport Login from '~/pages/login'\nimport {KeepAliveProvider} from 'react-next-keep-alive'\nimport {useRouter} from 'next/router'\n\nexport const Context = React.createContext()\n\nconst Main = ({statusCode, Component, pageProps}) => {\n  const router = useRouter()\n  if (pageProps.login || pageProps.isError) {\n    return <Component {...pageProps} />\n  }\n\n  return (\n    <CommonLayout>\n      <KeepAliveProvider router={router}>\n        <Component {...pageProps} />\n      </KeepAliveProvider>\n    </CommonLayout>\n  )\n}\n\nfunction App({Component, pageProps, statusCode, isServer, menu}) {\n  return (\n    <ConfigProvider locale={zhCN}>\n      <Context.Provider value={{menu}}>\n        <Main {...{Component, pageProps, statusCode, isServer}} />\n      </Context.Provider>\n    </ConfigProvider>\n  )\n}\n\nApp.getInitialProps = async (appContext) => {\n  let statusCode = 0\n  const isServer = appContext.ctx.req !== undefined\n\n  if (isServer) {\n    axios.defaults.baseURL = `${appContext.ctx.req.protocol}://${appContext.ctx.req.headers.host}`\n\n    if (appContext.ctx.req.headers && appContext.ctx.req.headers.cookie) {\n      // console.log('server:', appContext.ctx.req.headers.cookie)\n      const cookie = appContext.ctx.req.headers.cookie.replace(\n        'sessionId=undefined;',\n        '',\n      )\n\n      const {sessionId} = cookies(cookie)\n\n      delete axios.defaults.headers.common['token']\n\n      if (sessionId !== undefined && sessionId !== 'undefined') {\n        axios.defaults.headers.common['token'] = sessionId\n      }\n    }\n  }\n\n  let pageProps = {}\n  // let {menu} = await import('~/lib/menu')\n  let menu = []\n  try {\n    // throw new Error({msg: 'test'})\n    const {\n      data: {code, data},\n    } = await api.get_menu_list()\n    // console.log(code, data)\n    if (code == 0 && Array.isArray(data)) {\n      menu = data\n    }\n    statusCode = code\n  } catch (e) {\n    console.log(e)\n    menu = []\n\n    if (isServer && !appContext.ctx.req.originalUrl.startsWith('/error')) {\n      appContext.ctx.res.writeHead(307, {Location: '/error?statusCode=500'})\n      appContext.ctx.res.end()\n    }\n  }\n\n  if (appContext.Component.getInitialProps) {\n    pageProps = await appContext.Component.getInitialProps(appContext)\n    statusCode = pageProps.code\n  }\n\n  if (\n    isServer &&\n    (statusCode === -8 || statusCode === 1) &&\n    !pageProps.isError\n  ) {\n    // console.log(pageProps)\n    if (appContext.ctx.req.originalUrl !== '/login') {\n      appContext.ctx.res.writeHead(307, {Location: '/login'})\n      appContext.ctx.res.end()\n    }\n  }\n\n  return {\n    pageProps,\n    menu,\n    statusCode,\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}