{"ast":null,"code":"import \"antd/lib/empty/style\";\nimport _Empty from \"antd/lib/empty\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport api from '~/api/collection';\nexport default function (props) {\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    if (props.productId) {\n      form.resetFields();\n      getData();\n    }\n  }, [props.productId]);\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$api$getApprais, _yield$api$getApprais2, code, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.getAppraisalConfig(props.productId);\n\n            case 2:\n              _yield$api$getApprais = _context.sent;\n              _yield$api$getApprais2 = _yield$api$getApprais.data;\n              code = _yield$api$getApprais2.code;\n              data = _yield$api$getApprais2.data;\n\n              if (code == 0) {\n                form.setFieldsValue({\n                  list: data\n                });\n                setData(data);\n              }\n\n              console.log(code, data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var saveSetting = function saveSetting() {\n    form.validateFields().then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n        var params, _yield$api$changeAppr, _yield$api$changeAppr2, code, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = values.list.map(function (v) {\n                  return {\n                    id: v.id + '',\n                    newValue: v.newValue + ''\n                  };\n                });\n                _context2.next = 3;\n                return api.changeAppraisalConfig({\n                  valueList: params\n                });\n\n              case 3:\n                _yield$api$changeAppr = _context2.sent;\n                _yield$api$changeAppr2 = _yield$api$changeAppr.data;\n                code = _yield$api$changeAppr2.code;\n                data = _yield$api$changeAppr2.data;\n\n                if (code == 0) {\n                  _message.success('修改成功');\n\n                  getData();\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }())[\"catch\"](function (errorInfo) {\n      console.error(errorInfo);\n    });\n  };\n\n  return __jsx(_Form, {\n    form: form\n  }, __jsx(_Form.List, {\n    name: \"list\"\n  }, function (fields) {\n    return fields.map(function (field, index) {\n      return (// {...field}\n        __jsx(\"div\", {\n          key: index\n        }, __jsx(_Space, {\n          style: {\n            marginBottom: 15\n          }\n        }, __jsx(\"div\", {\n          style: {\n            marginBottom: 24\n          }\n        }, data[index] && data[index].name, \"\\u6309\\u6536\\u56DE\\u603B\\u91D1\\u989D\\u7684\"), __jsx(\"div\", {\n          style: {\n            margin: '0 20px'\n          }\n        }, __jsx(_Form.Item, {\n          name: [field.name, 'newValue'],\n          rules: [{\n            required: true,\n            message: '请输入'\n          }]\n        }, __jsx(_InputNumber, {\n          min: 0\n        }))), __jsx(\"div\", {\n          style: {\n            marginBottom: 24\n          }\n        }, \" \\u8BA1\\u7B97\\u3002\")))\n      );\n    });\n  }), Array.isArray(data) && data.length > 0 ? __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    onClick: saveSetting\n  }, \"\\u4FDD\\u5B58\")) : __jsx(_Empty, {\n    style: {\n      margin: '50px 0'\n    },\n    image: \"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\",\n    imageStyle: {\n      height: 60\n    },\n    description: '未配置'\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}