{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/steps/style\";\nimport _Steps from \"antd/lib/steps\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from '~/components/Layout';\nimport TableList from '~/components/pages/collection/setting/automatic/TableList';\nimport api from '~/api/collection';\nconst breadcrumbs = [{\n  text: '贷后管理'\n}, {\n  text: '贷后管理设置'\n}, {\n  text: '催收自动分案设置'\n}];\n\nconst getProData = async () => {\n  let {\n    data: {\n      code,\n      data\n    }\n  } = await api.get_data_dict('COLLECTION_PRODUCT');\n  return code == 0 ? data : [];\n};\n\nconst getLevelDictData = async () => {\n  let {\n    data: {\n      code,\n      data\n    }\n  } = await api.get_data_dict('COLLECTION_LEVEL');\n  return code == 0 ? data : [];\n};\n\nconst getLevelData = async productId => {\n  let {\n    data: {\n      code,\n      data\n    }\n  } = await api.getProdutLevelConfig(productId);\n  return code == 0 ? data : [];\n};\n\nfunction body(props) {\n  const {\n    0: selectItem,\n    1: setSelectItem\n  } = useState(0);\n  const {\n    0: levelData,\n    1: setLevelData\n  } = useState([]);\n  useEffect(() => {\n    if (Array.isArray(props.data) && props.data.length > 0) {\n      changeLevelData(props.data[0].code);\n    }\n  }, []);\n\n  const changeLevelData = async productId => {\n    let data = await getLevelData(productId);\n    let res = [];\n\n    if (Array.isArray(data)) {\n      data.forEach(v => {\n        let item = props.levelDictData.find(dict => dict.description == v.collectionLevel);\n\n        if (item) {\n          res.push(item);\n        }\n      });\n    }\n\n    setLevelData(res);\n  };\n\n  const onChangePro = e => {\n    setSelectItem(e.target.value);\n    changeLevelData(props.data[e.target.value].code);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, null, __jsx(_Steps, {\n    direction: \"vertical\"\n  }, __jsx(_Steps.Step, {\n    title: \"\\u9009\\u62E9\\u8D37\\u6B3E\\u4EA7\\u54C1\",\n    status: \"process\",\n    description: __jsx(_Space, {\n      align: \"center\",\n      style: {\n        margin: '30px 0'\n      }\n    }, __jsx(\"span\", null, \"\\u4FE1\\u8D37\\u4EA7\\u54C1\\uFF1A\"), __jsx(_Radio.Group, {\n      value: selectItem,\n      onChange: onChangePro\n    }, props.data.map((v, i) => {\n      return __jsx(_Radio.Button, {\n        value: i,\n        key: i\n      }, v.description);\n    })))\n  }), __jsx(_Steps.Step, {\n    title: \"\\u8BBE\\u7F6E\\u81EA\\u52A8\\u5206\\u6848\",\n    status: \"process\",\n    description: __jsx(TableList, {\n      collectionProducts: props.data,\n      levelData: levelData,\n      productId: props.data.length > 0 && props.data[selectItem].code || ''\n    })\n  }))));\n}\n\nbody.getInitialProps = async () => {\n  let data = await getProData();\n  let levelDictData = await getLevelDictData();\n  return {\n    data,\n    levelDictData\n  };\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}