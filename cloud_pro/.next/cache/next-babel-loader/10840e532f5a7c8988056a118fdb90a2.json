{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/collection';\n\nvar useTransvertMembers = function useTransvertMembers() {\n  var _useCookies = useCookies(['sessionId']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _useState = useState([]),\n      treeData = _useState[0],\n      setTreeData = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$api$getTreeMem, _yield$api$getTreeMem2, data, code;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.getTreeMemberList({\n                  authToken: cookies.sessionId\n                });\n\n              case 3:\n                _yield$api$getTreeMem = _context.sent;\n                _yield$api$getTreeMem2 = _yield$api$getTreeMem.data;\n                data = _yield$api$getTreeMem2.data;\n                code = _yield$api$getTreeMem2.code;\n\n                if (code == 0) {\n                  tansvertKey(data);\n                  tansvertChildrenKey(data);\n                  setTreeData([data]);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var tansvertKey = function tansvertKey(mem) {\n    setCommonKey(mem);\n    mem.children = mem.children && mem.children.length ? mem.children : [];\n  };\n\n  var setCommonKey = function setCommonKey(one) {\n    one.title = \"\".concat(one.trueName, \"_\").concat(one.roleName);\n    one.value = \"\".concat(one.accountName);\n    one.key = String(one.accountName);\n    one.token = one.authToken;\n  };\n\n  var tansvertChildrenKey = function tansvertChildrenKey(mem) {\n    if (Array.isArray(mem.children)) {\n      for (var i = 0; i < mem.children.length; i++) {\n        var one = mem.children[i];\n        setCommonKey(one);\n\n        if (one.children && one.children.length) {\n          tansvertChildrenKey(one);\n        }\n      }\n    }\n  };\n\n  return treeData;\n};\n\nexport default useTransvertMembers;","map":null,"metadata":{},"sourceType":"module"}