{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState, useContext } from 'react';\nimport apicustomer from '~/api/customer';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nimport { withKeepAlive } from 'react-next-keep-alive';\nvar breadcrumbs = [{\n  text: '客户管理'\n}, {\n  text: '客户列表'\n}];\nvar pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nvar values = {};\n\nfunction body(props) {\n  _s();\n\n  var _useState = useState([]),\n      totalData = _useState[0],\n      setTotalData = _useState[1];\n\n  var _useState2 = useState([]),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  onSearch();\n                } catch (error) {\n                  console.log(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var fetchList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var values,\n          _yield$apicustomer$ge,\n          _yield$apicustomer$ge2,\n          data,\n          code,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              values = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              _context2.prev = 1;\n              values.fiveLevelType = values.fiveLevelType || null;\n              _context2.next = 5;\n              return apicustomer.get_customer_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n            case 5:\n              _yield$apicustomer$ge = _context2.sent;\n              _yield$apicustomer$ge2 = _yield$apicustomer$ge.data;\n              data = _yield$apicustomer$ge2.data;\n              code = _yield$apicustomer$ge2.code;\n\n              if (code === 0 && data) {\n                setTotalData(data);\n                setList(data.list);\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 12]]);\n    }));\n\n    return function fetchList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = value;\n              pageParams.pageNum = 1;\n              fetchList(_objectSpread({}, values));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onSearch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onPage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              fetchList(values);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onPage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(SearchForm, {\n    onSearch: onSearch,\n    fetchList: fetchList\n  }), __jsx(TableList, {\n    list: list,\n    onPage: onPage,\n    pageParams: pageParams,\n    totalData: totalData\n  })));\n}\n\n_s(body, \"nJ7bAmvS9V4AfToXQ8CdGqFwrK8=\");\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5);\n}));\nexport default withKeepAlive(body, 'customer-list');","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/customer/list/index.js"],"names":["Layout","React","useEffect","useState","useContext","apicustomer","SearchForm","TableList","withKeepAlive","breadcrumbs","text","pageParams","pageNum","pageSize","values","body","props","totalData","setTotalData","list","setList","fetchData","onSearch","error","console","log","fetchList","fiveLevelType","get_customer_list","data","code","value","onPage","width","getInitialProps"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState, useContext} from 'react'\nimport {Space, message} from 'antd'\nimport apicustomer from '~/api/customer'\nimport SearchForm from './SearchForm'\nimport TableList from './TableList'\nimport {withKeepAlive} from 'react-next-keep-alive'\n\nconst breadcrumbs = [{text: '客户管理'}, {text: '客户列表'}]\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10,\n}\nlet values = {}\nfunction body(props) {\n  const [totalData, setTotalData] = useState([])\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        onSearch()\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const fetchList = async (values = {}) => {\n    try {\n      values.fiveLevelType = values.fiveLevelType || null\n      const {\n        data: {data, code},\n      } = await apicustomer.get_customer_list({...pageParams, ...values})\n      if (code === 0 && data) {\n        setTotalData(data)\n        setList(data.list)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const onSearch = async (value) => {\n    values = value\n    pageParams.pageNum = 1\n    fetchList({...values})\n  }\n\n  const onPage = async () => {\n    fetchList(values)\n  }\n\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Space direction=\"vertical\" size=\"large\" style={{width: '100%'}}>\n        <SearchForm\n          {...{\n            onSearch,\n            fetchList,\n          }}\n        />\n\n        <TableList\n          {...{\n            list,\n            onPage,\n            pageParams,\n            totalData,\n          }}\n        />\n      </Space>\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  return {}\n}\n\nexport default withKeepAlive(body, 'customer-list')\n"]},"metadata":{},"sourceType":"module"}