{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport apiAccounting from '~/api/accounting';\nconst FormItem = _Form.Item;\n\nconst TableList = ({\n  list,\n  onPage,\n  pageParams,\n  totalData,\n  fetchCostMothlyList\n}) => {\n  const [form] = _Form.useForm();\n\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(pageParams.pageSize);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: nextVisible,\n    1: setNextVisible\n  } = useState(false);\n  const {\n    0: itemList,\n    1: setItemList\n  } = useState([]);\n  const {\n    0: returnData,\n    1: setReturnData\n  } = useState([]);\n  const columns = [{\n    title: '成本项',\n    dataIndex: 'typeString',\n    key: 'typeString',\n    width: 150\n  }, {\n    title: '预估成本（元）',\n    dataIndex: 'planCost',\n    key: 'planCost',\n    width: 150,\n    render: record => {\n      if (record == null) {\n        return null;\n      } else {\n        let str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '实际成本（元）',\n    dataIndex: 'realCost',\n    key: 'realCost',\n    width: 150,\n    render: record => {\n      if (record == null) {\n        return null;\n      } else {\n        let str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '操作',\n    dataIndex: 'status',\n    key: 'status',\n    width: 150,\n    render: (record, row) => {\n      return row.status == 0 && row.type != 0 ? __jsx(\"a\", {\n        onClick: () => business(row)\n      }, \"\\u6838\\u7B97\") : row.type == 0 || row.typeString == '合计' ? __jsx(\"span\", null, \"-\") : __jsx(\"span\", null, \"\\u5DF2\\u7ED3\\u6E05\");\n    }\n  }];\n\n  const onShowSizeChange = (current, pageSize) => {\n    console.log(current, pageSize);\n    pageParams.pageSize = pageSize;\n    setPageSize(pageSize);\n  };\n\n  const pagination = {\n    defaultCurrent: 1,\n    total: totalData.total,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: total => {\n      return `共 ${total} 条记录`;\n    },\n    onChange: pageNumber => {\n      pageParams.pageNum = pageNumber;\n      onPage();\n    }\n  };\n\n  const business = row => {\n    setVisible(true);\n    setItemList(row);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const nextStep = async () => {\n    const values = await form.validateFields();\n    setNextVisible(true);\n    setReturnData(values);\n  };\n\n  const submit = async () => {\n    let postData = {\n      id: itemList.id,\n      type: itemList.type,\n      planCost: itemList.planCost,\n      realCost: Number(returnData.realCost),\n      statDate: itemList.statDate\n    };\n\n    if (itemList.typeString == '其他成本') {\n      postData = _objectSpread(_objectSpread({}, postData), {}, {\n        remark: returnData.remark\n      });\n    }\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAccounting.fetch_update_monthly(postData);\n\n      if (code == 0) {\n        _message.success('提交成功');\n\n        setNextVisible(false);\n        setVisible(false);\n        fetchCostMothlyList();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const goBack = () => {\n    setNextVisible(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(_Table, {\n    style: {\n      marginTop: 20\n    },\n    rowKey: \"id\",\n    columns: columns,\n    dataSource: list,\n    bordered: true,\n    pagination: pagination,\n    scroll: {\n      y: '100%',\n      x: '100%'\n    }\n  }), __jsx(_Modal, {\n    title: \"\\u6838\\u7B97\",\n    visible: visible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: handleCancel\n    }, \"\\u53D6\\u6D88\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: nextStep\n    }, \"\\u4E0B\\u4E00\\u6B65\")],\n    onCancel: () => setVisible(false)\n  }, __jsx(_Form, {\n    form: form,\n    key: Date.now,\n    name: \"form\",\n    style: {\n      marginLeft: 20\n    }\n  }, __jsx(FormItem, null, __jsx(\"p\", {\n    style: {\n      fontWeight: 500,\n      fontSize: 22,\n      color: '#333333'\n    }\n  }, itemList.typeString)), __jsx(FormItem, null, __jsx(\"p\", null, \"\\u6838\\u7B97\\u5468\\u671F\\uFF1A\", itemList.statDate)), __jsx(FormItem, null, __jsx(\"p\", null, \"\\u9884\\u4F30\\u6210\\u672C\\uFF1A\", itemList.planCost ? `${itemList.planCost}元` : '-')), __jsx(FormItem, {\n    label: \"\\u5B9E\\u9645\\u6210\\u672C\",\n    name: \"realCost\",\n    style: {\n      marginLeft: -10\n    },\n    rules: [{\n      required: true,\n      message: '请输入实际成本'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        var reg = /^(([0-9]+)|([0-9]+\\.[0-9]{0,2}))$/;\n\n        if (value && !reg.test(value)) {\n          return Promise.reject('请输入大于等于0的数，并且最多保留2位小数');\n        }\n\n        if (value > 999999999999) {\n          return Promise.reject('输入实际成本过大，请重新输入');\n        }\n\n        return Promise.resolve();\n      }\n\n    })]\n  }, __jsx(_InputNumber, {\n    style: {\n      width: 150\n    }\n  })), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      bottom: 125,\n      left: 270\n    }\n  }, \"\\u5143\"), itemList.typeString == '其他成本' ? __jsx(FormItem, {\n    label: \"\\u5907\\u6CE8\",\n    name: \"remark\"\n  }, \"\\u5176\\u4ED6\\u6210\\u672C-\", __jsx(_Input, {\n    style: {\n      width: 150\n    },\n    placeholder: \"\\u9009\\u586B\"\n  })) : null), __jsx(\"span\", {\n    style: {\n      color: '#aeaeae'\n    }\n  }, \"\\uFF08\\u8BF7\\u5728\\u8D26\\u5355\\u7ED3\\u6E05\\u540E\\u5F55\\u5165\\u5B9E\\u9645\\u6210\\u672C\\uFF0C\\u63D0\\u4EA4\\u540E\\u3010\\u5E94\\u4ED8\\u3011\\u4E2D\\u5373\\u4E0D\\u518D\\u7EDF\\u8BA1\\u6B64\\u9879\\uFF09\")), __jsx(_Modal, {\n    title: \"\\u64CD\\u4F5C\\u786E\\u8BA4\",\n    visible: nextVisible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: goBack\n    }, \"\\u8FD4\\u56DE\\u4FEE\\u6539\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: submit\n    }, \"\\u786E\\u8BA4\\u63D0\\u4EA4\")],\n    onCancel: () => setNextVisible(false),\n    maskClosable: false,\n    destroyOnClose: true\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      backgroundColor: '#d1e9ff',\n      color: '#3da2ff',\n      height: 30,\n      margin: '0 auto',\n      paddingTop: 5\n    }\n  }, __jsx(InfoCircleOutlined, {\n    style: {\n      paddingRight: 5\n    }\n  }), \"\\u63D0\\u4EA4\\u540E\\uFF0C\\u72B6\\u6001\\u5373\\u53D8\\u4E3A\\u5DF2\\u7ED3\\u6E05\\uFF0C\\u4E0D\\u53EF\\u518D\\u4FEE\\u6539\"), __jsx(\"div\", {\n    style: {\n      marginLeft: '30%'\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 400,\n      fontSize: 22,\n      marginTop: 20\n    }\n  }, itemList.typeString), __jsx(\"p\", {\n    style: {\n      marginTop: 20\n    }\n  }, \"\\u6838\\u7B97\\u5468\\u671F:\\xA0\\xA0\\xA0\\xA0\\xA0\", itemList.statDate), __jsx(\"p\", {\n    style: {\n      marginTop: 20\n    }\n  }, \"\\u5B9E\\u9645\\u6210\\u672C:\\xA0\\xA0\\xA0\\xA0\\xA0\", returnData.realCost, \"\\xA0\\u5143\"), itemList.typeString == '其他成本' ? __jsx(\"p\", {\n    style: {\n      marginTop: 20\n    }\n  }, \"\\u5907\\u6CE8:\\u5176\\u4ED6\\u6210\\u672C-\\xA0\\xA0\", returnData.remark) : null)));\n};\n\nexport default TableList;","map":null,"metadata":{},"sourceType":"module"}