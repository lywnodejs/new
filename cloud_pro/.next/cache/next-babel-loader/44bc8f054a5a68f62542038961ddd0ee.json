{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from '~/components/Layout';\nimport Router, { withRouter } from 'next/router';\nimport RepayList from '../RepayList';\nimport ContactList from '../ContactList';\nimport api from '~/api/order';\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nconst breadcrumbs = [{\n  text: '进件管理'\n}, {\n  text: '进件列表'\n}];\n\nfunction body({\n  operationTypes,\n  statusList,\n  router\n}) {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      breadcrumbs.push({\n        text: router.query.tag == 'repayWater' ? '支付信息' : '通讯录'\n      });\n      onSearch();\n    }\n\n    fetchData();\n  }, []);\n\n  const fetchList = async () => {\n    if (router.query.tag == 'repayWater') {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await api.fetch_loan_water(_objectSpread(_objectSpread({}, pageParams), {}, {\n          loanApplyId: router.query.id\n        }));\n\n        if (code === 0) {\n          setList(data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await api.fetch_address_list(_objectSpread(_objectSpread({}, pageParams), {}, {\n          userId: router.query.userId\n        }));\n\n        if (code === 0) {\n          setList(data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const onSearch = async () => {\n    pageParams.pageNo = 1;\n    fetchList();\n  };\n\n  const onPage = async () => {\n    fetchList();\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, router.query.tag == 'repayWater' && __jsx(RepayList, {\n    list,\n    onPage,\n    operationTypes,\n    statusList,\n    pageParams\n  }), router.query.tag == 'contacts' && __jsx(ContactList, {\n    list,\n    onPage,\n    pageParams\n  }));\n}\n\nbody.getInitialProps = async () => {\n  const backData = {\n    operationTypes: [],\n    statusList: []\n  };\n\n  try {\n    const [{\n      data: {\n        data,\n        code\n      }\n    }, {\n      data: {\n        data: statusList,\n        code: statusCode\n      }\n    }] = await Promise.all([api.get_data_dict('LOAN_DEDUCT_COMMOND_TYPE'), api.get_data_dict('LOAN_DEDUCT_COMMOND_STATUS')]);\n\n    if (code == 0) {\n      return {\n        operationTypes: data,\n        statusList: statusCode === 0 ? statusList : []\n      };\n    }\n\n    backData.code = code;\n    return backData;\n  } catch (err) {\n    console.log(err);\n    return backData;\n  }\n};\n\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}