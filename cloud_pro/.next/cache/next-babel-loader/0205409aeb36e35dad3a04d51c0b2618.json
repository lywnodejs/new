{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/descriptions/style\";\nimport _Descriptions from \"antd/lib/descriptions\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/image/style\";\nimport _Image from \"antd/lib/image\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/steps/style\";\nimport _Steps from \"antd/lib/steps\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport api from '~/api/collection';\nimport apiProduct from '~/api/product';\nimport _ from 'lodash';\nimport Contacts from '~/components/pages/collection/reminded/form/Contacts';\nimport History from '~/components/pages/collection/reminded/form/History';\nimport SendSms from '~/components/pages/collection/reminded/form/SendSms';\nimport styles from './index.less';\nconst {\n  Step\n} = _Steps;\nconst {\n  TabPane\n} = _Tabs;\nconst breadcrumbs = [{\n  text: '催收管理'\n}, {\n  text: '待催列表'\n}, {\n  text: '查看订单'\n}];\nconst idCardImgType = ['idCardFrontOcr', 'idCardBackOcr', 'livenessOcr'];\n\nconst getData = async id => {\n  let {\n    data: {\n      code,\n      data\n    }\n  } = await api.fetch_order_detail(id);\n  return code == 0 ? data : {};\n};\n\nfunction body(props) {\n  const {\n    0: detail,\n    1: setDetail\n  } = useState({});\n  const {\n    0: history,\n    1: setHistory\n  } = useState([]);\n  const {\n    0: defaultActiveKey,\n    1: setDefaultActiveKey\n  } = useState('history');\n  useEffect(() => {\n    getDetail();\n  }, []);\n\n  const getDetail = async key => {\n    let data = await getData(props.id);\n\n    if (data && data.loanApplyVo) {\n      setDetail(data.loanApplyVo);\n      const {\n        catSnapShotDTOS,\n        collectionOrderRecordList\n      } = data.loanApplyVo;\n\n      if (Array.isArray(catSnapShotDTOS) && catSnapShotDTOS.length > 0) {\n        setDefaultActiveKey(key || '1');\n      }\n\n      if (Array.isArray(collectionOrderRecordList)) {\n        setHistory(collectionOrderRecordList);\n      }\n    }\n  }; // const reloadData = () => {}\n\n\n  const onContactMobile = () => {\n    let phones = [];\n    let mobilePhoneEncrypt = [];\n\n    if (detail.otherPhones) {\n      phones = detail.otherPhones.split(',');\n    }\n\n    if (detail.mobilePhoneEncrypt) {\n      mobilePhoneEncrypt = detail.mobilePhoneEncrypt.split(',');\n    }\n\n    return phones.length ? phones.map((phone, index) => {\n      return __jsx(\"span\", {\n        style: {\n          marginRight: '6px'\n        }\n      }, phone);\n    }) : null;\n  };\n\n  const ContactList = props => {\n    let data = Array.isArray(props.data) ? _.cloneDeep(props.data) : [];\n    data = data.map((v, i) => {\n      let arr = v.showValue ? v.showValue.split('|') : [];\n      return _objectSpread(_objectSpread({}, v), {}, {\n        userName: arr[0],\n        phoneNo: arr[1],\n        contactId: i\n      });\n    });\n    return __jsx(Contacts, _extends({\n      list: data,\n      reloadData: getDetail\n    }, props.initData, {\n      userId: detail.userId,\n      mobilePhoneEncrypt: detail.mobilePhoneEncrypt\n    })) // <Table\n    //   dataSource={data}\n    //   columns={contactColumns}\n    //   pagination={false}\n    //   rowKey=\"contactId\"\n    // />\n    ;\n  };\n\n  const ShowValContainer = ({\n    type,\n    showValue\n  }) => {\n    if (idCardImgType.indexOf(type) > -1) {\n      type = 'image';\n    }\n\n    if (type == 'image' || type == 'voice' || type == 'video') {\n      showValue = showValue ? showValue.split(',') : [];\n    }\n\n    const getByType = () => {\n      let template = null;\n\n      switch (type) {\n        case 'image':\n          template = __jsx(\"div\", {\n            className: \"imageBox\"\n          }, __jsx(_Image.PreviewGroup, null, showValue.map((src, i) => {\n            return __jsx(_Image, {\n              src: src,\n              key: i\n            });\n          })));\n          break;\n\n        case 'video':\n          template = __jsx(_Row, {\n            gutter: 10\n          }, showValue.map((src, i) => {\n            return __jsx(_Col, {\n              key: i\n            }, __jsx(\"video\", {\n              width: \"100\",\n              height: \"75\",\n              controls: true\n            }, __jsx(\"source\", {\n              src: src,\n              type: \"video/mp4\"\n            }), __jsx(\"source\", {\n              src: src,\n              type: \"video/ogg\"\n            }), \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301Video\\u6807\\u7B7E\\u3002\"));\n          }));\n          break;\n\n        case 'voice':\n          template = __jsx(\"audio\", {\n            controls: true\n          }, __jsx(\"source\", {\n            src: showValue,\n            type: \"audio/ogg\"\n          }), __jsx(\"source\", {\n            src: showValue,\n            type: \"audio/mpeg\"\n          }), \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301 audio \\u5143\\u7D20\\u3002\");\n          break;\n\n        default:\n          template = showValue;\n      }\n\n      return template;\n    };\n\n    return __jsx(React.Fragment, null, getByType());\n  };\n\n  const ShowDescriptions = props => {\n    const {\n      list\n    } = props.data;\n    let template = Array.isArray(list) ? __jsx(_Descriptions, {\n      bordered: true\n    }, list.map((desc, desc_index) => {\n      let values = desc.showValue;\n      let span = 1;\n\n      if (desc.attrType == 'image' || desc.attrType == 'voice' || desc.attrType == 'video') {\n        values = values ? values.split(',') : [];\n      }\n\n      if (Array.isArray(desc.list) && desc.list.length > 0 || desc.attrType == 'video' && Array.isArray(values) && values.length > 0) {\n        span = 3;\n      }\n\n      return __jsx(_Descriptions.Item, {\n        label: desc.attrName,\n        key: desc_index,\n        span: span\n      }, Array.isArray(desc.list) ? __jsx(ShowDescriptions, {\n        data: desc\n      }) : __jsx(ShowValContainer, {\n        type: desc.attrType,\n        showValue: desc.showValue\n      }));\n    })) : null;\n    return template;\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 15\n    }\n  }, __jsx(_Descriptions, {\n    title: `借据号：${detail.orderNum || ''}`\n  }, __jsx(_Descriptions.Item, {\n    label: \"\\u59D3\\u540D\"\n  }, detail.realName), __jsx(_Descriptions.Item, {\n    label: \"\\u624B\\u673A\\u53F7\"\n  }, detail.mobilePhone, \"\\uFF08\", __jsx(SendSms, {\n    mobilePhoneEncrypt: detail.mobilePhoneEncrypt,\n    outOrderNum: detail.outOrderNum\n  }), \"\\uFF09\"), __jsx(_Descriptions.Item, {\n    label: \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\"\n  }, detail.idCard), __jsx(_Descriptions.Item, {\n    label: \"\\u7533\\u8BF7\\u4EA7\\u54C1\"\n  }, detail.productName), __jsx(_Descriptions.Item, {\n    label: \"\\u7533\\u8BF7\\u65F6\\u95F4\"\n  }, detail.createTimeStr), __jsx(_Descriptions.Item, {\n    label: \"\\u653E\\u6B3E\\u65B9\\u5F0F\"\n  }, detail.userAccountTypeDesc), __jsx(_Descriptions.Item, {\n    label: \"\\u501F\\u6B3E\\u6E20\\u9053\"\n  }, detail.applySourceName), __jsx(_Descriptions.Item, {\n    label: \"\\u7533\\u8BF7\\u91D1\\u989D\"\n  }, detail.signLoanAmount), __jsx(_Descriptions.Item, {\n    label: \"\\u7533\\u8BF7\\u671F\\u9650\"\n  }, detail.loanApplyTerms), __jsx(_Descriptions.Item, {\n    label: \"\\u7ED3\\u6E05\\u5355\\u6570\"\n  }, detail.finishedOrderNum), __jsx(_Descriptions.Item, {\n    label: \"\\u5173\\u8054\\u624B\\u673A\"\n  }, onContactMobile()))), __jsx(_Card, {\n    title: \"\\u7528\\u6237\\u57FA\\u672C\\u4FE1\\u606F\"\n  }, __jsx(_Tabs, {\n    animated: {\n      tabPane: true\n    },\n    activeKey: defaultActiveKey,\n    onTabClick: key => setDefaultActiveKey(key)\n  }, Array.isArray(detail.catSnapShotDTOS) && detail.catSnapShotDTOS.map((v, i) => {\n    const key = i + 1 + '';\n    return __jsx(TabPane, {\n      className: styles.tabPaneBox,\n      tab: v.catName,\n      key: key\n    }, __jsx(_Card, {\n      title: v.catName\n    }, Array.isArray(v.secondLList) ? v.secondLList.map((s_item, s_index) => {\n      return __jsx(_Card, {\n        style: {\n          marginBottom: 15\n        },\n        key: s_index,\n        type: \"inner\",\n        title: s_item.catName\n      }, s_item.catType === 'cat_ocr' && __jsx(_Image.PreviewGroup, null, __jsx(_Row, {\n        gutter: 25\n      }, Array.isArray(s_item.list) && s_item.list.filter(img => idCardImgType.indexOf(img.attrType) > -1).map((img, img_index) => {\n        return __jsx(_Col, {\n          flex: \"0 0 200\",\n          key: img_index\n        }, __jsx(_Image, {\n          width: 200,\n          height: 150,\n          src: img.showValue\n        }), __jsx(\"div\", {\n          className: styles.imgTime\n        }, img.updateTime || '-'));\n      }))), s_item.catType !== 'cat_ocr' && s_item.catType !== 'cat_contact' && __jsx(ShowDescriptions, {\n        data: s_item\n      }), s_item.catType === 'cat_contact' && __jsx(ContactList, {\n        data: s_item.list,\n        initData: props\n      }));\n    }) : null));\n  }), __jsx(TabPane, {\n    tab: \"\\u50AC\\u6536\\u8BB0\\u5F55\",\n    key: \"history\"\n  }, __jsx(History, _extends({\n    list: history\n  }, props, {\n    reloadData: getDetail,\n    mobilePhoneEncrypt: detail.mobilePhoneEncrypt\n  }))))));\n}\n\nbody.getInitialProps = async context => {\n  const backData = {\n    collectionProducts: [],\n    collectionLevels: [],\n    urgeMethods: [],\n    urgeObjects: [],\n    urgeResults: [],\n    urgeResultUnknows: [],\n    urgeResultHighs: [],\n    urgeResultLows: [],\n    urgeIsConnects: [],\n    urgeReasonTypes: [],\n    urgeRepayDesires: [],\n    connectResults: [],\n    unConnectResults: [],\n    id: context.ctx.query.id\n  };\n\n  try {\n    const [{\n      data: {\n        data,\n        code\n      }\n    }, {\n      data: {\n        data: collectionLevels,\n        code: levelCode\n      }\n    }, {\n      data: {\n        data: urgeMethods,\n        code: levelCode01\n      }\n    }, {\n      data: {\n        data: urgeObjects,\n        code: levelCode02\n      }\n    }, {\n      data: {\n        data: urgeResults,\n        code: levelCode03\n      }\n    }, {\n      data: {\n        data: urgeResultUnknows,\n        code: levelCode04\n      }\n    }, {\n      data: {\n        data: urgeResultHighs,\n        code: levelCode05\n      }\n    }, {\n      data: {\n        data: urgeResultLows,\n        code: levelCode06\n      }\n    }, {\n      data: {\n        data: urgeIsConnects,\n        code: levelCode07\n      }\n    }, {\n      data: {\n        data: urgeReasonTypes,\n        code: levelCode08\n      }\n    }, {\n      data: {\n        data: urgeRepayDesires,\n        code: levelCode09\n      }\n    }] = await Promise.all([api.get_data_dict('COLLECTION_PRODUCT'), api.get_data_dict('COLLECTION_LEVEL'), api.get_data_dict('URGE_METHOD'), api.get_data_dict('URGE_OBJECT'), api.get_data_dict('URGE_RESULT'), api.get_data_dict('URGE_RESULT_UNKNOWN'), api.get_data_dict('URGE_RESULT_HIGH'), api.get_data_dict('URGE_RESULT_LOW'), api.get_data_dict('URGE_IS_CONNECT'), api.get_data_dict('URGE_REASON_TYPE'), api.get_data_dict('URGE_REPAY_DESIRE')]);\n\n    if (code == 0) {\n      return {\n        collectionProducts: data,\n        collectionLevels: levelCode === 0 ? collectionLevels : [],\n        urgeMethods: levelCode01 === 0 ? urgeMethods : [],\n        urgeObjects: levelCode02 === 0 ? urgeObjects : [],\n        urgeResults: levelCode03 === 0 ? urgeResults : [],\n        urgeResultUnknows: levelCode04 === 0 ? urgeResultUnknows : [],\n        urgeResultHighs: levelCode05 === 0 ? urgeResultHighs : [],\n        urgeResultLows: levelCode06 === 0 ? urgeResultLows : [],\n        urgeIsConnects: levelCode07 === 0 ? urgeIsConnects : [],\n        urgeReasonTypes: levelCode08 === 0 ? urgeReasonTypes : [],\n        urgeRepayDesires: levelCode09 === 0 ? urgeRepayDesires : [],\n        id: context.ctx.query.id\n      };\n    }\n\n    backData.code = code;\n    return backData;\n  } catch (err) {\n    console.log(err);\n    return backData;\n  }\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}