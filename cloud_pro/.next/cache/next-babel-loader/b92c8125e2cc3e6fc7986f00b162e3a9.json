{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport style from './style.less';\nimport { useEffect, useState } from 'react';\nimport { post, get } from '~/utils/fetch';\nimport nextId from 'react-id-generator';\nimport Router from 'next/router';\nvar breadcrumbs = [{\n  text: '工作台'\n}];\nvar dataSource = [{\n  key: '1',\n  name: '2020-11-20',\n  age: '张三 - 自由贷 - 授信初审',\n  address: '2020-11-21'\n}, {\n  key: '1',\n  name: '2020-11-29',\n  age: '李四 - 轻松贷 - 用信终审',\n  address: '2020-11-20'\n}];\nvar pageParams = {\n  pageNo: 1,\n  pageSize: 50\n};\nvar columns = [{\n  title: '开始时间',\n  dataIndex: 'beginTime',\n  key: 'beginTime',\n  align: 'left'\n}, {\n  title: '任务名称',\n  dataIndex: 'name',\n  key: 'name',\n  align: 'left'\n}, {\n  title: '截止日期',\n  dataIndex: 'expireDate',\n  key: 'expireDate',\n  align: 'left',\n  render: function render(value, values) {\n    return __jsx(React.Fragment, null, __jsx(\"span\", null, value || '-', \" \"), values.expire && __jsx(_Tag, {\n      color: \"red\"\n    }, \"\\u5DF2\\u8D85\\u65F6\"));\n  }\n}, {\n  title: '操作',\n  dataIndex: 'cz',\n  key: 'cz',\n  render: function render(record, row) {\n    return __jsx(\"a\", {\n      onClick: function onClick() {\n        return deal(row);\n      }\n    }, \"\\u5904\\u7406\");\n  }\n}];\n\nvar deal = function deal(row) {\n  var detailUrl = JSON.parse(row.detailUrl);\n  var url = \"/credit/examine/detail?creditId=\".concat(detailUrl.creditId, \"&orderId=\").concat(detailUrl.orderId, \"&flag=\").concat(detailUrl.flag);\n  Router.push(url);\n};\n\nvar TableList = function TableList(_ref) {\n  var onPage = _ref.onPage,\n      list = _ref.list;\n  var pagination = {\n    defaultCurrent: 1,\n    pageSize: pageParams.pageSize,\n    showQuickJumper: true,\n    showSizeChanger: false,\n    current: pageParams.pageNo,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(list.total, \" \\u6761\\u8BB0\\u5F55\");\n    },\n    onChange: function onChange(pageNo) {\n      pageParams.pageNo = pageNo;\n      onPage(pageNo);\n    }\n  };\n  return __jsx(_Table, {\n    pagination: pagination,\n    rowKey: function rowKey() {\n      return nextId();\n    },\n    dataSource: list.list,\n    columns: columns,\n    scroll: {\n      x: '100%',\n      y: 'calc(100vh - 430px)'\n    }\n  });\n};\n\nfunction body(_ref2) {\n  var summary = _ref2.summary,\n      list = _ref2.list;\n\n  var _useState = useState(list),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var onPage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var _yield$get, _yield$get$data, code, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get('/workbench/queryTaskList', pageParams);\n\n            case 2:\n              _yield$get = _context.sent;\n              _yield$get$data = _yield$get.data;\n              code = _yield$get$data.code;\n              data = _yield$get$data.data;\n\n              if (code === 0) {\n                setData(data);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPage(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Row, {\n    className: style.head\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(\"div\", null, __jsx(\"h2\", null, summary.waitCount), __jsx(\"span\", null, \"\\u5F85\\u529E\\u4EFB\\u52A1\"))), __jsx(_Col, {\n    span: 6\n  }, __jsx(\"div\", null, __jsx(\"h2\", null, summary.expireCount), __jsx(\"span\", null, \"\\u8D85\\u65F6\\u4EFB\\u52A1\"))), __jsx(_Col, {\n    span: 6\n  }, __jsx(\"div\", null, __jsx(\"h2\", null, summary.newCount), __jsx(\"span\", null, \"\\u4ECA\\u65E5\\u65B0\\u589E\"))), __jsx(_Col, {\n    span: 6\n  }, __jsx(\"div\", null, __jsx(\"h2\", null, summary.finishCount), __jsx(\"span\", null, \"\\u4ECA\\u65E5\\u5B8C\\u6210\")))), __jsx(\"div\", {\n    className: style.content\n  }, __jsx(\"h1\", null, \"\\u5F85\\u529E\\u4EFB\\u52A1\"), __jsx(TableList, {\n    list: data,\n    onPage: onPage\n  })));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  var _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, summary, _yield$Promise$all2$2, code, _yield$Promise$all2$3, list;\n\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return Promise.all([get('/workbench/summary'), get('/workbench/queryTaskList', pageParams)]);\n\n        case 3:\n          _yield$Promise$all = _context2.sent;\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n          _yield$Promise$all2$ = _yield$Promise$all2[0].data.data;\n          summary = _yield$Promise$all2$ === void 0 ? {} : _yield$Promise$all2$;\n          _yield$Promise$all2$2 = _yield$Promise$all2[1].data;\n          code = _yield$Promise$all2$2.code;\n          _yield$Promise$all2$3 = _yield$Promise$all2$2.data;\n          list = _yield$Promise$all2$3 === void 0 ? {} : _yield$Promise$all2$3;\n          return _context2.abrupt(\"return\", {\n            summary: summary,\n            list: list\n          });\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 17:\n          return _context2.abrupt(\"return\", {\n            summary: {},\n            list: []\n          });\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, null, [[0, 14]]);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}