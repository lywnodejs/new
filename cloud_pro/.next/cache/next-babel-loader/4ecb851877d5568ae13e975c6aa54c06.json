{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState, useRef } from 'react';\nimport moment from 'moment';\nimport apicustomer from '~/api/customer';\nvar FormItem = _Form.Item;\nvar RadioGroup = _Radio.Group;\nvar QuotaStatus = {\n  '1': '正常',\n  '2': '冻结'\n};\nvar startTime = new Date().toLocaleDateString();\n\nfunction AdjustmentLimitModal(props) {\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      adjustmentForm = _Form$useForm2[0];\n\n  var itemList = props.itemList,\n      classificationDoVisble = props.classificationDoVisble,\n      handleCancelDo = props.handleCancelDo,\n      productConversion = props.productConversion,\n      disabledDate = props.disabledDate,\n      onHide = props.onHide,\n      keyId = props.keyId,\n      fetchCustomerDetail = props.fetchCustomerDetail;\n\n  var _useState = useState([]),\n      returnData = _useState[0],\n      setReturnData = _useState[1];\n\n  var _useState2 = useState(false),\n      confirmModal = _useState2[0],\n      setConfirmModal = _useState2[1];\n\n  var _useState3 = useState([]),\n      timeDate = _useState3[0],\n      setTimeDate = _useState3[1];\n\n  useEffect(function () {\n    adjustmentForm.setFieldsValue(_objectSpread(_objectSpread({}, itemList), {}, {\n      fixedEndDate: moment(itemList.fixedEndDate)\n    }));\n  }, [classificationDoVisble]);\n\n  var onChange = function onChange(value, dateString) {\n    setTimeDate(dateString);\n  };\n\n  var nextStep = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return adjustmentForm.validateFields();\n\n            case 2:\n              values = _context.sent;\n              setReturnData(values);\n              setConfirmModal(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function nextStep() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var goBack = function goBack() {\n    setConfirmModal(false);\n  };\n\n  var getTargetDate = function getTargetDate(startDate, days) {\n    var startTime = new Date(startDate).getTime();\n    var diff = days * 86400 * 1000;\n    var endTime = startTime + diff;\n    var d = new Date(endTime);\n    var CurrentDate = '';\n    CurrentDate += d.getFullYear(); //var year=(d.getFullYear())+\"-\"+(d.getMonth()+1)+\"-\"+(d.getDate());\n\n    if (d.getMonth() + 1 > 9) {\n      CurrentDate += '-' + (d.getMonth() + 1);\n    } else {\n      CurrentDate += '-0' + (d.getMonth() + 1);\n    }\n\n    if (d.getDate() > 9) {\n      CurrentDate += '-' + d.getDate();\n    } else {\n      CurrentDate += '-0' + d.getDate();\n    }\n\n    return CurrentDate;\n  };\n\n  var subMit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var postData, _yield$apicustomer$up, _yield$apicustomer$up2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              postData = {\n                id: itemList.id,\n                fixedLimitAmount: returnData.fixedLimitAmount,\n                fixedEndDate: moment(returnData.fixedEndDate).format('YYYY-MM-DD'),\n                frozenEndType: returnData.frozenEndType,\n                accountStatus: returnData.accountStatus == '正常' ? 1 : 2\n              };\n\n              if (returnData.accountStatus == '冻结' && returnData.frozenEndType == '1') {\n                postData = _objectSpread(_objectSpread({}, postData), {}, {\n                  frozenEndDate: Number(returnData.frozenEndDay)\n                });\n              }\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return apicustomer.update_user_limitAmount(postData);\n\n            case 5:\n              _yield$apicustomer$up = _context2.sent;\n              _yield$apicustomer$up2 = _yield$apicustomer$up.data;\n              data = _yield$apicustomer$up2.data;\n              code = _yield$apicustomer$up2.code;\n\n              if (code == 0) {\n                _message.success('提交成功');\n\n                setConfirmModal(false);\n                onHide();\n                fetchCustomerDetail();\n              }\n\n              _context2.next = 17;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              setConfirmModal(false);\n              onHide();\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 12]]);\n    }));\n\n    return function subMit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", null, __jsx(_Modal, {\n    title: \"\\u8C03\\u6574\\u989D\\u5EA6\",\n    visible: classificationDoVisble,\n    width: 400,\n    onCancel: onHide,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: handleCancelDo\n    }, \"\\u53D6\\u6D88\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: nextStep\n    }, \"\\u4E0B\\u4E00\\u6B65\")],\n    getContainer: false\n  }, __jsx(_Form, {\n    name: \"adjustmentForm\",\n    key: Date.now,\n    form: adjustmentForm\n  }, __jsx(FormItem, null, __jsx(\"span\", {\n    style: {\n      fontWeight: 600,\n      fontSize: 18\n    }\n  }, itemList.userName, \"\\xA0\\xA0\\xA0\\xA0\", productConversion(itemList.productId))), __jsx(FormItem, {\n    label: \"\\u6388\\u4FE1\\u989D\\u5EA6\",\n    name: \"fixedLimitAmount\",\n    rules: [{\n      required: true,\n      message: '请输入授信额度'\n    }, function (_ref3) {\n      var getFieldValue = _ref3.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          if (value && (Number(value) < 0 || !Number.isInteger(Number(value)))) {\n            return Promise.reject('请输入正整数');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }]\n  }, __jsx(_Input, {\n    suffix: \"\\u5143\",\n    width: 50\n  })), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(FormItem, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, currentValues) {\n      return prevValues.accountStatus !== currentValues.accountStatus;\n    }\n  }, function (_ref4) {\n    var getFieldValue = _ref4.getFieldValue;\n\n    if (getFieldValue('accountStatus') == '冻结') {\n      return __jsx(FormItem, {\n        label: \"\\u51BB\\u7ED3\\u65F6\\u957F\",\n        name: \"frozenEndType\",\n        style: {\n          marginTop: 20\n        },\n        rules: [{\n          required: true,\n          message: '请选择冻结时长类型'\n        }]\n      }, __jsx(RadioGroup, null, __jsx(_Radio, {\n        value: 1\n      }, \"\\u51BB\\u7ED3\"), __jsx(_Radio, {\n        value: 2,\n        style: {\n          marginLeft: 90\n        }\n      }, \"\\u81F3\\u6709\\u6548\\u671F\")));\n    }\n  }), __jsx(FormItem, {\n    shouldUpdate: function shouldUpdate(prevValues, currentValues) {\n      return prevValues.frozenEndType !== currentValues.frozenEndType || prevValues.accountStatus !== currentValues.accountStatus;\n    },\n    style: {\n      position: 'absolute',\n      left: 140,\n      top: 0\n    }\n  }, function (_ref5) {\n    var getFieldValue = _ref5.getFieldValue;\n\n    if (getFieldValue('frozenEndType') == 1 && getFieldValue('accountStatus') == '冻结') {\n      return __jsx(FormItem, {\n        name: \"frozenEndDay\",\n        rules: [{\n          required: true,\n          message: '请填写冻结天数'\n        }, function (_ref6) {\n          var getFieldValue = _ref6.getFieldValue;\n          return {\n            validator: function validator(rule, value) {\n              if (value > 9999999) {\n                return Promise.reject('输入冻结天数过多，请重新输入');\n              }\n\n              if (!Number.isInteger(Number(value)) || Number(value) < 1) {\n                return Promise.reject('冻结天数为正整数，请重新输入');\n              }\n\n              return Promise.resolve();\n            }\n          };\n        }]\n      }, __jsx(_Input, {\n        style: {\n          width: 80\n        },\n        suffix: \"\\u5929\"\n      }));\n    }\n  }), __jsx(FormItem, {\n    label: \"\\u989D\\u5EA6\\u6709\\u6548\\u671F\",\n    name: \"fixedEndDate\",\n    rules: [{\n      required: true,\n      message: '请选择额度有效期'\n    }]\n  }, __jsx(_DatePicker, {\n    allowClear: true,\n    disabledDate: disabledDate,\n    onChange: onChange\n  }))))), __jsx(_Modal, {\n    title: \"\\u64CD\\u4F5C\\u786E\\u8BA4\",\n    visible: confirmModal,\n    width: 400,\n    onCancel: function onCancel() {\n      return setConfirmModal(false);\n    },\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: goBack\n    }, \"\\u8FD4\\u56DE\\u4FEE\\u6539\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: subMit\n    }, \"\\u786E\\u8BA4\\u63D0\\u4EA4\")]\n  }, __jsx(\"div\", {\n    style: {\n      fontWeight: 600,\n      fontSize: 18\n    }\n  }, itemList.userName, \"\\xA0\\xA0\\xA0\\xA0\", productConversion(itemList.productId)), __jsx(\"div\", {\n    style: {\n      marginTop: 20,\n      fontSize: 18\n    }\n  }, \"\\u6388\\u4FE1\\u989D\\u5EA6\\uFF1A\", returnData.fixedLimitAmount), __jsx(\"div\", {\n    style: {\n      marginTop: 20,\n      fontSize: 18\n    }\n  }, \"\\u989D\\u5EA6\\u6709\\u6548\\u671F: \", moment(returnData.fixedEndDate).format('YYYY-MM-DD'))));\n}\n\nAdjustmentLimitModal.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}));\nexport default AdjustmentLimitModal;","map":null,"metadata":{},"sourceType":"module"}