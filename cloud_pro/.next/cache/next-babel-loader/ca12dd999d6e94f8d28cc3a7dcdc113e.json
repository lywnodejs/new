{"ast":null,"code":"import \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/creditScore';\nimport SearchForm from './personal/SearchForm';\nimport TableList from './personal/TableList';\nimport ComSearchForm from './community/comSearchForm';\nimport ComTableList from './community/comTableList';\nimport TownSearchForm from './streetTown/TownSearchForm';\nimport TownTableList from './streetTown/TownTableList';\nconst {\n  TabPane\n} = _Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst breadcrumbs = [{\n  text: '乡村振兴'\n}, {\n  text: '信用分查询'\n}];\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 20\n};\nlet values = {};\n\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId']); //个人\n\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: totalData,\n    1: setTotalData\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: applyStatusList,\n    1: setApplyStatusList\n  } = useState([]); //村.社区\n\n  const {\n    0: listit,\n    1: setListit\n  } = useState([]);\n  const {\n    0: talData,\n    1: setTalData\n  } = useState([]); //街道.乡道\n\n  const {\n    0: tolist,\n    1: setTolist\n  } = useState([]);\n  const {\n    0: gotalData,\n    1: setGotalData\n  } = useState([]); //信用等级\n\n  const {\n    0: gradeList,\n    1: setGrade\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      fetchList();\n      onSearch();\n      onQuery();\n      onWhole();\n      fetchCredit();\n      fetchListItem();\n      fetchGrade();\n    }\n\n    fetchData();\n  }, []); //个人\n\n  const fetchList = async (values = {}) => {\n    try {\n      values.creditLevel = values.creditLevel || null;\n      values.streetCode = values.streetCode || null;\n      values.villageCode = values.villageCode || null;\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_base_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n      if (code === 0 && data) {\n        data.list.forEach(item => {\n          item.name = item.name || '-';\n          item.idCard = item.idCard || '-';\n          item.mobilePhone = item.mobilePhone || '-';\n          item.creditScore = item.creditScore || '-';\n          item.creditLevel = item.creditLevel || '-';\n          item.streetName = item.streetName || '-';\n          item.villageName = item.villageName || '-';\n        });\n        setList(data.list);\n        setTotalData(data);\n        console.log(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; //村.社区\n\n\n  const fetchCredit = async (values = {}) => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_communityCredit_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n      if (code === 0 && data) {\n        data.list.forEach(item => {\n          item.name = item.name || '-';\n          item.streetName = item.streetName || '-';\n          item.creditScore = item.creditScore || '-';\n          item.creditLevel = item.creditLevel || '-';\n        });\n        setListit(data.list);\n        setTalData(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; //街道.乡道\n\n\n  const fetchListItem = async (values = {}) => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_streetCredit_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n      if (code === 0 && data) {\n        data.list.forEach(item => {\n          item.name = item.name || '-';\n          item.creditScore = item.creditScore || '-';\n          item.creditLevel = item.creditLevel || '-';\n        });\n        setTolist(data.list);\n        setGotalData(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; //信用等级\n\n\n  const fetchGrade = async () => {\n    try {\n      const {\n        data: {\n          code,\n          data\n        }\n      } = await api.fetch_grade_list({});\n\n      if (code == 0) {\n        setGrade(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; //个人\n\n\n  const onSearch = async value => {\n    values = value;\n    pageParams.pageNum = 1;\n    fetchList(_objectSpread({}, values));\n  }; //村、社区\n\n\n  const onQuery = async value => {\n    values = value;\n    pageParams.pageNum = 1;\n    fetchCredit(_objectSpread({}, values));\n  }; //街道、乡镇\n\n\n  const onWhole = async value => {\n    values = value;\n    pageParams.pageNum = 1;\n    fetchListItem(_objectSpread({}, values));\n  };\n\n  const onPage = async () => {\n    fetchList(values);\n    fetchCredit(values);\n    fetchListItem(values);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Tabs, {\n    defaultActiveKey: \"1\",\n    onChange: callback\n  }, __jsx(TabPane, {\n    tab: \"\\u4E2A\\u4EBA\",\n    key: \"1\"\n  }, __jsx(SearchForm, {\n    onSearch,\n    values,\n    productList,\n    applyStatusList,\n    gradeList\n  }), __jsx(TableList, {\n    list,\n    setList,\n    pageParams,\n    totalData,\n    onPage\n  })), __jsx(TabPane, {\n    tab: \"\\u6751/\\u793E\\u533A\",\n    key: \"2\"\n  }, __jsx(ComSearchForm, {\n    onQuery,\n    gradeList\n  }), __jsx(ComTableList, {\n    listit,\n    setListit,\n    pageParams,\n    talData,\n    onPage\n  })), __jsx(TabPane, {\n    tab: \"\\u8857\\u9053/\\u4E61\\u9547\",\n    key: \"3\"\n  }, __jsx(TownSearchForm, {\n    onWhole,\n    gradeList\n  }), __jsx(TownTableList, {\n    tolist,\n    setTolist,\n    gotalData,\n    pageParams,\n    onPage\n  }))));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}