{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport api from '~/api/authority';\nimport Router from 'next/router';\nimport { SearchOutlined, ClusterOutlined } from '@ant-design/icons';\nimport EditModal from './edit';\nimport LeftTree from './LeftTree';\nvar pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\n\nvar initTree = function initTree(data) {\n  data.forEach(function (item) {\n    item.key = item.id;\n    item.title = item.name;\n\n    if (Array.isArray(item.children)) {\n      initTree(item.children);\n    }\n  });\n};\n\nvar getTreeData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var params,\n        _yield$api$getDepartm,\n        _yield$api$getDepartm2,\n        code,\n        data,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.prev = 1;\n            _context.next = 4;\n            return api.getDepartmentList(params);\n\n          case 4:\n            _yield$api$getDepartm = _context.sent;\n            _yield$api$getDepartm2 = _yield$api$getDepartm.data;\n            code = _yield$api$getDepartm2.code;\n            data = _yield$api$getDepartm2.data;\n\n            if (!(code == 0)) {\n              _context.next = 11;\n              break;\n            }\n\n            // let tree = data;\n            initTree(data);\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n            return _context.abrupt(\"return\", []);\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", []);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 14]]);\n  }));\n\n  return function getTreeData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar breadcrumbs = [{\n  text: '权限管理'\n}, {\n  text: '部门管理'\n}];\n\nfunction body(props) {\n  var _useState = useState(false),\n      showModal = _useState[0],\n      setModal = _useState[1];\n\n  var _useState2 = useState(props.data),\n      treeData = _useState2[0],\n      setTreeData = _useState2[1];\n\n  var _useState3 = useState(null),\n      showModalData = _useState3[0],\n      setModalData = _useState3[1];\n\n  var _useState4 = useState({}),\n      searchParams = _useState4[0],\n      setSearchParams = _useState4[1];\n\n  var _useState5 = useState({\n    parents: [],\n    selectedItem: props.data[0]\n  }),\n      r_data = _useState5[0],\n      setRData = _useState5[1];\n\n  var _useState6 = useState(props.data[0] || {}),\n      selectData = _useState6[0],\n      setSelectData = _useState6[1];\n\n  var onChangeData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getTreeData();\n\n            case 2:\n              data = _context2.sent;\n              setTreeData(data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onChangeData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteItem = function deleteItem(i) {\n    _Modal.confirm({\n      content: '确定删除此部门？',\n      onOk: function () {\n        var _onOk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var item, _yield$api$deleteDepa, data;\n\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  item = selectData.children[i];\n                  _context3.next = 3;\n                  return api.deleteDepartment(item.id);\n\n                case 3:\n                  _yield$api$deleteDepa = _context3.sent;\n                  data = _yield$api$deleteDepa.data;\n\n                  if (data.code == 0) {\n                    _message.success('删除成功');\n\n                    onChangeData();\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        function onOk() {\n          return _onOk.apply(this, arguments);\n        }\n\n        return onOk;\n      }()\n    });\n  };\n\n  var columns = [{\n    title: '部门名称',\n    dataIndex: 'title'\n  }, {\n    title: '部门负责人',\n    dataIndex: 'managerName'\n  }, {\n    title: '操作',\n    render: function render(v, r, i) {\n      return __jsx(_Space, null, __jsx(_Button, {\n        type: \"link\",\n        onClick: function onClick() {\n          return showAddModal(i);\n        }\n      }, \"\\u7F16\\u8F91\"), __jsx(_Button, {\n        type: \"link\",\n        danger: true,\n        onClick: function onClick() {\n          return deleteItem(i);\n        }\n      }, \"\\u5220\\u9664\"));\n    }\n  }].map(function (v) {\n    v.align = 'center';\n    return v;\n  });\n\n  var showAddModal = function showAddModal(i) {\n    var editData = null;\n    console.log(i);\n\n    if (i > -1) {\n      editData = selectData.children[i];\n    } else {\n      editData = {\n        parent: selectData\n      };\n    }\n\n    setModalData(editData);\n    setModal(true);\n  };\n\n  var closeModal = function closeModal(isSuccess, isUpdateList) {\n    setModal(false);\n\n    if (isUpdateList) {\n      onChangeData();\n    }\n\n    if (isSuccess) {\n      _message.success('编辑成功');\n    }\n  }; // const paginationConfig = {\n  //   total: data.totalSize,\n  //   current: pageParams.pageNo,\n  //   showSizeChanger: false,\n  //   showQuickJumper: true,\n  //   defaultPageSize: pageParams.pageSize,\n  //   showTotal: (total) => `共 ${total} 条`,\n  //   onChange: onChangePage,\n  // }\n\n\n  var onChangeSelect = function onChangeSelect(data) {\n    console.log('change');\n    setRData(data);\n    setSelectData(data.selectedItem);\n  };\n\n  var onClickItem = function onClickItem(data) {\n    console.log(data);\n    setSelectData(_objectSpread({}, data));\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, Array.isArray(treeData) && treeData.length > 0 ? __jsx(_Row, {\n    style: {\n      width: '100%',\n      minHeight: 350,\n      padding: 20,\n      backgroundColor: '#fff'\n    },\n    align: \"start\"\n  }, __jsx(_Col, {\n    flex: \"0 0 350px\"\n  }, __jsx(LeftTree, {\n    data: treeData,\n    onChangeSelect: onChangeSelect\n  })), __jsx(_Col, {\n    flex: 1\n  }, !r_data ? null : __jsx(React.Fragment, null, __jsx(_Breadcrumb, {\n    separator: \">\",\n    style: {\n      marginBottom: 25\n    }\n  }, r_data.parents.map(function (item) {\n    return __jsx(_Breadcrumb.Item, {\n      key: item.key\n    }, __jsx(\"a\", {\n      style: {\n        color: '#1890ff'\n      },\n      onClick: function onClick() {\n        return onClickItem(item);\n      }\n    }, item.title));\n  }), __jsx(_Breadcrumb.Item, null, __jsx(\"a\", {\n    onClick: function onClick() {\n      return onClickItem(r_data.selectedItem);\n    }\n  }, r_data.selectedItem && r_data.selectedItem.title))), __jsx(_Space, {\n    style: {\n      marginBottom: 25\n    }\n  }, __jsx(ClusterOutlined, {\n    style: {\n      fontSize: 25\n    }\n  }), __jsx(\"span\", {\n    style: {\n      fontSize: 18,\n      color: '#333',\n      marginRight: 15\n    }\n  }, selectData && selectData.title, \"\\u4E0B\\u7EA7\\u90E8\\u95E8\"), __jsx(_Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return showAddModal(-1);\n    },\n    size: \"small\"\n  }, \"\\u6DFB\\u52A0\\u5B50\\u90E8\\u95E8\")), __jsx(_Table, {\n    bordered: true,\n    expandable: {\n      childrenColumnName: 'testChild'\n    },\n    rowKey: \"key\",\n    pagination: false,\n    columns: columns,\n    dataSource: selectData.children || []\n  })))) : '暂无部门', __jsx(EditModal, {\n    show: showModal,\n    data: showModalData,\n    treeData: treeData,\n    selectData: selectData,\n    close: closeModal\n  }));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n  var data;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return getTreeData();\n\n        case 2:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", {\n            data: data\n          });\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}