{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport { useEffect, useState } from 'react';\nimport styles from './style.less';\nimport { LockOutlined, PhoneOutlined, MailOutlined } from '@ant-design/icons';\nimport { post, postForm } from '~/utils/fetch';\nimport { useCookies } from 'react-cookie';\nimport _ from 'lodash';\nimport { useRouter } from 'next/router';\nconst tailLayout = {\n  wrapperCol: {\n    span: 24\n  }\n};\n\nconst LoginForm = () => {\n  const [form] = _Form.useForm();\n\n  const [cookies, setCookie] = useCookies(['sessionId']);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    0: smsText,\n    1: setSmsText\n  } = useState('获取验证码');\n  let {\n    0: time,\n    1: setTime\n  } = useState(60);\n  const {\n    0: timer,\n    1: setTimer\n  } = useState(null);\n\n  const onFinish = async params => {\n    setLoading(true);\n    const {\n      data: {\n        code,\n        data,\n        desc\n      }\n    } = await postForm('userManage/userLogin', params).catch(() => {\n      setLoading(false);\n    });\n    setLoading(false);\n\n    if (code !== 0) {\n      return;\n    }\n\n    if (_.isObject(data) && _.isObject(data.authAccount)) {\n      if (data.authAccount.authToken) {\n        setCookie('sessionId', data.authAccount.authToken, {\n          path: '/'\n        });\n      }\n\n      setCookie('dataScope', data.authAccount.dataScope, {\n        path: '/'\n      });\n\n      if (data.authAccount.accountName) {\n        setCookie('name', data.authAccount.accountName, {\n          path: '/'\n        });\n      }\n\n      if (data.authAccount.roleId) {\n        setCookie('roleId', data.authAccount.roleId, {\n          path: '/'\n        });\n      }\n\n      if (data.authAccount.trueName) {\n        setCookie('trueName', data.authAccount.trueName, {\n          path: '/'\n        });\n      }\n    }\n\n    if (_.isObject(data) && _.isObject(data.tenant)) {\n      if (data.tenant.id) {\n        setCookie('tenantId', data.tenant.id, {\n          path: '/'\n        });\n      }\n    } // location.href = '/'\n\n\n    router.push('/');\n  };\n\n  const getSmsCode = async () => {\n    let mobile = form.getFieldValue('mobile');\n\n    if (timer || !mobile) {\n      return;\n    }\n\n    console.log('getSmsCode');\n    countDown();\n    const {\n      data: {\n        code,\n        data,\n        desc\n      }\n    } = await postForm('userManage/sendVerifyCode', {\n      mobile\n    });\n\n    if (code == 0) {\n      _message.success('短信发送成功');\n    }\n  };\n\n  const countDown = () => {\n    setSmsText(`${time}s后重新获取`);\n    const c_timer = setInterval(() => {\n      time--;\n\n      if (time === 0) {\n        clearInterval(c_timer);\n        setTimer(null);\n        setTime(60);\n        setSmsText('获取验证码');\n      } else {\n        setSmsText(`${time}s后重新获取`);\n      }\n    }, 1000);\n    setTimer(c_timer);\n  };\n\n  return __jsx(_Form, {\n    form: form,\n    style: {\n      width: '400px'\n    },\n    name: \"basic\",\n    initialValues: {// mobile: '13800001234',\n      // verifyCode: '123456',\n    },\n    onFinish: onFinish\n  }, __jsx(_Form.Item, {\n    name: \"mobile\",\n    rules: [{\n      required: true,\n      message: '请输入手机号'\n    }]\n  }, __jsx(_Input, {\n    placeholder: '请输入手机号',\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    prefix: __jsx(PhoneOutlined, null)\n  })), __jsx(_Form.Item, {\n    name: \"verifyCode\",\n    rules: [{\n      required: true,\n      message: '请输入验证码'\n    }]\n  }, __jsx(_Input.Search, {\n    size: \"large\",\n    prefix: __jsx(MailOutlined, null),\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n    enterButton: smsText,\n    onSearch: getSmsCode\n  })), __jsx(_Form.Item, null, __jsx(_Button, {\n    loading: loading,\n    size: \"large\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true\n  }, \"\\u767B\\u5F55\")));\n};\n\nfunction body() {\n  return __jsx(\"div\", {\n    className: styles.wrapper\n  }, __jsx(_Row, {\n    justify: \"space-around\",\n    align: \"middle\",\n    className: styles.row\n  }, __jsx(_Col, {\n    span: 2\n  }), __jsx(_Col, null, __jsx(\"h1\", {\n    className: styles.h1\n  }, \"\\u4FE1\\u8D37\\u4E1A\\u52A1\\u7CFB\\u7EDF\"), __jsx(\"p\", {\n    className: styles.p\n  }), __jsx(LoginForm, null)), __jsx(_Col, {\n    span: 2\n  })));\n}\n\nbody.getInitialProps = () => ({\n  login: true\n});\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}