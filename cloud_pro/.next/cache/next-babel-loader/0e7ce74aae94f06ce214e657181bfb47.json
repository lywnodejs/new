{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport TableList from './TableList';\nimport apiAccounting from '~/api/accounting';\nimport apiProduct from '~/api/product';\nimport { useCookies } from 'react-cookie';\nimport moment from 'moment';\nconst {\n  RangePicker\n} = _DatePicker;\nconst breadcrumbs = [{\n  text: '账务管理'\n}, {\n  text: '还款台账'\n}];\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nlet values = {};\n\nfunction body(props) {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: totalNum,\n    1: setTotalNum\n  } = useState([]);\n  const {\n    0: totalData,\n    1: setTotalData\n  } = useState([]);\n  const {\n    0: accountList,\n    1: setAccountList\n  } = useState([]);\n\n  const [form] = _Form.useForm();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await apiProduct.get_products({\n          tenantId: cookies.tenantId\n        });\n\n        if (code == 0) {\n          setProductList(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      fetchIncometList();\n      fetchAccount();\n    }\n\n    fetchData();\n  }, []);\n\n  const fetchIncometList = async (values = {}) => {\n    try {\n      const {\n        time\n      } = values;\n\n      if (time === undefined) {\n        values = _objectSpread(_objectSpread({}, values), {}, {\n          accountDayStart: moment(getCurrentMonthFirst()).format('YYYY-MM-DD'),\n          accountDayEnd: moment(new Date()).format('YYYY-MM-DD')\n        });\n      } else if (time === null) {\n        values = _objectSpread(_objectSpread({}, values), {}, {\n          startTime: null,\n          endTime: null\n        });\n      } else if (Array.isArray(time)) {\n        values = _objectSpread(_objectSpread({}, values), {}, {\n          accountDayStart: moment(time[0]).format('YYYY-MM-DD'),\n          accountDayEnd: moment(time[1]).format('YYYY-MM-DD')\n        });\n      }\n\n      delete values.time;\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAccounting.fetch_deductList_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n      if (code == 0) {\n        setTotalNum(data.grantTotal);\n        setList(data.pageInfo.list);\n        setTotalData(data.pageInfo);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchAccount = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAccounting.get_data_dict('FUND_PAY_CHANNEL_MERCHANT_CODE');\n\n      if (code == 0) {\n        setAccountList(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSearch = async value => {\n    console.log(value);\n    values = value;\n    pageParams.pageNo = 1;\n    fetchIncometList(_objectSpread({}, values));\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    onSearch({});\n  };\n\n  const onPage = async () => {\n    fetchIncometList(values);\n  };\n\n  const getCurrentMonthFirst = () => {\n    var date = new Date();\n    date.setDate(1);\n    return date;\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(_Form, {\n    form: form,\n    onFinish: onSearch,\n    layout: \"inline\",\n    className: \"searchForm\",\n    initialValues: {\n      time: [moment(getCurrentMonthFirst(), 'YYYY-MM-DD'), moment(new Date(), 'YYYY-MM-DD')],\n      productId: ''\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\",\n    name: \"productId\"\n  }, __jsx(_Select, {\n    style: {\n      width: '160px'\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), productList.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.id\n  }, v.name)))), __jsx(_Form.Item, {\n    label: \"\\u501F\\u636E\\u53F7\",\n    name: \"orderNum\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u501F\\u636E\\u53F7\",\n    style: {\n      width: 130\n    }\n  })), __jsx(_Form.Item, {\n    label: \"\\u6D41\\u6C34\\u53F7\",\n    name: \"bankOrderNum\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u6D41\\u6C34\\u53F7\",\n    style: {\n      width: 120\n    }\n  })), __jsx(_Form.Item, {\n    label: \"\\u53D1\\u751F\\u65E5\\u671F\",\n    name: \"time\"\n  }, __jsx(RangePicker, null)), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: onReset\n  }, \"\\u91CD\\u7F6E\")), __jsx(TableList, {\n    list,\n    onPage,\n    pageParams,\n    productList,\n    totalNum,\n    totalData,\n    accountList\n  })));\n}\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}