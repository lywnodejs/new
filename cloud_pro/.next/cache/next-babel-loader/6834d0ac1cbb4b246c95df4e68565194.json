{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport api from '~/api/product';\nimport { cookies } from '~/utils';\nimport '~/themes/index.less';\nimport { CommonLayout } from '~/components/Layout/Layout';\nimport Login from '~/pages/login';\nexport var Context = React.createContext();\n\nvar Main = function Main(_ref) {\n  var statusCode = _ref.statusCode,\n      Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      isServer = _ref.isServer;\n\n  if ((statusCode === -8 || statusCode === 1) && isServer) {\n    return __jsx(Login, null);\n  }\n\n  if (pageProps.login) {\n    return __jsx(Component, pageProps);\n  } // if (statusCode > -8 && statusCode < -4 && isServer) {\n  //   return <Error {...{statusCode: STATUSCODE[statusCode]}} />\n  // }\n\n\n  return __jsx(CommonLayout, null, __jsx(Component, pageProps));\n};\n\nfunction App(_ref2) {\n  var Component = _ref2.Component,\n      pageProps = _ref2.pageProps,\n      statusCode = _ref2.statusCode,\n      isServer = _ref2.isServer,\n      menu = _ref2.menu;\n  return __jsx(_ConfigProvider, {\n    locale: zhCN\n  }, __jsx(Context.Provider, {\n    value: {\n      menu: menu\n    }\n  }, __jsx(Main, {\n    Component: Component,\n    pageProps: pageProps,\n    statusCode: statusCode,\n    isServer: isServer\n  })));\n}\n\nApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var statusCode, cookie, _cookies, sessionId, pageProps, menu, _yield$api$get_menu_l, _yield$api$get_menu_l2, code, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            statusCode = 0;\n\n            if (appContext.ctx.req !== undefined) {\n              axios.defaults.baseURL = \"\".concat(appContext.ctx.req.protocol, \"://\").concat(appContext.ctx.req.headers.host);\n\n              if (appContext.ctx.req.headers && appContext.ctx.req.headers.cookie) {\n                // console.log('server:', appContext.ctx.req.headers.cookie)\n                cookie = appContext.ctx.req.headers.cookie.replace('sessionId=undefined;', '');\n                _cookies = cookies(cookie), sessionId = _cookies.sessionId;\n                delete axios.defaults.headers.common['token'];\n\n                if (sessionId !== undefined && sessionId !== 'undefined') {\n                  axios.defaults.headers.common['token'] = sessionId;\n                }\n              }\n            } else {\n              delete axios.defaults.baseURL;\n            }\n\n            pageProps = {}; // let {menu} = await import('~/lib/menu')\n\n            menu = [];\n            _context.prev = 4;\n            _context.next = 7;\n            return api.get_menu_list();\n\n          case 7:\n            _yield$api$get_menu_l = _context.sent;\n            _yield$api$get_menu_l2 = _yield$api$get_menu_l.data;\n            code = _yield$api$get_menu_l2.code;\n            data = _yield$api$get_menu_l2.data;\n\n            // console.log(code, data)\n            if (code == 0 && Array.isArray(data)) {\n              menu = data;\n            }\n\n            statusCode = code;\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n            menu = [];\n\n          case 19:\n            if (!appContext.Component.getInitialProps) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 22;\n            return appContext.Component.getInitialProps(appContext);\n\n          case 22:\n            pageProps = _context.sent;\n            statusCode = pageProps.code;\n\n          case 24:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps,\n              menu: menu,\n              statusCode: statusCode,\n              isServer: appContext.ctx.req !== undefined\n            });\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 15]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}