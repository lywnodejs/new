{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/descriptions/style\";\nimport _Descriptions from \"antd/lib/descriptions\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/image/style\";\nimport _Image from \"antd/lib/image\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport { UserOutlined } from '@ant-design/icons';\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport apiReview from '~/api/review';\nimport styles from './index.less';\nimport InvestigationModal from '~/components/common/investigationModal';\nimport Media from '~/components/common/Media';\nconst {\n  TabPane\n} = _Tabs;\nconst breadcrumbs = [{\n  text: '信审管理'\n}, {\n  text: '审核列表'\n}, {\n  text: '授信详情页'\n}];\nconst tabBarStyle = {\n  backgroundColor: '#fff',\n  marginBottom: 15,\n  paddingLeft: 15\n};\nconst idCardImgType = ['idCardFrontOcr', 'idCardBackOcr', 'livenessOcr'];\n\nfunction body(props) {\n  const flag = props.router.query.flag;\n  const {\n    0: isCollapse,\n    1: setIsCollapse\n  } = useState(false);\n  const {\n    0: detailData,\n    1: setDetailData\n  } = useState([]);\n  const {\n    0: infoData,\n    1: setInfoData\n  } = useState([]);\n  const {\n    0: primaryContactData,\n    1: setPrimaryContactData\n  } = useState([]);\n  const {\n    0: unitData,\n    1: setUnitData\n  } = useState([]);\n  const {\n    0: defaultActiveKey,\n    1: setDefaultActiveKey\n  } = useState('tab');\n\n  const [presentForm] = _Form.useForm();\n\n  const [remarkForm] = _Form.useForm();\n\n  const [peopleForm] = _Form.useForm();\n\n  const {\n    0: remarkVisible,\n    1: setRemarkVisible\n  } = useState(false);\n  const {\n    0: addPeopleVisible,\n    1: setAddPeopleVisible\n  } = useState(false);\n  const {\n    0: creditResult,\n    1: setCreditResult\n  } = useState([]);\n  const {\n    0: rejectCodes,\n    1: setRejectCodes\n  } = useState([]);\n  const {\n    0: courtData,\n    1: setCourtData\n  } = useState([]);\n  const {\n    0: showCourt,\n    1: setShowCourt\n  } = useState(false);\n  const {\n    0: newRecord,\n    1: setNewRecord\n  } = useState([]);\n  const {\n    0: riskLable,\n    1: setRiskLable\n  } = useState([]); //备注历史\n\n  const {\n    0: remarkStatus,\n    1: setRemarkStatus\n  } = useState([]);\n  const {\n    0: pagination,\n    1: setPagination\n  } = useState({\n    pageSize: 5,\n    pageNo: 1\n  });\n  const {\n    0: loadState,\n    1: setLoadState\n  } = useState('init'); //状态历史\n\n  const {\n    0: statusHistoryList,\n    1: setStatusHistoryList\n  } = useState([]);\n  const {\n    0: paginationHis,\n    1: setPaginationHis\n  } = useState({\n    pageSize: 5,\n    pageNo: 1\n  });\n  const {\n    0: loadStateHis,\n    1: setLoadStateHis\n  } = useState('init');\n  const {\n    0: pointVisible,\n    1: setPointVisible\n  } = useState(false);\n  const {\n    0: opUpdateData,\n    1: setOpUpdateData\n  } = useState([]);\n  const {\n    0: refuseVisible,\n    1: setRefuseVisible\n  } = useState(false);\n  const {\n    0: userInfoList,\n    1: setUserInfoList\n  } = useState([]);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: disabled,\n    1: setDisabled\n  } = useState(false);\n  const remarkColums = [{\n    title: '时间',\n    dataIndex: 'updateTime',\n    key: 'updateTime'\n  }, {\n    title: '原始值',\n    dataIndex: 'oldValue',\n    key: 'oldValue'\n  }, {\n    title: '修改后',\n    dataIndex: 'newValue',\n    key: 'newValue',\n    render: (record, text) => {\n      return String(record).length >= 10 ? __jsx(_Tooltip, {\n        placement: \"top\",\n        title: record\n      }, record.substring(0, 9) + '...') : __jsx(\"span\", null, record);\n    }\n  }, {\n    title: '修改人',\n    dataIndex: 'updateUser',\n    key: 'updateUser'\n  }];\n  const historyColumns = [{\n    title: '日期',\n    dataIndex: 'createTime',\n    key: 'createTime'\n  }, {\n    title: '状态',\n    dataIndex: 'remark',\n    key: 'remark'\n  }, {\n    title: '修改人',\n    dataIndex: 'updateUser',\n    key: 'updateUser',\n    width: 180\n  }];\n  useEffect(() => {\n    creditDetail();\n    primaryContactList();\n    unitDataList();\n    creditResultDetail();\n    fetchRejectCode();\n    const storage = window.localStorage;\n\n    if (storage['spreadId']) {\n      setIsCollapse(true);\n    }\n  }, []);\n  useEffect(() => {\n    remarkList(_objectSpread({}, pagination));\n  }, [pagination]);\n  useEffect(() => {\n    statusList(_objectSpread({}, paginationHis));\n  }, [paginationHis]);\n\n  const creditDetail = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_creditDetail_list({\n        creditId: props.router.query.creditId,\n        orderId: props.router.query.orderId\n      });\n\n      if (code == 0) {\n        setDetailData(data);\n        setInfoData(data.catSnapShotDTOS);\n        const catDTOS = data.catSnapShotDTOS;\n\n        if (Array.isArray(catDTOS) && catDTOS.length > 0) {\n          setDefaultActiveKey('1');\n        }\n\n        setRiskLable(data.riskLabels);\n        setUserInfoList(data.userInfo);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const creditResultDetail = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_getResult_detail({\n        creditId: props.router.query.creditId\n      });\n\n      if (code == 0) {\n        setCreditResult(data);\n        presentForm.setFieldsValue(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchRejectCode = async id => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_reject_code({\n        productScope: 10001\n      });\n\n      if (code == 0) {\n        setRejectCodes(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const primaryContactList = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.get_data_dict('NOTE_CONTACT');\n\n      if (code == 0) {\n        setPrimaryContactData(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const remarkList = async payload => {\n    setLoadState('loading');\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_remark_status(_objectSpread(_objectSpread({}, pagination), {}, {\n        creditId: Number(props.router.query.creditId),\n        type: 2\n      }, payload));\n\n      if (code == 0) {\n        setRemarkStatus(data.list);\n        setLoadState('init');\n      }\n\n      if (data.list.length == data.total) {\n        setLoadState('noMore');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPagination(pagination => ({\n      pageSize: pagination.pageSize + 10,\n      pageNo: pagination.pageNo\n    }));\n  };\n\n  const statusList = async payload => {\n    setLoadStateHis('loading');\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_remark_status(_objectSpread(_objectSpread({\n        creditId: Number(props.router.query.creditId),\n        type: 1\n      }, payload), paginationHis));\n\n      if (code == 0) {\n        setStatusHistoryList(data.list);\n        setLoadStateHis('init');\n      }\n\n      if (data.list.length == data.total) {\n        setLoadStateHis('noMore');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const lookMore = () => {\n    setPaginationHis(paginationHis => ({\n      pageSize: paginationHis.pageSize + 10,\n      pageNo: paginationHis.pageNo\n    }));\n  };\n\n  const unitDataList = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await await apiReview.get_data_dict('NOTE_CONTACT_COMPANY');\n\n      if (code == 0) {\n        setUnitData(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const ShowValContainer = ({\n    type,\n    showValue\n  }) => {\n    if (idCardImgType.indexOf(type) > -1) {\n      type = 'image';\n    }\n\n    if (type == 'image' || type == 'voice' || type == 'video') {\n      showValue = showValue ? showValue.split(',') : [];\n    }\n\n    const getByType = () => {\n      let template = null;\n\n      switch (type) {\n        case 'image':\n          template = __jsx(\"div\", {\n            className: \"imageBox\"\n          }, __jsx(_Image.PreviewGroup, null, showValue.map((src, i) => {\n            return __jsx(_Image, {\n              src: src,\n              key: i\n            });\n          })));\n          break;\n\n        case 'video':\n          template = __jsx(_Row, {\n            gutter: 10\n          }, showValue.map((src, i) => {\n            return __jsx(_Col, {\n              key: i\n            }, __jsx(\"video\", {\n              width: \"100\",\n              height: \"75\",\n              controls: true\n            }, __jsx(\"source\", {\n              src: src,\n              type: \"video/mp4\"\n            }), __jsx(\"source\", {\n              src: src,\n              type: \"video/ogg\"\n            }), \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301Video\\u6807\\u7B7E\\u3002\"));\n          }));\n          break;\n\n        case 'voice':\n          template = __jsx(\"audio\", {\n            controls: true\n          }, __jsx(\"source\", {\n            src: showValue,\n            type: \"audio/ogg\"\n          }), __jsx(\"source\", {\n            src: showValue,\n            type: \"audio/mpeg\"\n          }), \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301 audio \\u5143\\u7D20\\u3002\");\n          break;\n\n        default:\n          template = showValue;\n      }\n\n      return template;\n    };\n\n    return __jsx(React.Fragment, null, getByType());\n  };\n\n  const ContactList = props => {\n    let data = Array.isArray(props.data) ? _.cloneDeep(props.data) : [];\n    data = data.map((v, i) => {\n      let arr = v.showValue ? v.showValue.split('|') : [];\n      return _objectSpread(_objectSpread({}, v), {}, {\n        userName: arr[0],\n        phoneNo: arr[1],\n        contactId: i\n      });\n    });\n    return __jsx(_Table, {\n      dataSource: data,\n      columns: contactInfoColumns,\n      pagination: false,\n      rowKey: record => record.showValue + Math.random()\n    });\n  };\n\n  const contactInfoColumns = [{\n    title: '联系人姓名',\n    dataIndex: 'userName'\n  }, {\n    title: '联系电话',\n    dataIndex: 'phoneNo'\n  }, {\n    title: '联系人关系',\n    dataIndex: 'attrName'\n  }, {\n    title: '备注',\n    dataIndex: 'remark'\n  }, {\n    title: '操作',\n    dataIndex: 'cz',\n    render: (text, record, index) => {\n      return __jsx(React.Fragment, null, flag ? __jsx(\"a\", {\n        onClick: () => remark(record)\n      }, \"\\u5907\\u6CE8\") : null);\n    }\n  }];\n  const courtColumns = [{\n    title: '序号',\n    dataIndex: 'name',\n    render: (text, record, index) => {\n      return index + 1;\n    }\n  }, {\n    title: '失信案件发生时间',\n    dataIndex: 'datatime'\n  }, {\n    title: '失信案件执行类型',\n    dataIndex: 'datatype'\n  }, {\n    title: '失信案件执行法院',\n    dataIndex: 'court'\n  }, {\n    title: '失信案件执行标的',\n    dataIndex: 'money'\n  }, {\n    title: '失信案件生效法律文书确定的义务',\n    dataIndex: 'obligation'\n  }, {\n    title: '失信案件被执行人的履行情况',\n    dataIndex: 'performance'\n  }, {\n    title: '失信被执行人行为具体情形',\n    dataIndex: 'concretesituation'\n  }, {\n    title: '执行案件类型',\n    dataIndex: 'execDatatype'\n  }, {\n    title: '执行案件执行法院',\n    dataIndex: 'execCourt'\n  }, {\n    title: '执行案件立案时间',\n    dataIndex: 'execDatatime'\n  }, {\n    title: '执行案件标的',\n    dataIndex: 'execMoney'\n  }, {\n    title: '执行案件状态',\n    dataIndex: 'statute'\n  }, {\n    title: '执行案件做出执行依据的机构',\n    dataIndex: 'basiccourt'\n  }];\n\n  const remark = record => {\n    setRemarkVisible(true);\n    setNewRecord(record);\n  };\n\n  const ShowDescriptions = props => {\n    const {\n      list\n    } = props.data;\n    let template = Array.isArray(list) ? __jsx(_Descriptions, {\n      bordered: true\n    }, list.map((desc, desc_index) => {\n      let values = desc.showValue;\n      let span = 1;\n\n      if (desc.attrType == 'image' || desc.attrType == 'voice' || desc.attrType == 'video') {\n        values = values ? values.split(',') : [];\n      }\n\n      if (Array.isArray(desc.list) && desc.list.length > 0 || desc.attrType == 'video' && Array.isArray(values) && values.length > 0) {\n        span = 3;\n      }\n\n      return __jsx(_Descriptions.Item, {\n        label: desc.attrName,\n        key: desc_index,\n        span: span\n      }, Array.isArray(desc.list) ? __jsx(ShowDescriptions, {\n        data: desc\n      }) : __jsx(ShowValContainer, {\n        type: desc.attrType,\n        showValue: desc.showValue\n      }));\n    })) : null;\n    return template;\n  };\n\n  const opUpdate = async () => {\n    const values = await presentForm.validateFields();\n\n    if (values.verifyResult == 'A') {\n      setPointVisible(true);\n      setOpUpdateData(values);\n    }\n\n    if (values.verifyResult == 'D') {\n      setRefuseVisible(true);\n    }\n  };\n\n  const subMitFirst = async () => {\n    const values = await presentForm.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_firstCredit_update(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId\n      }));\n\n      if (code == 0) {\n        _message.success('提交成功');\n\n        setPointVisible(false);\n        setRefuseVisible(false);\n        creditDetail();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const subMitReview = async () => {\n    const values = await presentForm.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_reviewCredi_update(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId\n      }));\n\n      if (code == 0) {\n        _message.success('提交成功');\n\n        setPointVisible(false);\n        setRefuseVisible(false);\n        creditDetail();\n        setDisabled(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const subMitFinal = async () => {\n    const values = await presentForm.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_finishCredit_update(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId\n      }));\n\n      if (code == 0) {\n        _message.success('提交成功');\n\n        setPointVisible(false);\n        setRefuseVisible(false);\n        creditDetail();\n        setDisabled(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const stashSub = async () => {\n    const values = await presentForm.validateFields();\n    console.log(values, '==');\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_firstCredit_stash(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId\n      }));\n\n      if (code == 0) {\n        _message.success('暂存成功');\n\n        creditDetail();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const backSub = async () => {\n    const values = await presentForm.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_firstCredit_orderReturn(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId\n      }));\n\n      if (code == 0) {\n        _message.success('回退成功');\n\n        creditDetail();\n        setDisabled(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const riskColumns = [{\n    title: '序号',\n    key: 'sortNum',\n    width: 150,\n    render: (text, record, index) => {\n      return index + 1;\n    }\n  }, {\n    title: '规则名称',\n    dataIndex: 'ruleName'\n  }, {\n    title: '规则设定',\n    dataIndex: 'scriptSource',\n    width: 150,\n    render: (text, record) => __jsx(\"div\", {\n      style: {\n        wordWrap: 'break-word',\n        wordBreak: 'break-word'\n      }\n    }, text)\n  }, {\n    title: '命中详情',\n    dataIndex: 'fieldValueStrL',\n    width: 150,\n    render: (text, record) => __jsx(\"div\", {\n      style: {\n        wordWrap: 'break-word',\n        wordBreak: 'break-word'\n      }\n    }, text)\n  }, {\n    title: '满足条件是否通过',\n    dataIndex: 'expectedValue',\n    width: 150,\n    render: (text, record, index) => {\n      return text ? '通过' : '拒绝';\n    }\n  }, {\n    title: '命中结果',\n    dataIndex: 'result',\n    width: 150,\n    render: (text, record, index) => {\n      return text ? '命中' : '未命中';\n    }\n  }, {\n    title: '操作',\n    key: 'cz',\n    width: 150,\n    fixed: 'right',\n    render: (text, record, index) => {\n      return record.actionCode == 'Blacklist_rule_set-RF_403' || record.actionCode == 'Blacklist_limit_rule_set-RFL_403' ? __jsx(_Button, {\n        type: \"link\",\n        onClick: () => checkDetail(record)\n      }, \"\\u67E5\\u770B\\u8BE6\\u60C5\") : '-';\n    }\n  }];\n  const relationColumns = [{\n    title: '序号',\n    key: 'sortNum',\n    width: 50,\n    render: (text, record, index) => {\n      return index + 1;\n    }\n  }, {\n    title: '关联人姓名',\n    dataIndex: 'name'\n  }, {\n    title: '关联原因',\n    dataIndex: 'reason'\n  }, {\n    title: '关联人身份证',\n    dataIndex: 'idCard'\n  }, {\n    title: '关联人手机号',\n    dataIndex: 'phone'\n  }, {\n    title: '申请过的产品',\n    dataIndex: 'products'\n  }, {\n    title: '累计授信额度',\n    dataIndex: 'totalCreditAmount'\n  }, {\n    title: '累计放款金额',\n    dataIndex: 'totalGrantAmount'\n  }];\n\n  const checkDetail = record => {\n    let url = `/credit/examine/detail/riskTable?name=${userInfoList.name}&orderId=${props.router.query.orderId}&idCard=${userInfoList.certNo}&mobile=${userInfoList.phone}&userType=${record.userType}`;\n    Router.push(url);\n  };\n\n  const bookRecord = () => {\n    let url = `/credit/examine/detail/bookRecord?userId=${detailData.userId}`;\n    Router.push(url);\n  };\n\n  const sendEms = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_sendSms_send({\n        creditId: props.router.query.creditId\n      });\n\n      if (code == 0) {\n        _message.success('短信发送成功');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addPeopleOk = async () => {\n    const values = await peopleForm.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_linkman_update(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId,\n        changeType: 1\n      }));\n\n      if (code == 0) {\n        _message.success('新增联系人成功');\n\n        setAddPeopleVisible(false);\n        creditDetail();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleRemark = async () => {\n    const values = await remarkForm.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_linkman_update(_objectSpread(_objectSpread({}, values), {}, {\n        creditId: props.router.query.creditId,\n        changeType: 0,\n        linkmanName: newRecord.userName,\n        linkmanRelship: newRecord.attrName,\n        linkmanNo: newRecord.phoneNo\n      }));\n\n      if (code == 0) {\n        _message.success('备注成功');\n\n        setRemarkVisible(false);\n        creditDetail();\n        remarkForm.resetFields();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const investigate = () => {\n    setVisible(true);\n  };\n\n  const onAddRemark = async investigationModal => {\n    const values = await investigationModal.validateFields();\n    console.log(values, '---');\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_creditSurvey_update({\n        id: Number(props.router.query.creditId),\n        remark: values.note\n      });\n\n      if (code == 0) {\n        _message.success('下户调查成功');\n\n        setVisible(false);\n        creditDetail();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const spread = () => {\n    setIsCollapse(true);\n    window.localStorage.setItem('spreadId', '111');\n  };\n\n  return __jsx(Layout, {\n    isGray: true,\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, null, __jsx(_Row, {\n    gutter: 24\n  }, __jsx(_Col, {\n    span: 12\n  }, __jsx(_Avatar, {\n    size: 60,\n    icon: __jsx(UserOutlined, null)\n  }), __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 24,\n      padding: 10\n    }\n  }, detailData.name)), __jsx(_Col, {\n    span: 12\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 26,\n      marginLeft: 250\n    }\n  }, \"\\u4FE1\\u5BA1\\u5355\\u53F7\\uFF1A\", detailData.creditNum))), __jsx(_Row, {\n    gutter: 24\n  }, __jsx(_Col, {\n    span: flag ? 5 : 3\n  }, __jsx(\"span\", null, \"\\u8054\\u7CFB\\u7535\\u8BDD\\uFF1A\", detailData.phone, flag ? __jsx(\"a\", {\n    onClick: sendEms\n  }, \"\\uFF08\\u53D1\\u9001\\u81F4\\u7535\\u524D\\u77ED\\u4FE1\\uFF09\") : null)), __jsx(_Col, {\n    span: 3\n  }, __jsx(\"span\", null, \"\\u4EA7\\u54C1\\u540D\\u79F0:\", detailData.productName)), __jsx(_Col, {\n    span: 4\n  }, __jsx(\"span\", null, \"\\u6388\\u4FE1\\u65E5\\u671F\\uFF1A\", detailData.creditTime)), __jsx(_Col, {\n    span: 3\n  }, __jsx(\"span\", null, \"\\u673A\\u5BA1\\u6388\\u4FE1\\u91D1\\u989D:\", detailData.policyLoanAmount)), __jsx(_Col, {\n    span: 3\n  }, __jsx(\"span\", null, \"\\u673A\\u5BA1\\u6388\\u4FE1\\u5229\\u7387:\", detailData.policyLoanRate)), __jsx(_Col, {\n    span: 3\n  }, __jsx(\"span\", null, \"\\u4EBA\\u5BA1\\u6388\\u4FE1\\u91D1\\u989D:\", detailData.creditAmount)), __jsx(_Col, {\n    span: 3\n  }, __jsx(\"span\", null, \"\\u4EBA\\u5BA1\\u6388\\u4FE1\\u5229\\u7387:\", detailData.yearRate)))), __jsx(_Row, {\n    gutter: 24\n  }, __jsx(_Col, {\n    span: 16\n  }, __jsx(_Card, {\n    title: \"\\u98CE\\u9669\\u6807\\u7B7E\",\n    headStyle: {\n      paddingLeft: 20,\n      fontWeight: 700,\n      fontSize: 18,\n      paddingBottom: -60\n    },\n    style: {\n      padding: '0 30px',\n      marginTop: 20\n    }\n  }, Array.isArray(riskLable) && riskLable.length > 0 ? __jsx(\"div\", null, riskLable && riskLable.map((item, index) => {\n    return __jsx(_Tag, {\n      color: \"red\"\n    }, item);\n  })) : __jsx(\"p\", null, \"\\u65E0\")), __jsx(\"div\", {\n    style: {\n      height: '100%',\n      marginTop: 20\n    }\n  }, __jsx(_Card, null, __jsx(_Tabs, {\n    animated: {\n      tabPane: true\n    },\n    activeKey: defaultActiveKey,\n    onTabClick: key => setDefaultActiveKey(key)\n  }, Array.isArray(infoData) && infoData.map((v, i) => {\n    const key = i + 1 + '';\n    return __jsx(TabPane, {\n      tab: v.catName,\n      key: key\n    }, __jsx(_Card, {\n      title: v.catName\n    }, Array.isArray(v.secondLList) && v.secondLList.length > 0 ? v.secondLList.map((s_item, s_index) => {\n      return __jsx(_Card, {\n        style: {\n          marginBottom: 15\n        },\n        key: s_index,\n        type: \"inner\",\n        title: s_item.catName\n      }, s_item.catType === 'cat_ocr' && __jsx(_Image.PreviewGroup, null, __jsx(_Row, {\n        gutter: 25\n      }, Array.isArray(s_item.list) && s_item.list.filter(img => idCardImgType.indexOf(img.attrType) > -1).map((img, img_index) => {\n        return __jsx(_Col, {\n          flex: \"0 0 200\",\n          key: img_index\n        }, __jsx(_Image, {\n          width: 200,\n          height: 150,\n          src: img.showValue\n        }), __jsx(\"div\", {\n          className: styles.imgTime\n        }, img.updateTime || '-'));\n      }))), s_item.catType === 'before_loan_check' && __jsx(_Descriptions, {\n        bordered: true\n      }, Array.isArray(s_item.list) && s_item.list.map((vi, i) => {\n        {\n          Array.isArray(vi.list);\n          return __jsx(_Descriptions.Item, {\n            label: vi.attrName,\n            key: i,\n            span: 2\n          }, Array.isArray(vi.list) ? __jsx(\"div\", null, vi.list.map((attr, index) => {\n            let showTemp = attr.showValue;\n            let type = attr.attrType;\n\n            if (type == 'image' || type == 'voice' || type == 'video') {\n              const showValue = attr.showValue ? attr.showValue.split(',') : [];\n              showTemp = __jsx(Media, {\n                type: type,\n                data: showValue\n              });\n            }\n\n            return __jsx(_Descriptions, {\n              bordered: true\n            }, __jsx(_Descriptions.Item, {\n              label: attr.attrName,\n              key: index\n            }, showTemp));\n          })) : __jsx(\"div\", null, vi.showValue));\n        }\n      })), s_item.catType === 'cat_contact' && __jsx(\"div\", null, __jsx(\"span\", null, flag ? __jsx(_Button, {\n        type: \"primary\",\n        style: {\n          marginBottom: 10\n        },\n        onClick: () => setAddPeopleVisible(true)\n      }, \"\\u65B0\\u589E\\u8054\\u7CFB\\u4EBA\") : null), __jsx(ContactList, {\n        data: s_item.list\n      })), s_item.catType !== 'cat_ocr' && s_item.catType !== 'before_loan_check' && s_item.catType !== 'cat_contact' && __jsx(ShowDescriptions, {\n        data: s_item\n      }));\n    }) : __jsx(\"p\", null, \"\\u65E0\")));\n  }), __jsx(TabPane, {\n    tab: \"\\u98CE\\u63A7\\u51B3\\u7B56\",\n    key: \"tab\"\n  }, __jsx(_Card, {\n    title: \"\\u98CE\\u63A7\\u51B3\\u7B56\"\n  }, Array.isArray(detailData.riskList) && detailData.riskList.length > 0 ? detailData.riskList.map((riskItem, i) => {\n    const list = Array.isArray(riskItem.riskBaseInfoList) ? riskItem.riskBaseInfoList.map((v, i) => {\n      v.riskId = i;\n      v.userType = riskItem.userType;\n      return v;\n    }) : [];\n    return __jsx(\"div\", {\n      className: styles.fkjc,\n      key: i\n    }, __jsx(\"h3\", {\n      className: \"title\"\n    }, riskItem.userType == 1 ? '借款人' : '借款人配偶'), __jsx(_Row, {\n      gutter: 24,\n      className: \"desc\"\n    }, __jsx(_Col, null, \"\\u6267\\u884C\\u6761\\u6570\\uFF1A\", riskItem.resultCount), __jsx(_Col, null, \"\\u547D\\u4E2D\\u62D2\\u7EDD\\uFF1A\", riskItem.denyCount)), __jsx(_Table, {\n      dataSource: list,\n      columns: riskColumns,\n      pagination: false,\n      bordered: true,\n      rowKey: record => record.ruleName + Math.random()\n    }));\n  }) : __jsx(\"p\", null, \"\\u65E0\"))), __jsx(TabPane, {\n    tab: \"\\u5173\\u8054\\u60C5\\u51B5\",\n    key: \"relation\"\n  }, __jsx(_Card, {\n    title: \"\\u5173\\u8054\\u60C5\\u51B5\"\n  }, Array.isArray(detailData.relevanceInfoList) && detailData.relevanceInfoList.length > 0 ? __jsx(_Table, {\n    dataSource: detailData.relevanceInfoList,\n    columns: relationColumns,\n    pagination: false,\n    bordered: true,\n    rowKey: record => record.name + Math.random()\n  }) : __jsx(\"p\", null, \"\\u65E0\"))))))), __jsx(_Col, {\n    span: 8,\n    style: {\n      height: '100%'\n    }\n  }, __jsx(_Card, {\n    title: \"\\u4FE1\\u5BA1\\u7B56\\u7565\",\n    extra: !isCollapse ? __jsx(\"a\", {\n      onClick: spread\n    }, \"\\u5C55\\u5F00 \", __jsx(DownOutlined, null)) : __jsx(\"a\", {\n      onClick: () => setIsCollapse(false)\n    }, \"\\u6536\\u8D77\\xA0\", __jsx(UpOutlined, null)),\n    headStyle: {\n      paddingLeft: 5,\n      fontWeight: 700,\n      fontSize: 18,\n      paddingBottom: -60\n    },\n    style: {\n      paddingLeft: 30,\n      marginTop: 20,\n      zIndex: 2,\n      height: '100%'\n    }\n  }, isCollapse ? __jsx(\"div\", {\n    style: {\n      height: '100%'\n    },\n    dangerouslySetInnerHTML: {\n      __html: detailData.strategy\n    }\n  }) : null), __jsx(_Form, {\n    form: presentForm\n  }, __jsx(_Card, {\n    title: \"\\u7167\\u4F1A\\u6CE8\\u8BB0\",\n    bordered: true\n  }, __jsx(_Form.Item, {\n    label: \"\\u672C\\u4EBA\",\n    name: \"noteOneself\",\n    rules: [{\n      required: true,\n      message: '请先选择'\n    }]\n  }, __jsx(_Select, {\n    getPopupContainer: triggerNode => triggerNode.parentNode\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u8BF7\\u9009\\u62E9\"), primaryContactData.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.code\n  }, v.description)))), __jsx(_Form.Item, {\n    label: \"\\u4E3B\\u8981\\u8054\\u7CFB\\u4EBA\",\n    name: \"noteContactMain\",\n    rules: [{\n      required: true,\n      message: '请先选择'\n    }]\n  }, __jsx(_Select, {\n    getPopupContainer: triggerNode => triggerNode.parentNode\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u8BF7\\u9009\\u62E9\"), primaryContactData.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.code\n  }, v.description)))), __jsx(_Form.Item, {\n    label: \"\\u6B21\\u8981\\u8054\\u7CFB\\u4EBA\",\n    name: \"noteContactMinor\",\n    rules: [{\n      required: true,\n      message: '请先选择'\n    }]\n  }, __jsx(_Select, {\n    getPopupContainer: triggerNode => triggerNode.parentNode\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u8BF7\\u9009\\u62E9\"), primaryContactData.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.code\n  }, v.description)))), __jsx(_Form.Item, {\n    label: \"\\u5355\\u4F4D\",\n    name: \"noteCompany\",\n    rules: [{\n      required: true,\n      message: '请先选择'\n    }]\n  }, __jsx(_Select, {\n    getPopupContainer: triggerNode => triggerNode.parentNode\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u8BF7\\u9009\\u62E9\"), unitData.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.code\n  }, v.description)))), __jsx(_Form.Item, {\n    label: \"\\u7167\\u4F1A\\u6CE8\\u8BB0\",\n    name: \"noteRemark\"\n  }, __jsx(_Input.TextArea, null)), flag ? __jsx(_Button, {\n    disabled: infoData.surveyStatus == 1 ? true : false,\n    type: \"primary\",\n    style: {\n      float: 'right'\n    }\n  }, infoData.surveyStatus == 1 ? __jsx(\"span\", null, \"\\u8C03\\u67E5\\u4E2D\") : infoData.surveyStatus == 0 || infoData.surveyStatus == null ? __jsx(\"span\", {\n    onClick: investigate\n  }, \"\\u53D1\\u8D77\\u4E0B\\u6237\\u8C03\\u67E5\") : __jsx(\"span\", null, \"\\u8C03\\u67E5\\u5B8C\\u6210\")) : null), __jsx(_Card, {\n    title: \"\\u4FE1\\u5BA1\\u7ED3\\u8BBA\",\n    bordered: true,\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u7ED3\\u8BBA\",\n    name: \"verifyResult\",\n    rules: [{\n      required: true,\n      message: '请先选择'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\"\n  }, __jsx(_Select.Option, {\n    value: \"A\"\n  }, \"\\u901A\\u8FC7\"), __jsx(_Select.Option, {\n    value: \"D\"\n  }, \"\\u62D2\\u7EDD\"))), __jsx(_Form.Item, {\n    noStyle: true,\n    shouldUpdate: (prevValues, currentValues) => prevValues.verifyResult !== currentValues.verifyResult\n  }, ({\n    getFieldValue\n  }) => {\n    return getFieldValue('verifyResult') == 'D' && __jsx(React.Fragment, null, __jsx(_Form.Item, {\n      label: \"\\u62D2\\u7EDD\\u7C7B\\u578B\",\n      name: \"reasonType\",\n      rules: [{\n        required: true,\n        message: '请选择拒绝类型'\n      }]\n    }, __jsx(_Select, {\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      getPopupContainer: triggerNode => triggerNode.parentNode\n    }, rejectCodes && rejectCodes.length && rejectCodes.map(v => {\n      return __jsx(_Select.Option, {\n        value: v.rejectType,\n        key: v.rejectType\n      }, v.rejectTypeName);\n    }))), __jsx(_Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.reasonType !== currentValues.reasonType\n    }, ({\n      getFieldValue\n    }) => {\n      return __jsx(_Form.Item, {\n        label: \"\\u62D2\\u7EDD\\u539F\\u56E0\",\n        name: \"verifyResultReason\",\n        rules: [{\n          required: true,\n          message: '请选择拒绝原因'\n        }]\n      }, __jsx(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        getPopupContainer: triggerNode => triggerNode.parentNode\n      }, function () {\n        let findOne = rejectCodes && rejectCodes.length && rejectCodes.filter(one => one.rejectType == getFieldValue('reasonType'));\n        return findOne && findOne.length && findOne[0].rejectCodeList.map(v => {\n          return __jsx(_Select.Option, {\n            value: v.rejectCode,\n            key: v.rejectCode\n          }, v.rejectName);\n        });\n      }()));\n    }));\n  }), __jsx(_Form.Item, {\n    noStyle: true,\n    shouldUpdate: (prevValues, currentValues) => prevValues.verifyResult !== currentValues.verifyResult\n  }, ({\n    getFieldValue\n  }) => {\n    return getFieldValue('verifyResult') == 'A' && __jsx(React.Fragment, null, __jsx(_Form.Item, {\n      label: \"\\u6388\\u4FE1\\u989D\\u5EA6\",\n      name: \"policyLoanAmount\",\n      extra: __jsx(\"span\", null, \"\\u6CE8\\uFF1A\\u6B65\\u957F\\u4E3A:\", __jsx(\"span\", {\n        style: {\n          color: '#339dff'\n        }\n      }, \"1000\"), \"\\uFF0C\\u8BF7\\u6309\\u7167\\u6B65\\u957F\\u89C4\\u5219\\u4FEE\\u6539\\u6388\\u4FE1\\u989D\\u5EA6\\u3002\"),\n      rules: [{\n        required: true,\n        message: '请输入授信额度'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (value && value % 1000 != 0) {\n            return Promise.reject('请注意步长为1000，请重新输入');\n          }\n\n          return Promise.resolve();\n        }\n\n      })]\n    }, __jsx(_InputNumber, {\n      step: 100,\n      style: {\n        width: '100%'\n      }\n    })), __jsx(_Form.Item, {\n      label: \"\\u5E74\\u5229\\u7387\" // name=\"policyLoanRate\"\n      // rules={[{required: true, message: '请输入授信利率'}]}\n\n    }, __jsx(_Input, {\n      value: creditResult.policyLoanRate,\n      disabled: true,\n      suffix: \"%\"\n    })));\n  }), __jsx(_Form.Item, {\n    label: \"\\u7ED3\\u8BBA\\u5907\\u6CE8\",\n    name: \"resultRemark\"\n  }, __jsx(_Input.TextArea, null)), flag ? __jsx(\"div\", {\n    style: {\n      float: 'right'\n    }\n  }, flag == 1 ? __jsx(_Button, {\n    type: \"primary\",\n    onClick: stashSub,\n    disabled: disabled\n  }, \"\\u6682 \\u5B58\") : flag == 2 || flag == 3 ? __jsx(_Button, {\n    type: \"primary\",\n    onClick: backSub,\n    disabled: disabled\n  }, \"\\u56DE \\u9000\") : null, __jsx(_Button, {\n    disabled: disabled,\n    type: \"primary\",\n    style: {\n      marginLeft: 10,\n      backgroundColor: '#70b603'\n    },\n    onClick: opUpdate\n  }, \"\\u63D0 \\u4EA4\")) : null)), __jsx(_Card, {\n    title: \"\\u7ED3\\u8BBA\\u5907\\u6CE8\\u5386\\u53F2\",\n    bordered: true,\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(_Table, {\n    columns: remarkColums,\n    dataSource: remarkStatus,\n    pagination: false,\n    rowKey: record => record.updateTime + Math.random(),\n    footer: () => __jsx(\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, {\n      init: __jsx(\"a\", {\n        onClick: loadMore\n      }, \"\\u67E5\\u770B\\u66F4\\u591A\"),\n      loading: __jsx(\"a\", null, \"\\u52A0\\u8F7D\\u4E2D\"),\n      noMore: __jsx(\"span\", null, \"\\u6570\\u636E\\u5DF2\\u52A0\\u8F7D\\u5B8C\\u6210\")\n    }[loadState])\n  })), __jsx(_Card, {\n    title: \"\\u72B6\\u6001\\u5386\\u53F2\",\n    bordered: true,\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(_Table, {\n    columns: historyColumns,\n    dataSource: statusHistoryList,\n    pagination: false,\n    rowKey: record => record.updateTime + Math.random(),\n    footer: () => __jsx(\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, {\n      init: __jsx(\"a\", {\n        onClick: lookMore\n      }, \"\\u67E5\\u770B\\u66F4\\u591A\"),\n      loading: __jsx(\"a\", null, \"\\u52A0\\u8F7D\\u4E2D\"),\n      noMore: __jsx(\"span\", null, \"\\u6570\\u636E\\u5DF2\\u52A0\\u8F7D\\u5B8C\\u6210\")\n    }[loadStateHis])\n  })))), __jsx(_Modal, {\n    visible: remarkVisible,\n    title: \"\\u5907\\u6CE8\",\n    onCancel: () => setRemarkVisible(false),\n    onOk: handleRemark,\n    destroyOnClose: true,\n    maskClosable: false\n  }, __jsx(_Form, {\n    form: remarkForm,\n    name: remarkForm\n  }, __jsx(_Form.Item, {\n    label: \"\\u8054\\u7CFB\\u4EBA\\u5907\\u6CE8\",\n    name: \"remark\"\n  }, __jsx(_Input.TextArea, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })))), __jsx(_Modal, {\n    visible: addPeopleVisible,\n    title: \"\\u65B0\\u589E\\u8054\\u7CFB\\u4EBA\",\n    onCancel: () => setAddPeopleVisible(false),\n    onOk: addPeopleOk\n  }, __jsx(_Form, {\n    form: peopleForm,\n    name: peopleForm\n  }, __jsx(_Form.Item, {\n    label: \"\\u8054\\u7CFB\\u4EBA\\u59D3\\u540D\",\n    name: \"linkmanName\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n    name: \"linkmanNo\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u8054\\u7CFB\\u4EBA\\u5173\\u7CFB\",\n    name: \"linkmanRelship\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })))), __jsx(_Modal, {\n    title: \"\\u8BE6\\u60C5\",\n    width: \"80%\",\n    footer: null,\n    onCancel: () => setShowCourt(false),\n    visible: showCourt\n  }, __jsx(_Table, {\n    dataSource: courtData,\n    columns: courtColumns,\n    pagination: false,\n    bordered: true,\n    rowKey: record => record.datatime + Math.random()\n  })), __jsx(_Modal, {\n    title: \"\\u63D0\\u793A\",\n    visible: pointVisible,\n    onCancel: () => {\n      setPointVisible(false);\n    },\n    onOk: flag == 2 ? subMitReview : flag == 3 ? subMitFinal : subMitFirst\n  }, __jsx(\"p\", null, \"\\u786E\\u5B9A\\u7ED9\\u4E0E\\u6B64\\u7528\\u6237\\u901A\\u8FC7\\u5417\\uFF1F\"), __jsx(\"p\", null, \"\\u6388\\u4FE1\\u989D\\u5EA6:\\xA0\", __jsx(\"span\", {\n    style: {\n      color: '#df273e'\n    }\n  }, opUpdateData.policyLoanAmount)), __jsx(\"p\", null, \"\\u5E74\\u5229\\u7387:\\xA0\", __jsx(\"span\", {\n    style: {\n      color: '#df273e'\n    }\n  }, creditResult.policyLoanRate, \"%\"))), __jsx(_Modal, {\n    title: \"\\u63D0\\u793A\",\n    visible: refuseVisible,\n    onCancel: () => {\n      setRefuseVisible(false);\n    },\n    onOk: flag == 2 ? subMitReview : flag == 3 ? subMitFinal : subMitFirst\n  }, __jsx(\"p\", null, \"\\u786E\\u5B9A\\u7ED9\\u4E0E\\u6B64\\u7528\\u6237\\u62D2\\u7EDD\\u5417\\uFF1F\")), __jsx(InvestigationModal, {\n    visible: visible,\n    onHide: () => setVisible(false),\n    selectItem: Number(props.router.query.creditId),\n    onSubmit: onAddRemark\n  }));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}