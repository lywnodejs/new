{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport apiBusiness from '~/api/business';\nimport api from '~/api/authority';\nimport moment from 'moment';\nimport LeftTree from './LeftTree';\nimport _ from 'lodash';\nvar RangePicker = _TimePicker.RangePicker;\nvar layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\n\nvar EditModal = function EditModal(props) {\n  var _useState = useState(props.show),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState(false),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      confirmLoading = _useState3[0],\n      setConfirmLoading = _useState3[1];\n\n  var _useState4 = useState(),\n      treeData = _useState4[0],\n      setTreeData = _useState4[1];\n\n  var _useState5 = useState(),\n      parentData = _useState5[0],\n      setParentData = _useState5[1];\n\n  var _useState6 = useState([]),\n      account = _useState6[0],\n      setAccount = _useState6[1];\n\n  var _useState7 = useState([]),\n      allAccount = _useState7[0],\n      setAllAccount = _useState7[1];\n\n  var _useState8 = useState(null),\n      editData = _useState8[0],\n      setEditData = _useState8[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0]; // useEffect(() => {\n  //   if (showModal) {\n  //     let tree_data = _.cloneDeep(props.treeData)\n  //     if (props.data) {\n  //       // let tree_data = [...props.treeData]\n  //       setDisabled(props.data.key, tree_data)\n  //       setTreeData(tree_data)\n  //     } else {\n  //       setTreeData(tree_data)\n  //     }\n  //   }\n  // }, [showModal])\n\n\n  useEffect(function () {\n    setShow(props.show);\n\n    if (!props.show) {\n      form.resetFields();\n      setConfirmLoading(false);\n      setEditData(null);\n    } else {\n      var tree_data = _.cloneDeep(props.treeData);\n\n      setTreeData(tree_data);\n      var data = props.data;\n      data.parentName = props.data.parent.name;\n      setParentData(data.parent);\n\n      if (data && data.parent && data.id) {\n        setEditData(data);\n        getAccount(data.id);\n      }\n\n      form.setFieldsValue(data);\n    }\n  }, [props]);\n\n  var getAccount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var _yield$api$getDepartm, _yield$api$getDepartm2, code, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.getDepartmentAccount(id);\n\n            case 3:\n              _yield$api$getDepartm = _context.sent;\n              _yield$api$getDepartm2 = _yield$api$getDepartm.data;\n              code = _yield$api$getDepartm2.code;\n              data = _yield$api$getDepartm2.data;\n\n              if (code == 0) {\n                setAllAccount(data);\n                setAccount(data);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getAccount(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setDisabled = function setDisabled(key, tree) {\n    var setChildTree = function setChildTree(child) {\n      child.forEach(function (item) {\n        item.disabled = true;\n\n        if (Array.isArray(item.children)) {\n          setChildTree(item.children);\n        }\n      });\n    };\n\n    var findChildTree = function findChildTree(_tree) {\n      _tree.some(function (item) {\n        if (item.key == key) {\n          item.disabled = true;\n\n          if (Array.isArray(item.children)) {\n            setChildTree(item.children);\n          }\n\n          return true;\n        } else if (Array.isArray(item.children)) {\n          findChildTree(item.children);\n        }\n      });\n    };\n\n    findChildTree(tree);\n  };\n\n  var handleCancel = function handleCancel() {\n    form.resetFields();\n    form.setFieldsValue(null);\n    props.close();\n  };\n\n  var handleOk = function handleOk() {\n    setConfirmLoading(true);\n    form.validateFields().then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n        var params, _yield$api$editDepart, code;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = _objectSpread(_objectSpread({}, values), {}, {\n                  parentId: parentData.id\n                });\n\n                if (editData && editData.id) {\n                  params.id = editData.id;\n                }\n\n                delete params.parentName;\n                _context2.next = 5;\n                return api.editDepartment(params);\n\n              case 5:\n                _yield$api$editDepart = _context2.sent;\n                code = _yield$api$editDepart.data.code;\n                setConfirmLoading(false);\n\n                if (code == 0) {\n                  form.resetFields();\n                  form.setFieldsValue(null);\n                  props.close(true, true);\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      setConfirmLoading(false);\n    });\n  };\n\n  var handleSelectOk = function handleSelectOk() {\n    form.setFieldsValue({\n      parentName: parentData.title\n    });\n    setShowModal(false);\n  };\n\n  var handleSelectCancel = function handleSelectCancel() {\n    setParentData();\n    setShowModal(false);\n  };\n\n  var onChangeSelect = function onChangeSelect(data) {\n    setParentData(data.selectedItem);\n  };\n\n  var handleSearchRole = function handleSearchRole(keyword) {\n    if (!keyword) {\n      return setAccount(allAccount);\n    }\n\n    var arr = allAccount.filter(function (v) {\n      return v.accountName.indexOf(keyword) > -1;\n    });\n    setAccount(arr);\n  };\n\n  return __jsx(\"div\", null, __jsx(_Modal, {\n    title: props.data && props.data.id ? '编辑部门' : '添加部门',\n    visible: show,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    confirmLoading: confirmLoading\n  }, __jsx(_Form, _extends({}, layout, {\n    form: form,\n    name: \"basic\"\n  }), __jsx(_Form.Item, {\n    label: \"\\u90E8\\u95E8\\u540D\\u79F0\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: '部门名称不可为空'\n    }]\n  }, __jsx(_Input, {\n    maxLength: 25,\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\uFF0C\\u6700\\u591A25\\u5B57\\u7B26\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u4E0A\\u7EA7\\u90E8\\u95E8\",\n    required: true\n  }, __jsx(_Form.Item, {\n    name: \"parentName\",\n    style: {\n      marginBottom: 5\n    },\n    onClick: function onClick() {\n      return setShowModal(true);\n    },\n    rules: [{\n      required: true,\n      message: '上级部门不可为空'\n    }]\n  }, __jsx(_Input, {\n    readOnly: true\n  })), __jsx(\"p\", {\n    style: {\n      marginBottom: 0\n    }\n  }, \"\\uFF08\\u70B9\\u51FB\\u53EF\\u91CD\\u65B0\\u9009\\u62E9\\u4E0A\\u7EA7\\u90E8\\u95E8\\uFF09\")), props.data && props.data.id && __jsx(_Form.Item, {\n    label: \"\\u90E8\\u95E8\\u8D1F\\u8D23\\u4EBA\",\n    name: \"managerId\"\n  }, __jsx(_Select, {\n    showSearch: true,\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u90E8\\u95E8\",\n    filterOption: false,\n    defaultActiveFirstOption: false,\n    onSearch: handleSearchRole,\n    style: {\n      width: '200px'\n    }\n  }, account.map(function (v) {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: v.id\n    }, v.accountName);\n  }))))), __jsx(_Modal, {\n    title: \"\\u9009\\u62E9\\u4E0A\\u7EA7\\u90E8\\u95E8\",\n    onOk: handleSelectOk,\n    onCancel: handleSelectCancel,\n    visible: showModal\n  }, __jsx(LeftTree, {\n    onChangeSelect: onChangeSelect,\n    data: treeData\n  })));\n};\n\nexport default EditModal;","map":null,"metadata":{},"sourceType":"module"}