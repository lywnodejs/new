{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/order';\nimport apiProduct from '~/api/product';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nimport { withKeepAlive } from 'react-next-keep-alive';\nconst breadcrumbs = [{\n  text: '进件管理'\n}, {\n  text: '用信申请列表'\n}];\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nlet values = {};\n\nfunction body({\n  applyStatusList\n}) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  const getProducts = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiProduct.get_products({\n        tenantId: cookies.tenantId\n      });\n\n      if (code == 0) {\n        setProductList(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchList = async (values = {}) => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_all_order(_objectSpread(_objectSpread(_objectSpread({}, pageParams), values), {}, {\n        tenantId: cookies.tenantId,\n        orderType: 2\n      }));\n\n      if (code === 0) {\n        setList(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSearch = async value => {\n    console.log(value);\n    values = value;\n    pageParams.pageNo = 1;\n    fetchList(_objectSpread({}, values));\n  };\n\n  const onPage = async () => {\n    fetchList(values);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(SearchForm, {\n    onSearch,\n    applyStatusList,\n    productList\n  }), __jsx(TableList, {\n    list,\n    onPage,\n    productList,\n    applyStatusList,\n    pageParams\n  })));\n}\n\nbody.getInitialProps = async () => {\n  const backData = {\n    applyStatusList: []\n  };\n\n  try {\n    const {\n      data\n    } = await api.get_data_dict('LOAN_ORDER_STATUS');\n\n    if (data.code == 0) {\n      backData.applyStatusList = data.data || [];\n    }\n\n    return backData;\n  } catch (err) {\n    return backData;\n  }\n};\n\nexport default withKeepAlive(body, 'feed-employ');","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/feed/employ/index.js"],"names":["Layout","React","useEffect","useState","useCookies","api","apiProduct","SearchForm","TableList","withKeepAlive","breadcrumbs","text","pageParams","pageNo","pageSize","values","body","applyStatusList","cookies","productList","setProductList","list","setList","getProducts","data","code","get_products","tenantId","error","console","log","fetchList","fetch_all_order","orderType","err","onSearch","value","onPage","width","getInitialProps","backData","get_data_dict"],"mappings":";;;;;;;;;;AAAA,SAAQA,MAAR,QAAqB,qBAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAD,EAAiB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAAjB,CAApB;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,CADS;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAAnB;AAKA,IAAIC,MAAM,GAAG,EAAb;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAiC;AAC/B,QAAM,CAACC,OAAD,IAAYd,UAAU,CAAC,CAAC,UAAD,CAAD,CAA5B;AACA,QAAM;AAAA,OAACe,WAAD;AAAA,OAAcC;AAAd,MAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACkB,IAAD;AAAA,OAAOC;AAAP,MAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAM;AACJC,QAAAA,IAAI,EAAE;AAACA,UAAAA,IAAD;AAAOC,UAAAA;AAAP;AADF,UAEF,MAAMnB,UAAU,CAACoB,YAAX,CAAwB;AAACC,QAAAA,QAAQ,EAAET,OAAO,CAACS;AAAnB,OAAxB,CAFV;;AAGA,UAAIF,IAAI,IAAI,CAAZ,EAAe;AACbL,QAAAA,cAAc,CAACI,IAAD,CAAd;AACD;AACF,KAPD,CAOE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaA,QAAMG,SAAS,GAAG,OAAOhB,MAAM,GAAG,EAAhB,KAAuB;AACvC,QAAI;AACF,YAAM;AACJS,QAAAA,IAAI,EAAE;AAACA,UAAAA,IAAD;AAAOC,UAAAA;AAAP;AADF,UAEF,MAAMpB,GAAG,CAAC2B,eAAJ,+CACLpB,UADK,GAELG,MAFK;AAGRY,QAAAA,QAAQ,EAAET,OAAO,CAACS,QAHV;AAIRM,QAAAA,SAAS,EAAE;AAJH,SAFV;;AAQA,UAAIR,IAAI,KAAK,CAAb,EAAgB;AACdH,QAAAA,OAAO,CAACE,IAAD,CAAP;AACD;AACF,KAZD,CAYE,OAAOU,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;AACF,GAhBD;;AAkBA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACArB,IAAAA,MAAM,GAAGqB,KAAT;AACAxB,IAAAA,UAAU,CAACC,MAAX,GAAoB,CAApB;AACAkB,IAAAA,SAAS,mBAAKhB,MAAL,EAAT;AACD,GALD;;AAOA,QAAMsB,MAAM,GAAG,YAAY;AACzBN,IAAAA,SAAS,CAAChB,MAAD,CAAT;AACD,GAFD;;AAIA,SACE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAEL;AAArB,KACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAE;AAAC4B,MAAAA,KAAK,EAAE;AAAR;AAAhD,KACE,MAAC,UAAD,EACM;AACFH,IAAAA,QADE;AAEFlB,IAAAA,eAFE;AAGFE,IAAAA;AAHE,GADN,CADF,EASE,MAAC,SAAD,EACM;AACFE,IAAAA,IADE;AAEFgB,IAAAA,MAFE;AAGFlB,IAAAA,WAHE;AAIFF,IAAAA,eAJE;AAKFL,IAAAA;AALE,GADN,CATF,CADF,CADF;AAuBD;;AAEDI,IAAI,CAACuB,eAAL,GAAuB,YAAY;AACjC,QAAMC,QAAQ,GAAG;AACfvB,IAAAA,eAAe,EAAE;AADF,GAAjB;;AAIA,MAAI;AACF,UAAM;AAACO,MAAAA;AAAD,QAAS,MAAMnB,GAAG,CAACoC,aAAJ,CAAkB,mBAAlB,CAArB;;AACA,QAAIjB,IAAI,CAACC,IAAL,IAAa,CAAjB,EAAoB;AAClBe,MAAAA,QAAQ,CAACvB,eAAT,GAA2BO,IAAI,CAACA,IAAL,IAAa,EAAxC;AACD;;AACD,WAAOgB,QAAP;AACD,GAND,CAME,OAAON,GAAP,EAAY;AACZ,WAAOM,QAAP;AACD;AACF,CAdD;;AAgBA,eAAe/B,aAAa,CAACO,IAAD,EAAO,aAAP,CAA5B","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState} from 'react'\nimport {Space, message} from 'antd'\nimport {useCookies} from 'react-cookie'\nimport api from '~/api/order'\nimport apiProduct from '~/api/product'\nimport SearchForm from './SearchForm'\nimport TableList from './TableList'\nimport {withKeepAlive} from 'react-next-keep-alive'\n\nconst breadcrumbs = [{text: '进件管理'}, {text: '用信申请列表'}]\n\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10,\n}\n\nlet values = {}\n\nfunction body({applyStatusList}) {\n  const [cookies] = useCookies(['tenantId'])\n  const [productList, setProductList] = useState([])\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    getProducts()\n  }, [])\n\n  const getProducts = async () => {\n    try {\n      const {\n        data: {data, code},\n      } = await apiProduct.get_products({tenantId: cookies.tenantId})\n      if (code == 0) {\n        setProductList(data)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const fetchList = async (values = {}) => {\n    try {\n      const {\n        data: {data, code},\n      } = await api.fetch_all_order({\n        ...pageParams,\n        ...values,\n        tenantId: cookies.tenantId,\n        orderType: 2,\n      })\n      if (code === 0) {\n        setList(data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const onSearch = async (value) => {\n    console.log(value)\n    values = value\n    pageParams.pageNo = 1\n    fetchList({...values})\n  }\n\n  const onPage = async () => {\n    fetchList(values)\n  }\n\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Space direction=\"vertical\" size=\"large\" style={{width: '100%'}}>\n        <SearchForm\n          {...{\n            onSearch,\n            applyStatusList,\n            productList,\n          }}\n        />\n\n        <TableList\n          {...{\n            list,\n            onPage,\n            productList,\n            applyStatusList,\n            pageParams,\n          }}\n        />\n      </Space>\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  const backData = {\n    applyStatusList: [],\n  }\n\n  try {\n    const {data} = await api.get_data_dict('LOAN_ORDER_STATUS')\n    if (data.code == 0) {\n      backData.applyStatusList = data.data || []\n    }\n    return backData\n  } catch (err) {\n    return backData\n  }\n}\n\nexport default withKeepAlive(body, 'feed-employ')\n"]},"metadata":{},"sourceType":"module"}