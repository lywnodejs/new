{"ast":null,"code":"import \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport moment from 'moment';\nimport api from '~/api/finance';\nimport apiProduct from '~/api/product';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nconst {\n  TabPane\n} = _Tabs;\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nlet values = {\n  startSettTime: moment(new Date(new Date() - 15 * 24 * 60 * 60 * 1000), 'YYYY-MM-DD').format('YYYY-MM-DD'),\n  endSettTime: moment(new Date(), 'YYYY-MM-DD').format('YYYY-MM-DD')\n};\nconst breadcrumbs = [{\n  text: '账务管理'\n}, {\n  text: '还款资金对账'\n}];\n\nfunction body({\n  applySources\n}) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: activeKey,\n    1: setActiveKey\n  } = useState('-1');\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: startSettTime,\n    1: setStartSettTime\n  } = useState('');\n  const {\n    0: endSettTime,\n    1: setEndSettTime\n  } = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await apiProduct.get_products({\n          tenantId: cookies.tenantId\n        });\n\n        if (code == 0) {\n          setProductList(data);\n          data && data.length && setActiveKey(String(data[0].id));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    function fetchData() {\n      if (activeKey != -1) {\n        onSearch();\n      }\n    }\n\n    fetchData();\n  }, [activeKey]);\n\n  const fetchList = async (values = {}) => {\n    try {\n      const {\n        time\n      } = values;\n      values.startSettTime = time && time[0].format('YYYY-MM-DD') || moment(new Date(new Date() - 15 * 24 * 60 * 60 * 1000), 'YYYY-MM-DD').format('YYYY-MM-DD');\n      values.endSettTime = time && time[1].format('YYYY-MM-DD') || moment(new Date(), 'YYYY-MM-DD').format('YYYY-MM-DD');\n      values.sourcePltfm = values.sourcePltfm || null;\n      values.blncCheckFlag = values.blncCheckFlag || null;\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_check_bills(_objectSpread(_objectSpread(_objectSpread({}, pageParams), values), {}, {\n        productId: activeKey,\n        orderType: 1\n      }));\n\n      if (code == 0) {\n        setList(data);\n        setStartSettTime(values.startSettTime);\n        setEndSettTime(values.endSettTime);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSearch = async value => {\n    console.log(value);\n    pageParams.pageNo = 1;\n    fetchList(_objectSpread({}, value));\n  };\n\n  const onPage = async () => {\n    fetchList(values);\n  };\n\n  const changeTab = async key => {\n    setActiveKey(key);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(\"div\", {\n    className: \"searchForm\",\n    style: {\n      marginBottom: '10px'\n    }\n  }, __jsx(_Tabs, {\n    activeKey: activeKey,\n    onTabClick: key => changeTab(key, false)\n  }, productList && productList.length ? productList.map(item => __jsx(TabPane, {\n    tab: item.name,\n    key: item.id,\n    forceRender: true\n  })) : null), __jsx(SearchForm, {\n    onSearch,\n    applySources\n  })), __jsx(\"div\", {\n    style: {\n      backgroundColor: '#e6f7ff',\n      border: '1px solid #91d5ff',\n      padding: '10px 0 10px 10px'\n    }\n  }, __jsx(InfoCircleFilled, {\n    style: {\n      color: '#1890ff'\n    }\n  }), __jsx(\"span\", {\n    style: {\n      paddingLeft: '5px'\n    }\n  }, startSettTime || '', \" \\u81F3\", endSettTime || '', \" \\xA0\\xA0 \\u603B\\u8BA1: \\u652F\\u51FA\", list.totalAmt || 0, \"\\u5143\")), __jsx(TableList, {\n    list,\n    onPage,\n    pageParams\n  }));\n}\n\nbody.getInitialProps = async () => {\n  const backData = {\n    applySources: []\n  };\n\n  try {\n    const [{\n      data: {\n        data,\n        code\n      }\n    }] = await Promise.all([api.get_data_dict('LOAN_APPLY_SOURCE')]);\n\n    if (code == 0) {\n      return {\n        applySources: data\n      };\n    }\n\n    backData.code = code;\n    return backData;\n  } catch (err) {\n    console.log(err);\n    return backData;\n  }\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}