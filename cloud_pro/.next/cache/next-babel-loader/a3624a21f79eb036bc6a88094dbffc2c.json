{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { cookies } from '~/utils';\nimport config from './config';\nimport qs from 'qs';\nimport _ from 'lodash'; // Add a request interceptor\n\naxios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  // console.log(config)\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\naxios.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  if (false && _.isObject(response.data)) {\n    if (response.data.code === -8 || response.data.code === 1) {\n      _Modal.error({\n        title: '提示',\n        content: response.data.desc,\n\n        onOk() {\n          location.href = '/login';\n        }\n\n      });\n\n      return response;\n    }\n\n    if (response.data.code != 0 && response.data.code != 2001) {\n      _Modal.error({\n        title: '提示',\n        content: response.data.desc || response.data.msg\n      });\n    }\n  }\n\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\n\nconst defaults = () => {\n  if (typeof document !== 'undefined') {\n    const {\n      sessionId\n    } = cookies(document.cookie.replace('sessionId=undefined', ''));\n\n    if (sessionId !== undefined && sessionId !== 'undefined') {\n      axios.defaults.headers.common['token'] = sessionId;\n    } else {\n      delete axios.defaults.headers.common['token'];\n    }\n  }\n};\n\nfunction resolveUri(url, params) {\n  const p = url.indexOf('?') > -1 ? '&' : '?';\n  url += p + qs.stringify(params);\n  return url;\n}\n\nexport const get = (url, params) => {\n  // console.log(params)\n  defaults();\n  return axios.get(`${config.apiPrefix}/${resolveUri(url, params)}`);\n};\nexport const post = (url, params, isGet = false) => {\n  defaults();\n  const uri = isGet ? resolveUri(url, params) : url;\n  return axios.post(`${config.apiPrefix}/${uri}`, params);\n};\nexport const postForm = (url, data, apiPrefix = config.apiPrefix) => {\n  defaults();\n  let formData = new FormData();\n  const keys = Object.keys(data);\n  keys.forEach(key => {\n    formData.append(key, data[key]);\n  });\n  return axios.post(`${apiPrefix}/${url}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const upload = (formData, url) => {\n  defaults();\n  return axios.post(`${config.apiPrefix}/${url}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const request = (url, method, params, type) => {\n  defaults();\n  const commitData = {};\n  method == 'get' && (commitData.params = params);\n  method == 'post' && (commitData.data = params);\n  method == 'put' && (commitData.data = params);\n  let requestUrl;\n\n  if (params.isExport) {\n    requestUrl = `/${url}`;\n  } else {\n    requestUrl = `${config.apiPrefix}/${url}`;\n  }\n\n  return axios.request(_objectSpread(_objectSpread({\n    url: requestUrl,\n    method\n  }, commitData), type));\n};\nexport const gwRequest = (methodName, _ref, notDeleteEmpty) => {\n  let params = Object.assign({}, _ref);\n  defaults();\n  let paramsObj = params[0];\n\n  if (!notDeleteEmpty) {\n    if (Object.prototype.toString.call(paramsObj) === '[object Object]') {\n      let keys = Object.keys(paramsObj);\n      keys.forEach(key => {\n        let val = paramsObj[key];\n\n        if (_.isNull(val) || _.isUndefined(val) || val === '') {\n          delete paramsObj[key];\n        }\n      });\n    }\n  }\n\n  params = [paramsObj];\n  const data = {\n    methodName,\n    paramValues: params || []\n  };\n  return axios.post(`${config.gwApiPrefix}/gateway.action`, data);\n}; // 贷后管理相关\n\nexport const loanFetch = (url, params, isGet) => {\n  defaults();\n\n  if (isGet) {\n    return axios.get(`${config.apiPrefix}${url}`, {\n      params\n    });\n  } else {\n    return axios.post(`${config.apiPrefix}${url}`, params);\n  }\n};\nexport const biFetch = (url, params) => {\n  defaults();\n  return axios.post(`${config.biApiPrefix}${url}`, params);\n};\nexport default axios;","map":null,"metadata":{},"sourceType":"module"}