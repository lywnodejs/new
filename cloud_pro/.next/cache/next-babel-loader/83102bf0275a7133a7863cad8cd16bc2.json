{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/empty/style\";\nimport _Empty from \"antd/lib/empty\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/steps/style\";\nimport _Steps from \"antd/lib/steps\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiProduct from '~/api/product';\nimport { useCookies } from 'react-cookie';\nimport ManagementTable from './ManagementTable';\nimport apiReview from '~/api/review';\nlet values = {};\nconst {\n  Step\n} = _Steps;\nconst breadcrumbs = [{\n  text: '信审管理'\n}, {\n  text: '信审设置'\n}, {\n  text: '委案人员设置'\n}];\n\nfunction body({\n  router\n}) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: activityCurrent,\n    1: setActivityCurrent\n  } = useState([]);\n  const {\n    0: productId,\n    1: setProductId\n  } = useState([]);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: isNull,\n    1: setIsNull\n  } = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await apiProduct.get_products({\n          tenantId: cookies.tenantId\n        });\n\n        if (code == 0) {\n          setProductList(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const handleClick = async e => {\n    setActivityCurrent(e.target.value != null ? 1 : 0);\n    setProductId(Number(e.target.value));\n    personnelList({\n      productId: e.target.value\n    });\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_switchList({\n        productId: e.target.value\n      });\n\n      if (code == 0) {\n        if (data == null) {\n          setIsNull(true);\n        } else {\n          setIsNull(false);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const personnelList = async (values = {}) => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiReview.fetch_personnel_list(_objectSpread({}, values));\n\n      if (code == 0) {\n        if (data != null) {\n          setList(data);\n          setActivityCurrent(2);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const configure = () => {\n    location.href = `/credit/review/switch`;\n  };\n\n  const onSearch = async value => {\n    values = value;\n    console.log(value);\n    personnelList(_objectSpread(_objectSpread({}, values), {}, {\n      productId: productId\n    }));\n\n    if (value.accountName == '' || value.accountName == undefined) {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await apiReview.fetch_personnel_list();\n\n        if (code == 0) {\n          if (data != null) {\n            setList(data);\n            setActivityCurrent(2);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%',\n      position: 'relative'\n    }\n  }, __jsx(_Card, null, __jsx(_Steps, {\n    direction: \"vertical\",\n    current: activityCurrent\n  }, __jsx(Step, {\n    title: \"\\u9009\\u62E9\\u8D37\\u6B3E\\u4EA7\\u54C1\",\n    description: __jsx(\"div\", {\n      style: {\n        height: 100\n      }\n    }, __jsx(\"div\", {\n      style: {\n        marginTop: 50\n      }\n    }, __jsx(_Form, {\n      form: form,\n      name: \"form\"\n    }, __jsx(_Form.Item, {\n      label: \"\\u4FE1\\u8D37\\u4EA7\\u54C1\",\n      name: \"creditProducts\"\n    }, __jsx(_Radio.Group, null, productList.map((v, i) => __jsx(_Radio.Button, {\n      key: v.id,\n      value: v.id,\n      onClick: handleClick\n    }, v.name)))))))\n  }), __jsx(Step, {\n    title: \"\\u59D4\\u6848\\u4EBA\\u5458\\u7BA1\\u7406\",\n    description: isNull == true ? __jsx(_Empty, {\n      style: {\n        marginTop: 100\n      },\n      image: \"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\",\n      imageStyle: {\n        height: 60\n      },\n      description: '当前产品未开启信审开关，请前去设置'\n    }, __jsx(_Button, {\n      type: \"primary\",\n      onClick: configure\n    }, \"\\u524D\\u53BB\\u914D\\u7F6E\")) : __jsx(ManagementTable, {\n      list,\n      onSearch,\n      productId,\n      personnelList\n    })\n  })))));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}