{"ast":null,"code":"import \"antd/lib/progress/style\";\nimport _Progress from \"antd/lib/progress\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useCookies } from 'react-cookie';\nimport { useEffect, useState } from 'react';\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart, Bar, Area } from 'recharts';\nimport { formatMoney, computeUnit } from '~/utils';\nimport api from '~/api/authority';\nimport apiProduct from '~/api/product';\nvar colors = ['#1890ff', '#5cc35c', '#fadb14', '#f5222d', '#fa8c16', '#faad14', '#a0d911', '#13c2c2', '#722ed1', '#eb2f96', '#bfbfbf', '#2f54eb'];\n\nfunction body(props) {\n  _s();\n\n  var _useCookies = useCookies(['tenantId']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _useState = useState([]),\n      topIndexDatas = _useState[0],\n      setTopIndexDatas = _useState[1];\n\n  var _useState2 = useState([]),\n      timingDatas = _useState2[0],\n      setTimingDatas = _useState2[1];\n\n  var _useState3 = useState([]),\n      listCoreIndexYear = _useState3[0],\n      setListCoreIndexYear = _useState3[1];\n\n  var _useState4 = useState([]),\n      dayAddLoanAmountList = _useState4[0],\n      setDayAddLoanAmountList = _useState4[1];\n\n  var _useState5 = useState([]),\n      dayAddLoanBalanceAmountList = _useState5[0],\n      setDayAddLoanBalanceAmountList = _useState5[1];\n\n  var _useState6 = useState([]),\n      dayAddInterestAmountList = _useState6[0],\n      setDayAddInterestAmountList = _useState6[1];\n\n  var _useState7 = useState([]),\n      dayAddBadLoanAmountList = _useState7[0],\n      setDayAddBadLoanAmountList = _useState7[1];\n\n  var _useState8 = useState([]),\n      dayAddLoanUserList = _useState8[0],\n      setDayAddLoanUserList = _useState8[1];\n\n  var _useState9 = useState([]),\n      coreIndexYears = _useState9[0],\n      setCoreIndexYears = _useState9[1];\n\n  var _useState10 = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {\n      amount: 0,\n      count: 0,\n      peopleNumber: 0\n    },\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null\n  }),\n      coreIndex = _useState10[0],\n      setCoreIndex = _useState10[1];\n\n  var _useState11 = useState({}),\n      coreIndexBadLoan = _useState11[0],\n      setCoreIndexBadLoan = _useState11[1];\n\n  var _useState12 = useState([]),\n      coreIndexBadLoanAmount = _useState12[0],\n      setCoreIndexBadLoanAmount = _useState12[1];\n\n  var _useState13 = useState({}),\n      coreIndexOverdue = _useState13[0],\n      setCoreIndexOverdue = _useState13[1];\n\n  var _useState14 = useState([]),\n      coreIndexOverdueAmount = _useState14[0],\n      setCoreIndexOverdueAmount = _useState14[1];\n\n  var _useState15 = useState([]),\n      productList = _useState15[0],\n      setProductList = _useState15[1];\n\n  var _useState16 = useState('-1'),\n      productId = _useState16[0],\n      setProductId = _useState16[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$apiProduct$get, _yield$apiProduct$get2, data, code;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return apiProduct.get_products({\n                  tenantId: cookies.tenantId\n                });\n\n              case 3:\n                _yield$apiProduct$get = _context.sent;\n                _yield$apiProduct$get2 = _yield$apiProduct$get.data;\n                data = _yield$apiProduct$get2.data;\n                code = _yield$apiProduct$get2.code;\n\n                if (code == 0) {\n                  setProductList(data);\n                  data && data.length && setProductId(String(data[0].id));\n                  fetchIndex(data[0].id);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    var dayAddLoanAmount = coreIndex.dayAddLoanAmount,\n        dayAddLoanBalanceAmount = coreIndex.dayAddLoanBalanceAmount,\n        dayAddInterestAmount = coreIndex.dayAddInterestAmount,\n        dayAddBadLoanAmount = coreIndex.dayAddBadLoanAmount,\n        dayAddLoanUser = coreIndex.dayAddLoanUser,\n        historyLoanAmount = coreIndex.historyLoanAmount,\n        historyLoanBalanceAmount = coreIndex.historyLoanBalanceAmount,\n        historyLoanNum = coreIndex.historyLoanNum,\n        historyLoanUser = coreIndex.historyLoanUser,\n        historyInterestAmount = coreIndex.historyInterestAmount,\n        listCoreIndexYear = coreIndex.listCoreIndexYear,\n        dayAddLoanAmountList = coreIndex.dayAddLoanAmountList,\n        dayAddLoanBalanceAmountList = coreIndex.dayAddLoanBalanceAmountList,\n        dayAddInterestAmountList = coreIndex.dayAddInterestAmountList,\n        dayAddBadLoanAmountList = coreIndex.dayAddBadLoanAmountList,\n        dayAddLoanUserList = coreIndex.dayAddLoanUserList,\n        yearBadLoanAmount = coreIndex.yearBadLoanAmount,\n        yearInterestAmount = coreIndex.yearInterestAmount,\n        yearProfit = coreIndex.yearProfit,\n        coreIndexNowBadLoan = coreIndex.coreIndexNowBadLoan,\n        coreIndexNowOverdue = coreIndex.coreIndexNowOverdue;\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {\n      rate: 0\n    };\n    coreIndexNowOverdue = coreIndexNowOverdue || {\n      rate: 0\n    };\n    setCoreIndexBadLoan(coreIndexNowBadLoan);\n    setCoreIndexOverdue(coreIndexNowOverdue);\n    setListCoreIndexYear(listCoreIndexYear);\n    setDayAddLoanAmountList(dayAddLoanAmountList);\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList);\n    setDayAddInterestAmountList(dayAddInterestAmountList);\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList);\n    setDayAddLoanUserList(dayAddLoanUserList);\n    setCoreIndexBadLoanAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowBadLoan.amount || 0,\n      tips: '不良订单的剩余贷款余额（本金部分）'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowBadLoan.count || 0,\n      tips: '订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowBadLoan.peopleNumber || 0,\n      tips: '用户的人数'\n    }]);\n    setCoreIndexOverdueAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowOverdue.amount || 0,\n      tips: '逾期订单的逾期期数本金之和'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowOverdue.count || 0,\n      tips: '逾期订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowOverdue.peopleNumber || 0,\n      tips: '用户的人数'\n    }]);\n    setTopIndexDatas([{\n      title: '当日新增(放款金额)',\n      tips: '当日放款金额的累计',\n      unit: '元',\n      value: dayAddLoanAmount\n    }, {\n      title: '当日净增 (贷款余额)',\n      tips: '当日放款金额-当日还款金额',\n      unit: '元',\n      value: dayAddLoanBalanceAmount\n    }, {\n      title: '当日实收利息',\n      tips: '当日结息金额',\n      unit: '元',\n      value: dayAddInterestAmount\n    }, {\n      title: '当日新增(60+不良本金)',\n      tips: '当日新增的不良（逾期60+）本金',\n      unit: '元',\n      value: dayAddBadLoanAmount\n    }, {\n      title: '当日新增（放款用户）',\n      tips: '当日放款用户数的累计',\n      unit: '人',\n      value: dayAddLoanUser\n    }]);\n    setTimingDatas([{\n      title: '累放金额',\n      tips: '历史放款本金金额累计',\n      unit: '元',\n      value: historyLoanAmount\n    }, {\n      title: '贷款余额',\n      tips: '所有在途订单(含逾期)的剩余待还本金之和',\n      unit: '元',\n      value: historyLoanBalanceAmount\n    }, {\n      title: '累放笔数',\n      tips: '历史所有用户放款笔数',\n      unit: '笔',\n      value: historyLoanNum\n    }, {\n      title: '累放用户数',\n      tips: '历史放款用户数',\n      unit: '人',\n      value: historyLoanUser\n    }, {\n      title: '实收息费（包含利息罚息）',\n      tips: '利息+罚息',\n      unit: '元',\n      value: historyInterestAmount\n    }]);\n    setCoreIndexYears([{\n      title: '年度利润率（未剔除获客成本）',\n      tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n      unit: '',\n      value: yearProfit\n    }, {\n      title: '年度实收利息',\n      tips: '当前年内的结息之和',\n      unit: '元',\n      value: yearInterestAmount\n    }, {\n      title: '年度净不良本金（60+）',\n      tips: '当前年内的不良本金之和',\n      unit: '元',\n      value: yearBadLoanAmount\n    }]);\n  }, [coreIndex]);\n\n  var fetchIndex = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var _yield$api$get_core_i, _yield$api$get_core_i2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return api.get_core_index({\n                productId: id\n              });\n\n            case 3:\n              _yield$api$get_core_i = _context2.sent;\n              _yield$api$get_core_i2 = _yield$api$get_core_i.data;\n              data = _yield$api$get_core_i2.data;\n              code = _yield$api$get_core_i2.code;\n\n              if (code == 0 && data) {\n                setCoreIndex(data);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function fetchIndex(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var toWan = function toWan(decimal) {\n    var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return \"\".concat((decimal / 10000).toFixed(fixed), \"\\u4E07\");\n  };\n\n  var toBaiFen = function toBaiFen(decimal) {\n    var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return \"\".concat(decimal, \"%\");\n  };\n\n  var changeProduct = function changeProduct(val) {\n    setProductId(val);\n    fetchIndex(val);\n  };\n\n  return __jsx(Layout, {\n    isGray: true\n  }, __jsx(_Row, {\n    gutter: [30, 0],\n    style: {\n      marginLeft: 0\n    }\n  }, topIndexDatas.length ? topIndexDatas.slice(0, 1).map(function (item, i) {\n    return __jsx(_Col, {\n      span: 5,\n      key: i,\n      style: {\n        paddingLeft: i == 0 ? 0 : null\n      }\n    }, __jsx(_Card, {\n      bodyStyle: {\n        padding: '12px 24px'\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858'\n      }\n    }, computeUnit(item.value))));\n  }) : null, __jsx(_Col, {\n    span: 19,\n    style: {\n      textAlign: 'right'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: '20px 0 20px'\n    }\n  }, __jsx(_Select, {\n    style: {\n      width: '130px'\n    },\n    onChange: function onChange(val) {\n      return changeProduct(val);\n    },\n    value: productList.find(function (v) {\n      return v.id == productId;\n    }) && productList.find(function (v) {\n      return v.id == productId;\n    }).name\n  }, productList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.name);\n  }))), __jsx(\"div\", null, \"\\u6570\\u636E\\u66F4\\u65B0\\u65F6\\u95F4\\uFF1A\", coreIndex.reportTime))), __jsx(_Card, {\n    title: \"\\u8FD130\\u65E5\\u65B0\\u589E\\u653E\\u6B3E\\u91D1\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '0px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(ComposedChart, {\n    width: 1100,\n    height: 240,\n    data: dayAddLoanAmountList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toWan\n  }), __jsx(Tooltip, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Bar, {\n    dataKey: \"amount\",\n    barSize: 16,\n    fill: \"#1890ff\",\n    name: \"\\u65B0\\u589E\\u653E\\u6B3E\\u91D1\\u989D\"\n  }))), __jsx(_Row, {\n    gutter: [30, 0],\n    style: {\n      marginLeft: 0\n    }\n  }, topIndexDatas.length ? topIndexDatas.slice(1).map(function (item, i) {\n    return __jsx(_Col, {\n      span: 6,\n      key: i,\n      style: {\n        paddingLeft: i == 0 ? 0 : null,\n        paddingRight: i != topIndexDatas.length - 2 ? 0 : '15px'\n      }\n    }, __jsx(_Card, null, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858',\n        height: '22px'\n      }\n    }, computeUnit(item.value)), __jsx(\"div\", null, function () {\n      if (i == 0) {\n        return __jsx(ComposedChart, {\n          width: 260,\n          height: 80,\n          data: dayAddLoanBalanceAmountList\n        }, __jsx(XAxis, {\n          dataKey: \"reportTime\",\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(YAxis, {\n          tickFormatter: toWan,\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(Area, {\n          type: \"monotone\",\n          dataKey: \"amount\",\n          fill: \"#d9f5f8\",\n          stroke: \"#79dbe6\"\n        }));\n      }\n\n      if (i == 1) {\n        return __jsx(ComposedChart, {\n          width: 260,\n          height: 80,\n          data: dayAddInterestAmountList\n        }, __jsx(XAxis, {\n          dataKey: \"reportTime\",\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(YAxis, {\n          tickFormatter: toWan,\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(Bar, {\n          dataKey: \"amount\",\n          barSize: 10,\n          fill: \"#1890ff\"\n        }));\n      }\n\n      if (i == 2) {\n        return __jsx(ComposedChart, {\n          width: 260,\n          height: 80,\n          data: dayAddBadLoanAmountList\n        }, __jsx(XAxis, {\n          dataKey: \"reportTime\",\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(YAxis, {\n          tickFormatter: toWan,\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(Bar, {\n          dataKey: \"amount\",\n          barSize: 10,\n          fill: \"#1890ff\"\n        }));\n      }\n\n      if (i == 3) {\n        return __jsx(ComposedChart, {\n          width: 260,\n          height: 80,\n          data: dayAddLoanUserList\n        }, __jsx(XAxis, {\n          dataKey: \"reportTime\",\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(YAxis, {\n          tickFormatter: toWan,\n          hide: true,\n          interval: \"preserveStartEnd\"\n        }), __jsx(Area, {\n          type: \"monotone\",\n          dataKey: \"amount\",\n          fill: \"#d9f5f8\",\n          stroke: \"#79dbe6\"\n        }));\n      }\n    }())));\n  }) : null), __jsx(_Card, {\n    title: \"\\u7D2F\\u8BA1\\u4EA4\\u6613\\u60C5\\u51B5\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, {\n    gutter: [30, 0]\n  }, timingDatas.length ? timingDatas.map(function (item, i) {\n    return __jsx(_Col, {\n      span: 4.6,\n      key: i\n    }, __jsx(_Card, {\n      bordered: false\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858',\n        height: '22px'\n      }\n    }, computeUnit(item.value))));\n  }) : null)), __jsx(_Card, {\n    title: \"\\u5E74\\u5EA6\\u6307\\u6807\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h4\", {\n    style: {\n      position: 'relative',\n      width: '800px'\n    }\n  }, \"\\u5E74\\u65E5\\u5747\\u4F59\\u989D\\u53CA\\u65E5\\u5747\\u4F59\\u989D\", __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      right: 0,\n      top: '5px'\n    }\n  }, coreIndex.yearMonth, \"\\u6708\")), __jsx(ComposedChart, {\n    width: 800,\n    height: 360,\n    data: listCoreIndexYear\n  }, __jsx(XAxis, {\n    dataKey: \"day\"\n  }), __jsx(YAxis, {\n    tickFormatter: toWan\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Bar, {\n    dataKey: \"dailyAmount\",\n    barSize: 20,\n    fill: \"#1890ff\",\n    name: \"\\u65E5\\u5747\\u4F59\\u989D\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"yearDailyAmount\",\n    stroke: \"#5cc35c\",\n    name: \"\\u5E74\\u65E5\\u5747\\u4F59\\u989D\"\n  }))), __jsx(_Col, {\n    span: 6\n  }, coreIndexYears.length ? coreIndexYears.map(function (item, i) {\n    return __jsx(_Card, {\n      key: i\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858'\n      }\n    }, computeUnit(item.value)));\n  }) : null))), __jsx(_Card, {\n    title: \"\\u5F53\\u524D\\u903E\\u671F\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h4\", {\n    style: {\n      position: 'relative',\n      width: '800px'\n    }\n  }, \"\\u5206\\u6E20\\u9053\\u5206\\u65E5\\u903E\\u671F\\u7387\", __jsx(_Tooltip, {\n    title: '统计日当日入逾期单数/统计日前日到期单数'\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(ComposedChart, {\n    width: 800,\n    height: 360,\n    data: coreIndexOverdue.coreIndexBadLoanList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toBaiFen\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), Array.isArray(coreIndexOverdue.channelNames) && coreIndexOverdue.channelNames.map(function (v, i) {\n    return __jsx(Line, {\n      key: i,\n      type: \"monotone\",\n      dataKey: \"channelRateList[\".concat(i, \"].rate\"),\n      stroke: colors[i],\n      name: v\n    });\n  }))), __jsx(_Col, {\n    span: 6\n  }, __jsx(_Card, {\n    bodyStyle: {\n      padding: '15px'\n    }\n  }, __jsx(_Row, {\n    gutter: [10, 0],\n    align: \"bottom\"\n  }, __jsx(_Col, null, __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      fontSize: '16px',\n      marginBottom: '5px'\n    }\n  }, coreIndexOverdue.productName), __jsx(\"div\", {\n    style: {\n      color: '#b0b0b0'\n    }\n  }, \"\\u603B\\u903E\\u671F\\u7387\", __jsx(_Tooltip, {\n    title: \"\\u5F53\\u524D\\u903E\\u671F\\u5355\\u6570/\\u5F53\\u524D\\u603B\\u653E\\u6B3E\\u5355\\u6570*100\"\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(\"div\", {\n    style: {\n      fontSize: '24px',\n      fontWeight: 500\n    }\n  }, coreIndexOverdue.rate || 0, \"%\"))), __jsx(_Col, null, __jsx(_Progress, {\n    type: \"circle\",\n    width: 66,\n    percent: coreIndexOverdue.rate || 0,\n    showInfo: false,\n    strokeLinecap: \"square\",\n    strokeWidth: \"16\"\n  })))), coreIndexOverdueAmount.length ? coreIndexOverdueAmount.map(function (item, i) {\n    return __jsx(_Card, {\n      key: i,\n      bodyStyle: {\n        padding: '15px'\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858'\n      }\n    }, computeUnit(item.value)));\n  }) : null))), __jsx(_Card, {\n    title: \"\\u5F53\\u524D\\u4E0D\\u826F(\\u903E\\u671F60+)\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h4\", {\n    style: {\n      position: 'relative',\n      width: '800px'\n    }\n  }, \"\\u5206\\u6E20\\u9053\\u5206\\u65E5\\u4E0D\\u826F\\u7387\", __jsx(_Tooltip, {\n    title: '统计日当日不良单数/统计日前T-60到期单数'\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(ComposedChart, {\n    width: 800,\n    height: 360,\n    data: coreIndexBadLoan.coreIndexBadLoanList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toBaiFen\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), Array.isArray(coreIndexBadLoan.channelNames) && coreIndexBadLoan.channelNames.map(function (v, i) {\n    return __jsx(Line, {\n      key: i,\n      type: \"monotone\",\n      dataKey: \"channelRateList[\".concat(i, \"].rate\"),\n      stroke: colors[i],\n      name: v\n    });\n  }))), __jsx(_Col, {\n    span: 6\n  }, __jsx(_Card, {\n    bodyStyle: {\n      padding: '15px'\n    }\n  }, __jsx(_Row, {\n    gutter: [10, 0],\n    align: \"bottom\"\n  }, __jsx(_Col, null, __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      fontSize: '16px',\n      marginBottom: '5px'\n    }\n  }, coreIndexBadLoan.productName), __jsx(\"div\", {\n    style: {\n      color: '#b0b0b0'\n    }\n  }, \"\\u603B\\u4E0D\\u826F\\u7387\", __jsx(_Tooltip, {\n    title: \"\\u5F53\\u524D\\u4E0D\\u826F\\u5355\\u6570\\uFF08\\u903E\\u671F60\\u5929\\u4EE5\\u4E0A\\u8BA2\\u5355\\uFF09/\\u5F53\\u524D\\u603B\\u653E\\u6B3E\\u5355\\u6570*100\"\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(\"div\", {\n    style: {\n      fontSize: '24px',\n      fontWeight: 500\n    }\n  }, coreIndexBadLoan.rate || 0, \"%\"))), __jsx(_Col, null, __jsx(_Progress, {\n    type: \"circle\",\n    width: 66,\n    percent: coreIndexBadLoan.rate || 0,\n    showInfo: false,\n    strokeLinecap: \"square\",\n    strokeWidth: \"16\"\n  })))), coreIndexBadLoanAmount.length ? coreIndexBadLoanAmount.map(function (item, i) {\n    return __jsx(_Card, {\n      key: i,\n      bodyStyle: {\n        padding: '15px'\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858'\n      }\n    }, computeUnit(item.value)));\n  }) : null))));\n}\n\n_s(body, \"poNP6VNP5rppYU5P/vpVUwlG/+w=\", false, function () {\n  return [useCookies];\n});\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}));\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/dashboard/index.js"],"names":["Layout","ExclamationCircleOutlined","useCookies","useEffect","useState","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ComposedChart","Bar","Area","formatMoney","computeUnit","api","apiProduct","colors","body","props","cookies","topIndexDatas","setTopIndexDatas","timingDatas","setTimingDatas","listCoreIndexYear","setListCoreIndexYear","dayAddLoanAmountList","setDayAddLoanAmountList","dayAddLoanBalanceAmountList","setDayAddLoanBalanceAmountList","dayAddInterestAmountList","setDayAddInterestAmountList","dayAddBadLoanAmountList","setDayAddBadLoanAmountList","dayAddLoanUserList","setDayAddLoanUserList","coreIndexYears","setCoreIndexYears","dayAddLoanAmount","dayAddLoanBalanceAmount","dayAddInterestAmount","dayAddBadLoanAmount","dayAddLoanUser","historyLoanAmount","historyLoanBalanceAmount","historyLoanNum","historyLoanUser","historyInterestAmount","yearBadLoanAmount","yearInterestAmount","yearProfit","coreIndexNowBadLoan","amount","count","peopleNumber","coreIndexNowOverdue","yearMonth","reportTime","coreIndex","setCoreIndex","coreIndexBadLoan","setCoreIndexBadLoan","coreIndexBadLoanAmount","setCoreIndexBadLoanAmount","coreIndexOverdue","setCoreIndexOverdue","coreIndexOverdueAmount","setCoreIndexOverdueAmount","productList","setProductList","productId","setProductId","fetchData","get_products","tenantId","data","code","length","String","id","fetchIndex","console","log","rate","title","unit","value","tips","get_core_index","toWan","decimal","fixed","toFixed","toBaiFen","changeProduct","val","marginLeft","slice","map","item","i","paddingLeft","padding","color","marginRight","fontSize","fontWeight","textAlign","margin","width","find","v","name","marginTop","paddingRight","height","position","right","top","coreIndexBadLoanList","Array","isArray","channelNames","marginBottom","productName","getInitialProps"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport {\n  message,\n  Card,\n  Row,\n  Col,\n  Tooltip as TooltipAnt,\n  Progress,\n  Select,\n} from 'antd'\nimport {ExclamationCircleOutlined} from '@ant-design/icons'\nimport {useCookies} from 'react-cookie'\nimport {useEffect, useState} from 'react'\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ComposedChart,\n  Bar,\n  Area,\n} from 'recharts'\nimport {formatMoney, computeUnit} from '~/utils'\nimport api from '~/api/authority'\nimport apiProduct from '~/api/product'\n\nconst colors = [\n  '#1890ff',\n  '#5cc35c',\n  '#fadb14',\n  '#f5222d',\n  '#fa8c16',\n  '#faad14',\n  '#a0d911',\n  '#13c2c2',\n  '#722ed1',\n  '#eb2f96',\n  '#bfbfbf',\n  '#2f54eb',\n]\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId'])\n  const [topIndexDatas, setTopIndexDatas] = useState([])\n  const [timingDatas, setTimingDatas] = useState([])\n  const [listCoreIndexYear, setListCoreIndexYear] = useState([])\n  const [dayAddLoanAmountList, setDayAddLoanAmountList] = useState([])\n  const [\n    dayAddLoanBalanceAmountList,\n    setDayAddLoanBalanceAmountList,\n  ] = useState([])\n  const [dayAddInterestAmountList, setDayAddInterestAmountList] = useState([])\n  const [dayAddBadLoanAmountList, setDayAddBadLoanAmountList] = useState([])\n  const [dayAddLoanUserList, setDayAddLoanUserList] = useState([])\n\n  const [coreIndexYears, setCoreIndexYears] = useState([])\n  const [coreIndex, setCoreIndex] = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {amount: 0, count: 0, peopleNumber: 0},\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null,\n  })\n  const [coreIndexBadLoan, setCoreIndexBadLoan] = useState({})\n  const [coreIndexBadLoanAmount, setCoreIndexBadLoanAmount] = useState([])\n  const [coreIndexOverdue, setCoreIndexOverdue] = useState({})\n  const [coreIndexOverdueAmount, setCoreIndexOverdueAmount] = useState([])\n  const [productList, setProductList] = useState([])\n  const [productId, setProductId] = useState('-1')\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {data, code},\n        } = await apiProduct.get_products({tenantId: cookies.tenantId})\n        if (code == 0) {\n          setProductList(data)\n          data && data.length && setProductId(String(data[0].id))\n          fetchIndex(data[0].id)\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    let {\n      dayAddLoanAmount,\n      dayAddLoanBalanceAmount,\n      dayAddInterestAmount,\n      dayAddBadLoanAmount,\n      dayAddLoanUser,\n      historyLoanAmount,\n      historyLoanBalanceAmount,\n      historyLoanNum,\n      historyLoanUser,\n      historyInterestAmount,\n      listCoreIndexYear,\n      dayAddLoanAmountList,\n      dayAddLoanBalanceAmountList,\n      dayAddInterestAmountList,\n      dayAddBadLoanAmountList,\n      dayAddLoanUserList,\n      yearBadLoanAmount,\n      yearInterestAmount,\n      yearProfit,\n      coreIndexNowBadLoan,\n      coreIndexNowOverdue,\n    } = coreIndex\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {rate: 0}\n    coreIndexNowOverdue = coreIndexNowOverdue || {rate: 0}\n    setCoreIndexBadLoan(coreIndexNowBadLoan)\n    setCoreIndexOverdue(coreIndexNowOverdue)\n    setListCoreIndexYear(listCoreIndexYear)\n    setDayAddLoanAmountList(dayAddLoanAmountList)\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList)\n    setDayAddInterestAmountList(dayAddInterestAmountList)\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList)\n    setDayAddLoanUserList(dayAddLoanUserList)\n\n    setCoreIndexBadLoanAmount([\n      {\n        title: '总本金',\n        unit: '元',\n        value: coreIndexNowBadLoan.amount || 0,\n        tips: '不良订单的剩余贷款余额（本金部分）',\n      },\n      {\n        title: '总笔数',\n        unit: '笔',\n        value: coreIndexNowBadLoan.count || 0,\n        tips: '订单的笔数',\n      },\n      {\n        title: '总客户数',\n        unit: '人',\n        value: coreIndexNowBadLoan.peopleNumber || 0,\n        tips: '用户的人数',\n      },\n    ])\n    setCoreIndexOverdueAmount([\n      {\n        title: '总本金',\n        unit: '元',\n        value: coreIndexNowOverdue.amount || 0,\n        tips: '逾期订单的逾期期数本金之和',\n      },\n      {\n        title: '总笔数',\n        unit: '笔',\n        value: coreIndexNowOverdue.count || 0,\n        tips: '逾期订单的笔数',\n      },\n      {\n        title: '总客户数',\n        unit: '人',\n        value: coreIndexNowOverdue.peopleNumber || 0,\n        tips: '用户的人数',\n      },\n    ])\n    setTopIndexDatas([\n      {\n        title: '当日新增(放款金额)',\n        tips: '当日放款金额的累计',\n        unit: '元',\n        value: dayAddLoanAmount,\n      },\n      {\n        title: '当日净增 (贷款余额)',\n        tips: '当日放款金额-当日还款金额',\n        unit: '元',\n        value: dayAddLoanBalanceAmount,\n      },\n      {\n        title: '当日实收利息',\n        tips: '当日结息金额',\n        unit: '元',\n        value: dayAddInterestAmount,\n      },\n      {\n        title: '当日新增(60+不良本金)',\n        tips: '当日新增的不良（逾期60+）本金',\n        unit: '元',\n        value: dayAddBadLoanAmount,\n      },\n      {\n        title: '当日新增（放款用户）',\n        tips: '当日放款用户数的累计',\n        unit: '人',\n        value: dayAddLoanUser,\n      },\n    ])\n\n    setTimingDatas([\n      {\n        title: '累放金额',\n        tips: '历史放款本金金额累计',\n        unit: '元',\n        value: historyLoanAmount,\n      },\n      {\n        title: '贷款余额',\n        tips: '所有在途订单(含逾期)的剩余待还本金之和',\n        unit: '元',\n        value: historyLoanBalanceAmount,\n      },\n      {\n        title: '累放笔数',\n        tips: '历史所有用户放款笔数',\n        unit: '笔',\n        value: historyLoanNum,\n      },\n      {\n        title: '累放用户数',\n        tips: '历史放款用户数',\n        unit: '人',\n        value: historyLoanUser,\n      },\n      {\n        title: '实收息费（包含利息罚息）',\n        tips: '利息+罚息',\n        unit: '元',\n        value: historyInterestAmount,\n      },\n    ])\n    setCoreIndexYears([\n      {\n        title: '年度利润率（未剔除获客成本）',\n        tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n        unit: '',\n        value: yearProfit,\n      },\n      {\n        title: '年度实收利息',\n        tips: '当前年内的结息之和',\n        unit: '元',\n        value: yearInterestAmount,\n      },\n      {\n        title: '年度净不良本金（60+）',\n        tips: '当前年内的不良本金之和',\n        unit: '元',\n        value: yearBadLoanAmount,\n      },\n    ])\n  }, [coreIndex])\n  const fetchIndex = async (id) => {\n    try {\n      const {\n        data: {data, code},\n      } = await api.get_core_index({\n        productId: id,\n      })\n      if (code == 0 && data) {\n        setCoreIndex(data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const toWan = (decimal, fixed = 0) => `${(decimal / 10000).toFixed(fixed)}万`\n  const toBaiFen = (decimal, fixed = 0) => `${decimal}%`\n  const changeProduct = (val) => {\n    setProductId(val)\n    fetchIndex(val)\n  }\n  return (\n    <Layout isGray={true}>\n      <Row gutter={[30, 0]} style={{marginLeft: 0}}>\n        {topIndexDatas.length\n          ? topIndexDatas.slice(0, 1).map((item, i) => (\n              <Col span={5} key={i} style={{paddingLeft: i == 0 ? 0 : null}}>\n                <Card bodyStyle={{padding: '12px 24px'}}>\n                  <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                    {item.title}\n                  </span>\n                  <TooltipAnt title={item.tips}>\n                    <ExclamationCircleOutlined />\n                  </TooltipAnt>\n                  <div>\n                    <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                      {formatMoney(item.value)}\n                    </span>\n                    <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                  </div>\n                  <div style={{color: '#595858'}}>\n                    {computeUnit(item.value)}\n                  </div>\n                </Card>\n              </Col>\n            ))\n          : null}\n        <Col span={19} style={{textAlign: 'right'}}>\n          <div style={{margin: '20px 0 20px'}}>\n            <Select\n              style={{width: '130px'}}\n              onChange={(val) => changeProduct(val)}\n              value={\n                productList.find((v) => v.id == productId) &&\n                productList.find((v) => v.id == productId).name\n              }\n            >\n              {productList.map((v, i) => (\n                <Select.Option key={i} value={v.id}>\n                  {v.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div>数据更新时间：{coreIndex.reportTime}</div>\n        </Col>\n      </Row>\n      <Card\n        title=\"近30日新增放款金额\"\n        style={{width: '100%', marginTop: '0px'}}\n        bodyStyle={{padding: '24px 24px 10px'}}\n      >\n        <ComposedChart width={1100} height={240} data={dayAddLoanAmountList}>\n          <XAxis dataKey=\"reportTime\" />\n          <YAxis tickFormatter={toWan} />\n          <Tooltip />\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <Bar\n            dataKey=\"amount\"\n            barSize={16}\n            fill=\"#1890ff\"\n            name=\"新增放款金额\"\n          />\n        </ComposedChart>\n      </Card>\n      <Row gutter={[30, 0]} style={{marginLeft: 0}}>\n        {topIndexDatas.length\n          ? topIndexDatas.slice(1).map((item, i) => (\n              <Col\n                span={6}\n                key={i}\n                style={{\n                  paddingLeft: i == 0 ? 0 : null,\n                  paddingRight: i != topIndexDatas.length - 2 ? 0 : '15px',\n                }}\n              >\n                <Card>\n                  <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                    {item.title}\n                  </span>\n                  <TooltipAnt title={item.tips}>\n                    <ExclamationCircleOutlined />\n                  </TooltipAnt>\n                  <div>\n                    <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                      {formatMoney(item.value)}\n                    </span>\n                    <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                  </div>\n                  <div style={{color: '#595858', height: '22px'}}>\n                    {computeUnit(item.value)}\n                  </div>\n                  <div>\n                    {(function () {\n                      if (i == 0) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddLoanBalanceAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <Area\n                              type=\"monotone\"\n                              dataKey=\"amount\"\n                              fill=\"#d9f5f8\"\n                              stroke=\"#79dbe6\"\n                            />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 1) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddInterestAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n\n                            <Bar dataKey=\"amount\" barSize={10} fill=\"#1890ff\" />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 2) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddBadLoanAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n\n                            <Bar dataKey=\"amount\" barSize={10} fill=\"#1890ff\" />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 3) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddLoanUserList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <Area\n                              type=\"monotone\"\n                              dataKey=\"amount\"\n                              fill=\"#d9f5f8\"\n                              stroke=\"#79dbe6\"\n                            />\n                          </ComposedChart>\n                        )\n                      }\n                    })()}\n                  </div>\n                </Card>\n              </Col>\n            ))\n          : null}\n      </Row>\n      <Card title=\"累计交易情况\" style={{width: '100%', marginTop: '20px'}}>\n        <Row gutter={[30, 0]}>\n          {timingDatas.length\n            ? timingDatas.map((item, i) => (\n                <Col span={4.6} key={i}>\n                  <Card bordered={false}>\n                    <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                      {item.title}\n                    </span>\n                    <TooltipAnt title={item.tips}>\n                      <ExclamationCircleOutlined />\n                    </TooltipAnt>\n                    <div>\n                      <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                        {formatMoney(item.value)}\n                      </span>\n                      <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                    </div>\n                    <div style={{color: '#595858', height: '22px'}}>\n                      {computeUnit(item.value)}\n                    </div>\n                  </Card>\n                </Col>\n              ))\n            : null}\n        </Row>\n      </Card>\n      <Card title=\"年度指标\" style={{width: '100%', marginTop: '20px'}}>\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              年日均余额及日均余额\n              <span style={{position: 'absolute', right: 0, top: '5px'}}>\n                {coreIndex.yearMonth}月\n              </span>\n            </h4>\n\n            <ComposedChart width={800} height={360} data={listCoreIndexYear}>\n              <XAxis dataKey=\"day\" />\n              <YAxis tickFormatter={toWan} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              <Bar\n                dataKey=\"dailyAmount\"\n                barSize={20}\n                fill=\"#1890ff\"\n                name=\"日均余额\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"yearDailyAmount\"\n                stroke=\"#5cc35c\"\n                name=\"年日均余额\"\n              />\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            {coreIndexYears.length\n              ? coreIndexYears.map((item, i) => (\n                  <Card key={i}>\n                    <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                      {item.title}\n                    </span>\n                    <TooltipAnt title={item.tips}>\n                      <ExclamationCircleOutlined />\n                    </TooltipAnt>\n                    <div>\n                      <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                        {formatMoney(item.value)}\n                      </span>\n                      <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                    </div>\n                    <div style={{color: '#595858'}}>\n                      {computeUnit(item.value)}\n                    </div>\n                  </Card>\n                ))\n              : null}\n          </Col>\n        </Row>\n      </Card>\n      <Card title=\"当前逾期\" style={{width: '100%', marginTop: '20px'}}>\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              分渠道分日逾期率\n              <TooltipAnt title={'统计日当日入逾期单数/统计日前日到期单数'}>\n                <ExclamationCircleOutlined />\n              </TooltipAnt>\n            </h4>\n\n            <ComposedChart\n              width={800}\n              height={360}\n              data={coreIndexOverdue.coreIndexBadLoanList}\n            >\n              <XAxis dataKey=\"reportTime\" />\n              <YAxis tickFormatter={toBaiFen} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              {Array.isArray(coreIndexOverdue.channelNames) &&\n                coreIndexOverdue.channelNames.map((v, i) => {\n                  return (\n                    <Line\n                      key={i}\n                      type=\"monotone\"\n                      dataKey={`channelRateList[${i}].rate`}\n                      stroke={colors[i]}\n                      name={v}\n                    />\n                  )\n                })}\n              {/* <Line\n                type=\"monotone\"\n                dataKey=\"appBadRate\"\n                stroke=\"#1890ff\"\n                name=\"APP\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"appletBadRate\"\n                stroke=\"#5cc35c\"\n                name=\"小程序\"\n              /> */}\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            <Card bodyStyle={{padding: '15px'}}>\n              <Row gutter={[10, 0]} align=\"bottom\">\n                <Col>\n                  <div>\n                    <div style={{fontSize: '16px', marginBottom: '5px'}}>\n                      {coreIndexOverdue.productName}\n                    </div>\n                    <div style={{color: '#b0b0b0'}}>\n                      总逾期率\n                      <TooltipAnt title=\"当前逾期单数/当前总放款单数*100\">\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                    </div>\n                    <div style={{fontSize: '24px', fontWeight: 500}}>\n                      {coreIndexOverdue.rate || 0}%\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <Progress\n                    type=\"circle\"\n                    width={66}\n                    percent={coreIndexOverdue.rate || 0}\n                    showInfo={false}\n                    strokeLinecap=\"square\"\n                    strokeWidth=\"16\"\n                  />\n                </Col>\n              </Row>\n            </Card>\n            {coreIndexOverdueAmount.length\n              ? coreIndexOverdueAmount.map((item, i) => {\n                  return (\n                    <Card key={i} bodyStyle={{padding: '15px'}}>\n                      <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                        {item.title}\n                      </span>\n                      <TooltipAnt title={item.tips}>\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                      <div>\n                        <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                          {formatMoney(item.value)}\n                        </span>\n                        <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                      </div>\n                      <div style={{color: '#595858'}}>\n                        {computeUnit(item.value)}\n                      </div>\n                    </Card>\n                  )\n                })\n              : null}\n          </Col>\n        </Row>\n      </Card>\n\n      <Card\n        title=\"当前不良(逾期60+)\"\n        style={{width: '100%', marginTop: '20px'}}\n      >\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              分渠道分日不良率\n              <TooltipAnt title={'统计日当日不良单数/统计日前T-60到期单数'}>\n                <ExclamationCircleOutlined />\n              </TooltipAnt>\n            </h4>\n\n            <ComposedChart\n              width={800}\n              height={360}\n              data={coreIndexBadLoan.coreIndexBadLoanList}\n            >\n              <XAxis dataKey=\"reportTime\" />\n              <YAxis tickFormatter={toBaiFen} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              {Array.isArray(coreIndexBadLoan.channelNames) &&\n                coreIndexBadLoan.channelNames.map((v, i) => {\n                  return (\n                    <Line\n                      key={i}\n                      type=\"monotone\"\n                      dataKey={`channelRateList[${i}].rate`}\n                      stroke={colors[i]}\n                      name={v}\n                    />\n                  )\n                })}\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            <Card bodyStyle={{padding: '15px'}}>\n              <Row gutter={[10, 0]} align=\"bottom\">\n                <Col>\n                  <div>\n                    <div style={{fontSize: '16px', marginBottom: '5px'}}>\n                      {coreIndexBadLoan.productName}\n                    </div>\n                    <div style={{color: '#b0b0b0'}}>\n                      总不良率\n                      <TooltipAnt title=\"当前不良单数（逾期60天以上订单）/当前总放款单数*100\">\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                    </div>\n                    <div style={{fontSize: '24px', fontWeight: 500}}>\n                      {coreIndexBadLoan.rate || 0}%\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <Progress\n                    type=\"circle\"\n                    width={66}\n                    percent={coreIndexBadLoan.rate || 0}\n                    showInfo={false}\n                    strokeLinecap=\"square\"\n                    strokeWidth=\"16\"\n                  />\n                </Col>\n              </Row>\n            </Card>\n            {coreIndexBadLoanAmount.length\n              ? coreIndexBadLoanAmount.map((item, i) => {\n                  return (\n                    <Card key={i} bodyStyle={{padding: '15px'}}>\n                      <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                        {item.title}\n                      </span>\n                      <TooltipAnt title={item.tips}>\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                      <div>\n                        <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                          {formatMoney(item.value)}\n                        </span>\n                        <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                      </div>\n                      <div style={{color: '#595858'}}>\n                        {computeUnit(item.value)}\n                      </div>\n                    </Card>\n                  )\n                })\n              : null}\n          </Col>\n        </Row>\n      </Card>\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  return {}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}