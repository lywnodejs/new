{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { UpOutlined } from '@ant-design/icons';\nimport styles from '../index.less';\nimport { QUALIFI_TYPE, CHECK_REASON } from '~/utils/const';\nvar RangePicker = _DatePicker.RangePicker;\nexport default function (props) {\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(true),\n      collapse = _useState[0],\n      setCollapse = _useState[1];\n\n  var onSearch = function onSearch() {\n    var _form$getFieldsValue = form.getFieldsValue(),\n        time = _form$getFieldsValue.time,\n        values = _objectWithoutProperties(_form$getFieldsValue, [\"time\"]);\n\n    if (time) {\n      var s_time = time[0].format('YYYY-MM-DD');\n      var e_time = time[1].format('YYYY-MM-DD');\n      values.beginCreateTimeString = s_time;\n      values.endCreateTimeString = e_time; // values.beginCreateTime = new Date(s_time)\n      // values.endCreateTime = new Date(e_time)\n    }\n\n    props.search(values);\n  };\n\n  var resetForm = function resetForm() {\n    form.resetFields();\n    onSearch();\n  };\n\n  return __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    flex: \"1 1 0\",\n    className: [styles.searchBoxHeight, collapse ? styles.searchBoxForAll : styles.searchBoxForSome]\n  }, __jsx(_Form, {\n    form: form,\n    name: \"search\",\n    initialValues: {\n      productName: '',\n      reviewType: '',\n      creviewQualification: ''\n    },\n    layout: \"inline\"\n  }, __jsx(_Form.Item, {\n    label: \"\\u624B\\u673A\\u53F7/\\u501F\\u636E\\u53F7\",\n    name: \"keyword\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u7528\\u6237\\u540D\",\n    name: \"realName\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    name: \"productName\",\n    label: \"\\u4EA7\\u54C1\\u540D\"\n  }, __jsx(_Select, {\n    style: {\n      width: 130\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), props.productList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.name\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    name: \"reviewType\",\n    label: \"\\u68C0\\u67E5\\u539F\\u56E0\"\n  }, __jsx(_Select, {\n    style: {\n      width: 130\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), CHECK_REASON.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.key\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    name: \"creviewQualification\",\n    label: \"\\u7EFC\\u5408\\u8D44\\u8D28\"\n  }, __jsx(_Select, {\n    style: {\n      width: 130\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), QUALIFI_TYPE.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.key\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u68C0\\u67E5\\u65E5\\u671F\",\n    name: \"time\"\n  }, __jsx(RangePicker, null)))), __jsx(_Col, {\n    flex: \"200px\"\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      return setCollapse(!collapse);\n    }\n  }, collapse ? '收起' : '展开', \"\\xA0\", __jsx(UpOutlined, {\n    className: collapse ? \"\".concat(styles.collapseTag, \" \").concat(styles.collapseTagUp) : \"\".concat(styles.collapseTag, \" \").concat(styles.collapseTagDown)\n  })))), __jsx(_Space, null, __jsx(_Button, {\n    type: \"primary\",\n    onClick: onSearch\n  }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n    onClick: resetForm\n  }, \"\\u91CD\\u7F6E\")));\n}","map":null,"metadata":{},"sourceType":"module"}