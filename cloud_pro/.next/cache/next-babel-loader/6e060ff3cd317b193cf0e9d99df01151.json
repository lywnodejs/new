{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport apiAccounting from '~/api/accounting';\n\nvar TableList = function TableList(_ref) {\n  var list = _ref.list,\n      onPage = _ref.onPage,\n      pageParams = _ref.pageParams,\n      totalData = _ref.totalData,\n      fetchRecordList = _ref.fetchRecordList,\n      accountList = _ref.accountList;\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(pageParams.pageSize),\n      pageSize = _useState[0],\n      setPageSize = _useState[1];\n\n  var _useState2 = useState(false),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      returnData = _useState3[0],\n      setReturnData = _useState3[1];\n\n  var _useState4 = useState(false),\n      confirmVisible = _useState4[0],\n      setConfirmVisible = _useState4[1];\n\n  var _useState5 = useState([]),\n      timeDate = _useState5[0],\n      setTimeDate = _useState5[1];\n\n  var columns = [{\n    title: '开始日期',\n    dataIndex: 'startDate',\n    key: 'startDate',\n    width: 150\n  }, {\n    title: '结束日期',\n    dataIndex: 'endDate',\n    key: 'endDate',\n    width: 150,\n    render: function render(text, record) {\n      return record.endDate == null ? '-' : record.endDate;\n    }\n  }, {\n    title: '总占用金额',\n    dataIndex: 'totalAmount',\n    key: 'totalAmount',\n    width: 150,\n    render: function render(record) {\n      if (record == null) {\n        return null;\n      } else {\n        var str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '剩余占用金额（元）',\n    dataIndex: 'surplusAmount',\n    key: 'surplusAmount',\n    width: 150,\n    render: function render(record) {\n      if (record == null) {\n        return null;\n      } else {\n        var str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '利率（年）',\n    dataIndex: 'rate',\n    key: 'rate',\n    width: 150,\n    render: function render(record, text) {\n      if (record == 0) {\n        return 0;\n      }\n\n      var str = Number(record).toFixed(3);\n      str += '%';\n      return str;\n    }\n  }, {\n    title: '状态',\n    dataIndex: 'status',\n    key: 'status',\n    width: 150,\n    render: function render(text) {\n      switch (text) {\n        case 1:\n          return '占用中';\n\n        case 2:\n          return '已结束';\n      }\n    }\n  }, {\n    title: '成本（元）',\n    dataIndex: 'cost',\n    key: 'cost',\n    width: 150,\n    render: function render(record) {\n      if (record == null) {\n        return null;\n      } else {\n        var str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '操作',\n    dataIndex: 'cz',\n    key: 'cz',\n    width: 150,\n    render: function render(text, record) {\n      return __jsx(\"a\", {\n        onClick: function onClick() {\n          return findDetail(record);\n        }\n      }, \"\\u67E5\\u770B\\u660E\\u7EC6\");\n    }\n  }];\n\n  var findDetail = function findDetail(record) {\n    var url = \"/accounting/cost/capital/detail?pageSize=10&pageNum=1&moneyCostId=\".concat(record.id);\n    Router.push(url);\n  };\n\n  var onShowSizeChange = function onShowSizeChange(current, pageSize) {\n    console.log(current, pageSize);\n    pageParams.pageSize = pageSize;\n    setPageSize(pageSize);\n  };\n\n  var pagination = {\n    defaultCurrent: 1,\n    total: totalData.total,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(total, \" \\u6761\\u8BB0\\u5F55\");\n    },\n    onChange: function onChange(pageNumber) {\n      pageParams.pageNum = pageNumber;\n      onPage();\n    }\n  };\n\n  var addClick = function addClick() {\n    setVisible(true);\n  };\n\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n  };\n\n  var nextStep = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return form.validateFields();\n\n            case 2:\n              values = _context.sent;\n              setReturnData(values);\n              setConfirmVisible(true);\n              setTimeDate(moment(values.time).format('YYYY-MM-DD'));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function nextStep() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var submitClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var postData, _yield$apiAccounting$, _yield$apiAccounting$2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              postData = {\n                happenDate: timeDate,\n                amount: returnData.amount,\n                rate: returnData.rate,\n                accountType: returnData.payChannelName,\n                account: channelId(returnData.payChannelName)\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return apiAccounting.fetch_record_add(postData);\n\n            case 4:\n              _yield$apiAccounting$ = _context2.sent;\n              _yield$apiAccounting$2 = _yield$apiAccounting$.data;\n              data = _yield$apiAccounting$2.data;\n              code = _yield$apiAccounting$2.code;\n\n              if (code == 0) {\n                _message.success('提交成功');\n\n                setConfirmVisible(false);\n                setVisible(false);\n                fetchRecordList();\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function submitClick() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var channelId = function channelId(payChannelName) {\n    var findOne = accountList.find(function (one) {\n      return one.description == payChannelName;\n    });\n    return findOne ? findOne.code : '';\n  };\n\n  var closeVisible = function closeVisible() {\n    setConfirmVisible(false);\n  };\n\n  return __jsx(_Card, {\n    style: {\n      position: 'relative'\n    }\n  }, \"\\u5F53\\u524D\\u5360\\u7528\\u603B\\u8BA1\\uFF1A\", __jsx(\"span\", null, totalData.remark), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      position: 'absolute',\n      top: 25,\n      right: 23\n    },\n    onClick: addClick\n  }, \"\\u65B0\\u589E\"), __jsx(_Table, {\n    style: {\n      marginTop: 20\n    },\n    rowKey: \"id\",\n    columns: columns,\n    dataSource: list,\n    bordered: true,\n    pagination: pagination,\n    scroll: {\n      y: '100%',\n      x: '100%'\n    }\n  }), __jsx(_Modal, {\n    title: \"\\u65B0\\u589E\\u8D44\\u91D1\\u6210\\u672C\",\n    visible: visible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: handleCancel\n    }, \"\\u53D6\\u6D88\"), __jsx(_Button, {\n      type: \"primary\",\n      onClick: nextStep\n    }, \"\\u4E0B\\u4E00\\u6B65\")],\n    onCancel: function onCancel() {\n      return setVisible(false);\n    }\n  }, __jsx(_Form, {\n    name: form,\n    form: form,\n    style: {\n      marginLeft: 50\n    },\n    initialValues: {\n      happenDate: ''\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u5F00\\u59CB\\u65E5\\u671F\",\n    name: \"time\",\n    rules: [{\n      required: true,\n      message: '请选择开始日期'\n    }]\n  }, __jsx(_DatePicker, {\n    allowClear: true,\n    style: {\n      width: 200\n    }\n  })), __jsx(_Form.Item, {\n    label: \"\\u91D1\\u989D\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\",\n    name: \"amount\",\n    rules: [{\n      required: true,\n      message: '请输入金额'\n    }, function (_ref4) {\n      var getFieldValue = _ref4.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var reg = /^(([0-9]+)|([0-9]+\\.[0-9]{0,2}))$/;\n\n          if (value && !reg.test(value)) {\n            return Promise.reject('请输入大于等于0的数，最多输入12位数，并且最多保留2位小数');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }]\n  }, __jsx(_InputNumber, {\n    style: {\n      width: 200\n    },\n    max: 999999999999\n  })), __jsx(_Form.Item, {\n    label: \"\\u5E74\\u5229\\u7387\\xA0\\xA0\\xA0\",\n    name: \"rate\",\n    rules: [{\n      required: true,\n      message: '请输入年利率'\n    }, function (_ref5) {\n      var getFieldValue = _ref5.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var reg = /^(\\-)?\\d+(\\.\\d{0,6})?$/;\n\n          if (value && !reg.test(value)) {\n            return Promise.reject('请输入数字，并且最多保留6位小数');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }]\n  }, __jsx(_Input, {\n    suffix: \"%\",\n    style: {\n      width: 200\n    }\n  })), __jsx(_Form.Item, {\n    label: \"\\u884C\\u65B9\\u8D26\\u6237\",\n    name: \"payChannelName\",\n    rules: [{\n      required: true,\n      message: '请选择行方账户'\n    }]\n  }, __jsx(_Select, {\n    style: {\n      width: 200\n    }\n  }, accountList.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.description\n    }, v.description);\n  }))))), __jsx(_Modal, {\n    title: \"\\u64CD\\u4F5C\\u786E\\u8BA4\",\n    visible: confirmVisible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: closeVisible\n    }, \"\\u8FD4\\u56DE\\u4FEE\\u6539\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: submitClick\n    }, \"\\u786E\\u8BA4\\u63D0\\u4EA4\")],\n    onCancel: function onCancel() {\n      return setConfirmVisible(false);\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      backgroundColor: '#d1e9ff',\n      color: '#3da2ff',\n      height: 30,\n      margin: '0 auto',\n      paddingTop: 5\n    }\n  }, __jsx(InfoCircleOutlined, {\n    style: {\n      paddingRight: 5\n    }\n  }), \"\\u8BF7\\u786E\\u8BA4\\u4FE1\\u606F\\u662F\\u5426\\u6B63\\u786E\"), __jsx(\"div\", {\n    style: {\n      marginLeft: 40,\n      marginTop: 20\n    }\n  }, __jsx(\"p\", null, \"\\u5F00\\u59CB\\u65E5\\u671F\\uFF1A\", timeDate), __jsx(\"p\", null, \"\\u91D1\\u989D\\uFF1A\", returnData.amount), __jsx(\"p\", null, \"\\u5E74\\u5229\\u7387\\uFF1A\", returnData.rate, \"%\"), __jsx(\"p\", null, \"\\u884C\\u65B9\\u8D26\\u6237\\uFF1A\", returnData.payChannelName))));\n};\n\nexport default TableList;","map":null,"metadata":{},"sourceType":"module"}