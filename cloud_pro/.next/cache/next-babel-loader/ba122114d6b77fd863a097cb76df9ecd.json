{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport TableList from './TableList';\nimport TableTitle from './TableTitle';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useCookies } from 'react-cookie';\nimport { useEffect, useState } from 'react';\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart, ResponsiveContainer, Bar, Area, PieChart, Pie, BarChart, Cell, LineChart } from 'recharts';\nimport { formatMoney, computeUnit } from '~/utils';\nimport api from '~/api/authority';\nimport apiProduct from '~/api/product';\nconst COLORS = ['#1890ff', '#5cc35c', '#fadb14', '#f5222d', '#fa8c16', '#faad14', '#a0d911', '#13c2c2', '#722ed1', '#eb2f96', '#bfbfbf', '#2f54eb'];\nconst data02 = [{\n  name: '家乡贷',\n  value: 400\n}, {\n  name: '随心贷',\n  value: 300\n}, {\n  name: '玉乐贷',\n  value: 300\n}, {\n  name: '众乐贷',\n  value: 200\n}, {\n  name: '公信贷',\n  value: 278\n}];\nconst data = [{\n  name: '1月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '2月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '3月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '4月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '5月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '6月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}, {\n  name: '7月',\n  家乡贷: 4000,\n  随心贷: 2400,\n  玉乐贷: 2400,\n  众乐贷: 2939,\n  公信贷: 2131\n}];\nconst data1 = [{\n  name: 'Group A',\n  value: 400\n}, {\n  name: 'Group B',\n  value: 300\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}]; // const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return __jsx(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\"\n  }, `${(percent * 100).toFixed(0)}%`);\n};\n\nfunction body(props) {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: title,\n    1: setTitle\n  } = useState([]);\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: topIndexDatas,\n    1: setTopIndexDatas\n  } = useState([]);\n  const {\n    0: timingDatas,\n    1: setTimingDatas\n  } = useState([]);\n  const {\n    0: listCoreIndexYear,\n    1: setListCoreIndexYear\n  } = useState([]);\n  const {\n    0: dayAddLoanAmountList,\n    1: setDayAddLoanAmountList\n  } = useState([]);\n  const {\n    0: dayAddLoanBalanceAmountList,\n    1: setDayAddLoanBalanceAmountList\n  } = useState([]);\n  const {\n    0: dayAddInterestAmountList,\n    1: setDayAddInterestAmountList\n  } = useState([]);\n  const {\n    0: dayAddBadLoanAmountList,\n    1: setDayAddBadLoanAmountList\n  } = useState([]);\n  const {\n    0: dayAddLoanUserList,\n    1: setDayAddLoanUserList\n  } = useState([]);\n  const {\n    0: dayAddCumulative,\n    1: setCumulative\n  } = useState([]);\n  const {\n    0: coreIndexYears,\n    1: setCoreIndexYears\n  } = useState([]);\n  const {\n    0: coreIndex,\n    1: setCoreIndex\n  } = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {\n      amount: 0,\n      count: 0,\n      peopleNumber: 0\n    },\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null\n  });\n  const {\n    0: coreIndexBadLoan,\n    1: setCoreIndexBadLoan\n  } = useState({});\n  const {\n    0: coreIndexBadLoanAmount,\n    1: setCoreIndexBadLoanAmount\n  } = useState([]);\n  const {\n    0: coreIndexOverdue,\n    1: setCoreIndexOverdue\n  } = useState({});\n  const {\n    0: coreIndexOverdueAmount,\n    1: setCoreIndexOverdueAmount\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: productId,\n    1: setProductId\n  } = useState('-1');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await apiProduct.get_products({\n          tenantId: cookies.tenantId\n        });\n\n        if (code == 0) {\n          setProductList(data);\n          data && data.length && setProductId(String(data[0].id));\n          fetchIndex(data[0].id);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    let {\n      dayAddLoanAmount,\n      dayAddLoanBalanceAmount,\n      dayAddInterestAmount,\n      dayAddBadLoanAmount,\n      dayAddLoanUser,\n      historyLoanAmount,\n      historyLoanBalanceAmount,\n      historyLoanNum,\n      historyLoanUser,\n      historyInterestAmount,\n      listCoreIndexYear,\n      dayAddLoanAmountList,\n      dayAddLoanBalanceAmountList,\n      dayAddInterestAmountList,\n      dayAddBadLoanAmountList,\n      dayAddLoanUserList,\n      yearBadLoanAmount,\n      yearInterestAmount,\n      yearProfit,\n      coreIndexNowBadLoan,\n      coreIndexNowOverdue\n    } = coreIndex;\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {\n      rate: 0\n    };\n    coreIndexNowOverdue = coreIndexNowOverdue || {\n      rate: 0\n    };\n    setCoreIndexBadLoan(coreIndexNowBadLoan);\n    setCoreIndexOverdue(coreIndexNowOverdue);\n    setListCoreIndexYear(listCoreIndexYear);\n    setDayAddLoanAmountList(dayAddLoanAmountList);\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList);\n    setDayAddInterestAmountList(dayAddInterestAmountList);\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList);\n    setDayAddLoanUserList(dayAddLoanUserList);\n    setCoreIndexBadLoanAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowBadLoan.amount || 0,\n      tips: '不良订单的剩余贷款余额（本金部分）'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowBadLoan.count || 0,\n      tips: '订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowBadLoan.peopleNumber || 0,\n      tips: '用户的人数'\n    }]);\n    setCoreIndexOverdueAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowOverdue.amount || 0,\n      tips: '逾期订单的逾期期数本金之和'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowOverdue.count || 0,\n      tips: '逾期订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowOverdue.peopleNumber || 0,\n      tips: '用户的人数'\n    }]); // setTopIndexDatas([\n    //   {\n    //     title: '当日新增(放款金额)',\n    //     tips: '当日放款金额的累计',\n    //     unit: '元',\n    //     value: dayAddLoanAmount,\n    //   },\n    //   {\n    //     title: '当日净增 (贷款余额)',\n    //     tips: '当日放款金额-当日还款金额',\n    //     unit: '元',\n    //     value: dayAddLoanBalanceAmount,\n    //   },\n    //   {\n    //     title: '当日实收利息',\n    //     tips: '当日结息金额',\n    //     unit: '元',\n    //     value: dayAddInterestAmount,\n    //   },\n    //   {\n    //     title: '当日新增(60+不良本金)',\n    //     tips: '当日新增的不良（逾期60+）本金',\n    //     unit: '元',\n    //     value: dayAddBadLoanAmount,\n    //   },\n    //   {\n    //     title: '当日新增（放款用户）',\n    //     tips: '当日放款用户数的累计',\n    //     unit: '人',\n    //     value: dayAddLoanUser,\n    //   },\n    // ])\n\n    setTimingDatas([// {\n    //   title: '累放金额',\n    //   tips: '历史放款本金金额累计',\n    //   unit: '元',\n    //   value: historyLoanAmount,\n    // },\n    // {\n    //   title: '贷款余额',\n    //   tips: '所有在途订单(含逾期)的剩余待还本金之和',\n    //   unit: '元',\n    //   value: historyLoanBalanceAmount,\n    // },\n    // {\n    //   title: '累放笔数',\n    //   tips: '历史所有用户放款笔数',\n    //   unit: '笔',\n    //   value: historyLoanNum,\n    // },\n    // {\n    //   title: '累放用户数',\n    //   tips: '历史放款用户数',\n    //   unit: '人',\n    //   value: historyLoanUser,\n    // },\n    // {\n    //   title: '实收息费（包含利息罚息）',\n    //   tips: '利息+罚息',\n    //   unit: '元',\n    //   value: historyInterestAmount,\n    // },\n    {\n      title: '申请笔数',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '授信笔数',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '授信金额',\n      unit: '元',\n      value: ''\n    }, {\n      title: '用信金额',\n      unit: '元',\n      value: ''\n    }, {\n      title: '用信笔数',\n      unit: '笔',\n      value: ''\n    }]);\n    setCumulative([{\n      title: '家乡贷申请笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '家乡贷授信笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '家乡贷信用笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '家乡贷用信余额',\n      tips: '',\n      unit: '元',\n      value: ''\n    }, {\n      title: '随心贷申请笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '随心贷授信笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '随心贷用信笔数',\n      tips: '',\n      unit: '笔',\n      value: ''\n    }, {\n      title: '随心贷用信余额',\n      tips: '',\n      unit: '元',\n      value: ''\n    }]);\n    setCoreIndexYears([{\n      title: '年度利润率（未剔除获客成本）',\n      tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n      unit: '',\n      value: yearProfit\n    }, {\n      title: '年度实收利息',\n      tips: '当前年内的结息之和',\n      unit: '元',\n      value: yearInterestAmount\n    }, {\n      title: '年度净不良本金（60+）',\n      tips: '当前年内的不良本金之和',\n      unit: '元',\n      value: yearBadLoanAmount\n    }]);\n  }, [coreIndex]);\n\n  const fetchIndex = async id => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.get_core_index({\n        productId: id\n      });\n\n      if (code == 0 && data) {\n        setCoreIndex(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const toWan = (decimal, fixed = 0) => `${(decimal / 10000).toFixed(fixed)}万`;\n\n  const toBaiFen = (decimal, fixed = 0) => `${decimal}%`;\n\n  const changeProduct = val => {\n    setProductId(val);\n    fetchIndex(val);\n  };\n\n  return __jsx(Layout, {\n    isGray: true\n  }, __jsx(_Card, {\n    title: \"\\u5F53\\u65E5\\u6C47\\u603B\\u6570\\u636E\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, {\n    gutter: [30, 0]\n  }, timingDatas.length ? timingDatas.map((item, i) => __jsx(_Col, {\n    span: 4.6,\n    key: i\n  }, __jsx(_Card, {\n    bordered: false\n  }, __jsx(\"span\", {\n    style: {\n      color: '#b0b0b0',\n      marginRight: '8px'\n    }\n  }, item.title), __jsx(_Tooltip, {\n    title: item.tips\n  }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n    style: {\n      fontSize: '26px',\n      fontWeight: 'bold'\n    }\n  }, formatMoney(item.value)), __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, item.unit)), __jsx(\"div\", {\n    style: {\n      color: '#595858',\n      height: '22px'\n    }\n  }, computeUnit(item.value))))) : null)), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '50px',\n      marginTop: '20px',\n      background: '#FFFFFF',\n      padding: '15px 20px',\n      fontSize: '16px'\n    }\n  }, \"\\u4E0A\\u4E00\\u65E5\\u6C47\\u603B\\u6570\\u636E\"), __jsx(_Row, null, __jsx(_Col, {\n    span: 12\n  }, __jsx(_Card, {\n    title: \"\\u4E0A\\u4E00\\u65E5\\u6388\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '99%',\n      marginTop: '10px'\n    }\n  }, __jsx(PieChart, {\n    width: 430,\n    height: 300\n  }, __jsx(Pie, {\n    data: data02,\n    cx: \"50%\",\n    cy: \"40%\",\n    outerRadius: 100,\n    nameKey: \"name\",\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    label: true\n  }, data02.map((entry, index) => __jsx(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length]\n  }))), __jsx(Tooltip, null), __jsx(Legend, null)))), __jsx(_Col, {\n    span: 12\n  }, __jsx(_Card, {\n    title: \"\\u4E0A\\u4E00\\u65E5\\u7528\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '99%',\n      marginTop: '10px'\n    }\n  }, __jsx(BarChart, {\n    width: 450,\n    height: 300,\n    data: data02\n  }, __jsx(XAxis, {\n    dataKey: \"name\"\n  }), __jsx(YAxis, {\n    type: \"number\",\n    scale: \"band\"\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }))))), __jsx(TableList, {\n    list,\n    setList\n  }), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '50px',\n      marginTop: '20px',\n      background: '#FFFFFF',\n      padding: '15px 20px',\n      fontSize: '16px'\n    }\n  }, \"\\u5386\\u53F2\\u6570\\u636E\\u6C47\\u603B\"), __jsx(_Card, {\n    title: \"\\u5386\\u53F2\\u7D2F\\u8BA1\\u4FE1\\u7528\\u4F59\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(ComposedChart, {\n    width: 980,\n    height: 240,\n    data: dayAddLoanAmountList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toWan\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#1890ff\",\n    name: \"\\u7533\\u8BF7\\u7B14\\u6570\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#5cc35c\",\n    name: \"\\u6388\\u4FE1\\u7B14\\u6570\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#6EC3C9\",\n    name: \"\\u6388\\u4FE1\\u91D1\\u989D\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#67BF7F\",\n    name: \"\\u7528\\u4FE1\\u7B14\\u6570 \"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"amount\",\n    barSize: 16,\n    stroke: \"#A2007C\",\n    name: \" \\u7528\\u4FE1\\u91D1\\u989D \"\n  }))), __jsx(_Card, {\n    title: \"\\u5386\\u53F2\\u7D2F\\u8BA1\\u6388\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(BarChart, {\n    width: 980,\n    height: 300,\n    data: data\n  }, __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(XAxis, {\n    dataKey: \"name\"\n  }), __jsx(YAxis, null), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(Bar, {\n    dataKey: \"\\u5BB6\\u4E61\\u8D37\",\n    fill: \"#5072CB\",\n    style: {\n      bottom: '-10px'\n    }\n  }), __jsx(Bar, {\n    dataKey: \"\\u968F\\u5FC3\\u8D37\",\n    fill: \"#8DD06F\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u7389\\u4E50\\u8D37\",\n    fill: \"#F8C558\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u4F17\\u4E50\\u8D37\",\n    fill: \"#F26665\"\n  }), __jsx(Bar, {\n    dataKey: \"\\u516C\\u4FE1\\u8D37\",\n    fill: \"#74BFDE\"\n  }))), __jsx(_Card, {\n    title: \"\\u5386\\u53F2\\u7D2F\\u8BA1\\u7528\\u4FE1\\u91D1\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '20px'\n    }\n  }, \"\\u7D2F\\u8BA1\\u7528\\u4FE1\\u91D1\\u989D\"), __jsx(PieChart, {\n    width: 960,\n    height: 400\n  }, __jsx(Pie, {\n    data: data02,\n    cx: \"50%\",\n    cy: \"45%\",\n    outerRadius: 150,\n    nameKey: \"name\",\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    label: true\n  }, data02.map((entry, index) => __jsx(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length]\n  }))), __jsx(Tooltip, null), __jsx(Legend, null))), __jsx(TableTitle, {\n    title,\n    setTitle\n  }));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/dashboard/index.js"],"names":["Layout","TableList","TableTitle","ExclamationCircleOutlined","useCookies","useEffect","useState","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ComposedChart","ResponsiveContainer","Bar","Area","PieChart","Pie","BarChart","Cell","LineChart","formatMoney","computeUnit","api","apiProduct","COLORS","data02","name","value","data","家乡贷","随心贷","玉乐贷","众乐贷","公信贷","data1","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","body","props","list","setList","title","setTitle","cookies","topIndexDatas","setTopIndexDatas","timingDatas","setTimingDatas","listCoreIndexYear","setListCoreIndexYear","dayAddLoanAmountList","setDayAddLoanAmountList","dayAddLoanBalanceAmountList","setDayAddLoanBalanceAmountList","dayAddInterestAmountList","setDayAddInterestAmountList","dayAddBadLoanAmountList","setDayAddBadLoanAmountList","dayAddLoanUserList","setDayAddLoanUserList","dayAddCumulative","setCumulative","coreIndexYears","setCoreIndexYears","coreIndex","setCoreIndex","dayAddLoanAmount","dayAddLoanBalanceAmount","dayAddInterestAmount","dayAddBadLoanAmount","dayAddLoanUser","historyLoanAmount","historyLoanBalanceAmount","historyLoanNum","historyLoanUser","historyInterestAmount","yearBadLoanAmount","yearInterestAmount","yearProfit","coreIndexNowBadLoan","amount","count","peopleNumber","coreIndexNowOverdue","yearMonth","reportTime","coreIndexBadLoan","setCoreIndexBadLoan","coreIndexBadLoanAmount","setCoreIndexBadLoanAmount","coreIndexOverdue","setCoreIndexOverdue","coreIndexOverdueAmount","setCoreIndexOverdueAmount","productList","setProductList","productId","setProductId","fetchData","code","get_products","tenantId","length","String","id","fetchIndex","error","console","log","rate","unit","tips","get_core_index","err","toWan","decimal","fixed","toBaiFen","changeProduct","val","width","marginTop","map","item","i","color","marginRight","fontSize","fontWeight","height","background","padding","entry","bottom","textAlign","getInitialProps"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport {\n  message,\n  Card,\n  Row,\n  Col,\n  Tooltip as TooltipAnt,\n  Progress,\n  Select,\n} from 'antd'\nimport TableList from './TableList'\nimport TableTitle from './TableTitle'\n\nimport {ExclamationCircleOutlined} from '@ant-design/icons'\nimport {useCookies} from 'react-cookie'\nimport {useEffect, useState} from 'react'\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ComposedChart,\n  ResponsiveContainer,\n  Bar,\n  Area,\n  PieChart,\n  Pie,\n  BarChart,\n  Cell,\n  LineChart,\n} from 'recharts'\nimport {formatMoney, computeUnit} from '~/utils'\nimport api from '~/api/authority'\nimport apiProduct from '~/api/product'\n\nconst COLORS = [\n  '#1890ff',\n  '#5cc35c',\n  '#fadb14',\n  '#f5222d',\n  '#fa8c16',\n  '#faad14',\n  '#a0d911',\n  '#13c2c2',\n  '#722ed1',\n  '#eb2f96',\n  '#bfbfbf',\n  '#2f54eb',\n]\nconst data02 = [\n  {\n    name: '家乡贷',\n    value: 400,\n  },\n  {\n    name: '随心贷',\n    value: 300,\n  },\n  {\n    name: '玉乐贷',\n    value: 300,\n  },\n  {\n    name: '众乐贷',\n    value: 200,\n  },\n  {\n    name: '公信贷',\n    value: 278,\n  },\n]\nconst data = [\n  {\n    name: '1月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n  {\n    name: '2月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n  {\n    name: '3月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n  {\n    name: '4月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n  {\n    name: '5月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n  {\n    name: '6月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n  {\n    name: '7月',\n    家乡贷: 4000,\n    随心贷: 2400,\n    玉乐贷: 2400,\n    众乐贷: 2939,\n    公信贷: 2131,\n  },\n]\n\nconst data1 = [\n  {name: 'Group A', value: 400},\n  {name: 'Group B', value: 300},\n  {name: 'Group C', value: 300},\n  {name: 'Group D', value: 200},\n]\n\n// const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5\n  const x = cx + radius * Math.cos(-midAngle * RADIAN)\n  const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? 'start' : 'end'}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  )\n}\nfunction body(props) {\n  const [list, setList] = useState([])\n  const [title, setTitle] = useState([])\n\n  const [cookies] = useCookies(['tenantId'])\n  const [topIndexDatas, setTopIndexDatas] = useState([])\n  const [timingDatas, setTimingDatas] = useState([])\n  const [listCoreIndexYear, setListCoreIndexYear] = useState([])\n  const [dayAddLoanAmountList, setDayAddLoanAmountList] = useState([])\n  const [\n    dayAddLoanBalanceAmountList,\n    setDayAddLoanBalanceAmountList,\n  ] = useState([])\n  const [dayAddInterestAmountList, setDayAddInterestAmountList] = useState([])\n  const [dayAddBadLoanAmountList, setDayAddBadLoanAmountList] = useState([])\n  const [dayAddLoanUserList, setDayAddLoanUserList] = useState([])\n\n  const [dayAddCumulative, setCumulative] = useState([])\n\n  const [coreIndexYears, setCoreIndexYears] = useState([])\n  const [coreIndex, setCoreIndex] = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {amount: 0, count: 0, peopleNumber: 0},\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null,\n  })\n  const [coreIndexBadLoan, setCoreIndexBadLoan] = useState({})\n  const [coreIndexBadLoanAmount, setCoreIndexBadLoanAmount] = useState([])\n  const [coreIndexOverdue, setCoreIndexOverdue] = useState({})\n  const [coreIndexOverdueAmount, setCoreIndexOverdueAmount] = useState([])\n  const [productList, setProductList] = useState([])\n  const [productId, setProductId] = useState('-1')\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {data, code},\n        } = await apiProduct.get_products({tenantId: cookies.tenantId})\n        if (code == 0) {\n          setProductList(data)\n          data && data.length && setProductId(String(data[0].id))\n          fetchIndex(data[0].id)\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    let {\n      dayAddLoanAmount,\n      dayAddLoanBalanceAmount,\n      dayAddInterestAmount,\n      dayAddBadLoanAmount,\n      dayAddLoanUser,\n      historyLoanAmount,\n      historyLoanBalanceAmount,\n      historyLoanNum,\n      historyLoanUser,\n      historyInterestAmount,\n      listCoreIndexYear,\n      dayAddLoanAmountList,\n      dayAddLoanBalanceAmountList,\n      dayAddInterestAmountList,\n      dayAddBadLoanAmountList,\n      dayAddLoanUserList,\n      yearBadLoanAmount,\n      yearInterestAmount,\n      yearProfit,\n      coreIndexNowBadLoan,\n      coreIndexNowOverdue,\n    } = coreIndex\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {rate: 0}\n    coreIndexNowOverdue = coreIndexNowOverdue || {rate: 0}\n    setCoreIndexBadLoan(coreIndexNowBadLoan)\n    setCoreIndexOverdue(coreIndexNowOverdue)\n    setListCoreIndexYear(listCoreIndexYear)\n    setDayAddLoanAmountList(dayAddLoanAmountList)\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList)\n    setDayAddInterestAmountList(dayAddInterestAmountList)\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList)\n    setDayAddLoanUserList(dayAddLoanUserList)\n\n    setCoreIndexBadLoanAmount([\n      {\n        title: '总本金',\n        unit: '元',\n        value: coreIndexNowBadLoan.amount || 0,\n        tips: '不良订单的剩余贷款余额（本金部分）',\n      },\n      {\n        title: '总笔数',\n        unit: '笔',\n        value: coreIndexNowBadLoan.count || 0,\n        tips: '订单的笔数',\n      },\n      {\n        title: '总客户数',\n        unit: '人',\n        value: coreIndexNowBadLoan.peopleNumber || 0,\n        tips: '用户的人数',\n      },\n    ])\n    setCoreIndexOverdueAmount([\n      {\n        title: '总本金',\n        unit: '元',\n        value: coreIndexNowOverdue.amount || 0,\n        tips: '逾期订单的逾期期数本金之和',\n      },\n      {\n        title: '总笔数',\n        unit: '笔',\n        value: coreIndexNowOverdue.count || 0,\n        tips: '逾期订单的笔数',\n      },\n      {\n        title: '总客户数',\n        unit: '人',\n        value: coreIndexNowOverdue.peopleNumber || 0,\n        tips: '用户的人数',\n      },\n    ])\n    // setTopIndexDatas([\n    //   {\n    //     title: '当日新增(放款金额)',\n    //     tips: '当日放款金额的累计',\n    //     unit: '元',\n    //     value: dayAddLoanAmount,\n    //   },\n    //   {\n    //     title: '当日净增 (贷款余额)',\n    //     tips: '当日放款金额-当日还款金额',\n    //     unit: '元',\n    //     value: dayAddLoanBalanceAmount,\n    //   },\n    //   {\n    //     title: '当日实收利息',\n    //     tips: '当日结息金额',\n    //     unit: '元',\n    //     value: dayAddInterestAmount,\n    //   },\n    //   {\n    //     title: '当日新增(60+不良本金)',\n    //     tips: '当日新增的不良（逾期60+）本金',\n    //     unit: '元',\n    //     value: dayAddBadLoanAmount,\n    //   },\n    //   {\n    //     title: '当日新增（放款用户）',\n    //     tips: '当日放款用户数的累计',\n    //     unit: '人',\n    //     value: dayAddLoanUser,\n    //   },\n    // ])\n\n    setTimingDatas([\n      // {\n      //   title: '累放金额',\n      //   tips: '历史放款本金金额累计',\n      //   unit: '元',\n      //   value: historyLoanAmount,\n      // },\n      // {\n      //   title: '贷款余额',\n      //   tips: '所有在途订单(含逾期)的剩余待还本金之和',\n      //   unit: '元',\n      //   value: historyLoanBalanceAmount,\n      // },\n      // {\n      //   title: '累放笔数',\n      //   tips: '历史所有用户放款笔数',\n      //   unit: '笔',\n      //   value: historyLoanNum,\n      // },\n      // {\n      //   title: '累放用户数',\n      //   tips: '历史放款用户数',\n      //   unit: '人',\n      //   value: historyLoanUser,\n      // },\n      // {\n      //   title: '实收息费（包含利息罚息）',\n      //   tips: '利息+罚息',\n      //   unit: '元',\n      //   value: historyInterestAmount,\n      // },\n      {\n        title: '申请笔数',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '授信笔数',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '授信金额',\n        unit: '元',\n        value: '',\n      },\n      {\n        title: '用信金额',\n        unit: '元',\n        value: '',\n      },\n      {\n        title: '用信笔数',\n        unit: '笔',\n        value: '',\n      },\n    ])\n    setCumulative([\n      {\n        title: '家乡贷申请笔数',\n        tips: '',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '家乡贷授信笔数',\n        tips: '',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '家乡贷信用笔数',\n        tips: '',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '家乡贷用信余额',\n        tips: '',\n        unit: '元',\n        value: '',\n      },\n      {\n        title: '随心贷申请笔数',\n        tips: '',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '随心贷授信笔数',\n        tips: '',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '随心贷用信笔数',\n        tips: '',\n        unit: '笔',\n        value: '',\n      },\n      {\n        title: '随心贷用信余额',\n        tips: '',\n        unit: '元',\n        value: '',\n      },\n    ])\n    setCoreIndexYears([\n      {\n        title: '年度利润率（未剔除获客成本）',\n        tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n        unit: '',\n        value: yearProfit,\n      },\n      {\n        title: '年度实收利息',\n        tips: '当前年内的结息之和',\n        unit: '元',\n        value: yearInterestAmount,\n      },\n      {\n        title: '年度净不良本金（60+）',\n        tips: '当前年内的不良本金之和',\n        unit: '元',\n        value: yearBadLoanAmount,\n      },\n    ])\n  }, [coreIndex])\n  const fetchIndex = async (id) => {\n    try {\n      const {\n        data: {data, code},\n      } = await api.get_core_index({\n        productId: id,\n      })\n      if (code == 0 && data) {\n        setCoreIndex(data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const toWan = (decimal, fixed = 0) => `${(decimal / 10000).toFixed(fixed)}万`\n  const toBaiFen = (decimal, fixed = 0) => `${decimal}%`\n  const changeProduct = (val) => {\n    setProductId(val)\n    fetchIndex(val)\n  }\n  return (\n    <Layout isGray={true}>\n      <Card title=\"当日汇总数据\" style={{width: '100%', marginTop: '20px'}}>\n        <Row gutter={[30, 0]}>\n          {timingDatas.length\n            ? timingDatas.map((item, i) => (\n                <Col span={4.6} key={i}>\n                  <Card bordered={false}>\n                    <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                      {item.title}\n                    </span>\n                    <TooltipAnt title={item.tips}>\n                      <ExclamationCircleOutlined />\n                    </TooltipAnt>\n                    <div>\n                      <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                        {formatMoney(item.value)}\n                      </span>\n                      <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                    </div>\n                    <div style={{color: '#595858', height: '22px'}}>\n                      {computeUnit(item.value)}\n                    </div>\n                  </Card>\n                </Col>\n              ))\n            : null}\n        </Row>\n      </Card>\n\n      <div\n        style={{\n          width: '100%',\n          height: '50px',\n          marginTop: '20px',\n          background: '#FFFFFF',\n          padding: '15px 20px',\n          fontSize: '16px',\n        }}\n      >\n        上一日汇总数据\n      </div>\n\n      <Row>\n        <Col span={12}>\n          <Card\n            title=\"上一日授信金额\"\n            style={{width: '99%', marginTop: '10px'}}\n          >\n            <PieChart width={430} height={300}>\n              <Pie\n                data={data02}\n                cx=\"50%\"\n                cy=\"40%\"\n                outerRadius={100}\n                nameKey=\"name\"\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                label\n              >\n                {data02.map((entry, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </Card>\n        </Col>\n\n        <Col span={12}>\n          <Card\n            title=\"上一日用信金额\"\n            style={{width: '99%', marginTop: '10px'}}\n          >\n            <BarChart width={450} height={300} data={data02}>\n              <XAxis dataKey=\"name\" />\n              <YAxis type=\"number\" scale=\"band\" />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            </BarChart>\n          </Card>\n        </Col>\n      </Row>\n\n      <TableList\n        {...{\n          list,\n          setList,\n        }}\n      />\n\n      <div\n        style={{\n          width: '100%',\n          height: '50px',\n          marginTop: '20px',\n          background: '#FFFFFF',\n          padding: '15px 20px',\n          fontSize: '16px',\n        }}\n      >\n        历史数据汇总\n      </div>\n\n      <Card\n        title=\"历史累计信用余额\"\n        style={{width: '100%', marginTop: '20px'}}\n        bodyStyle={{padding: '24px 24px 10px'}}\n      >\n        <ComposedChart width={980} height={240} data={dayAddLoanAmountList}>\n          <XAxis dataKey=\"reportTime\" />\n          <YAxis tickFormatter={toWan} />\n          <Tooltip />\n          <Legend />\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            barSize={16}\n            stroke=\"#1890ff\"\n            name=\"申请笔数\"\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            barSize={16}\n            stroke=\"#5cc35c\"\n            name=\"授信笔数\"\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            barSize={16}\n            stroke=\"#6EC3C9\"\n            name=\"授信金额\"\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            barSize={16}\n            stroke=\"#67BF7F\"\n            name=\"用信笔数 \"\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            barSize={16}\n            stroke=\"#A2007C\"\n            name=\" 用信金额 \"\n          />\n        </ComposedChart>\n      </Card>\n\n      <Card\n        title=\"历史累计授信金额\"\n        style={{width: '100%', marginTop: '20px'}}\n        bodyStyle={{padding: '24px 24px 10px'}}\n      >\n        <BarChart width={980} height={300} data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n\n          <Legend />\n          <Bar dataKey=\"家乡贷\" fill=\"#5072CB\" style={{bottom: '-10px'}} />\n          <Bar dataKey=\"随心贷\" fill=\"#8DD06F\" />\n          <Bar dataKey=\"玉乐贷\" fill=\"#F8C558\" />\n          <Bar dataKey=\"众乐贷\" fill=\"#F26665\" />\n          <Bar dataKey=\"公信贷\" fill=\"#74BFDE\" />\n        </BarChart>\n      </Card>\n\n      <Card\n        title=\"历史累计用信金额\"\n        style={{width: '100%', marginTop: '20px'}}\n        bodyStyle={{padding: '24px 24px 10px'}}\n      >\n        <h4 style={{textAlign: 'center', fontSize: '20px'}}>累计用信金额</h4>\n\n        <PieChart width={960} height={400}>\n          <Pie\n            data={data02}\n            cx=\"50%\"\n            cy=\"45%\"\n            outerRadius={150}\n            nameKey=\"name\"\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            label\n          >\n            {data02.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend />\n        </PieChart>\n      </Card>\n\n      <TableTitle\n        {...{\n          title,\n          setTitle,\n        }}\n      />\n\n      {/* <Card\n        title=\"上一日新增用信金额\"\n        style={{width: '100%', marginTop: '0px'}}\n        bodyStyle={{padding: '24px 24px 10px'}}\n      >\n        <ComposedChart width={980} height={240} data={dayAddLoanAmountList}>\n          <XAxis dataKey=\"reportTime\" />\n          <YAxis tickFormatter={toWan} />\n          <Tooltip />\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <Bar\n            dataKey=\"amount\"\n            barSize={16}\n            fill=\"#1890ff\"\n            name=\"新增放款金额\"\n          />\n        </ComposedChart>\n      </Card> */}\n\n      {/* <Row gutter={[30, 0]} style={{marginLeft: 0}}>\n        {topIndexDatas.length\n          ? topIndexDatas.slice(0, 1).map((item, i) => (\n              <Col span={5} key={i} style={{paddingLeft: i == 0 ? 0 : null}}>\n                <Card bodyStyle={{padding: '12px 24px'}}>\n                  <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                    {item.title}\n                  </span>\n                  <TooltipAnt title={item.tips}>\n                    <ExclamationCircleOutlined />\n                  </TooltipAnt>\n                  <div>\n                    <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                      {formatMoney(item.value)}\n                    </span>\n                    <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                  </div>\n                  <div style={{color: '#595858'}}>\n                    {computeUnit(item.value)}\n                  </div>\n                </Card>\n              </Col>\n            ))\n          : null}\n        <Col span={19} style={{textAlign: 'right'}}>\n          <div style={{margin: '20px 0 20px'}}>\n            <Select\n              style={{width: '130px'}}\n              onChange={(val) => changeProduct(val)}\n              value={\n                productList.find((v) => v.id == productId) &&\n                productList.find((v) => v.id == productId).name\n              }\n            >\n              {productList.map((v, i) => (\n                <Select.Option key={i} value={v.id}>\n                  {v.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div>数据更新时间：{coreIndex.reportTime}</div>\n        </Col>\n      </Row> */}\n\n      {/* <Row gutter={[30, 0]} style={{marginLeft: 0}}>\n        {topIndexDatas.length\n          ? topIndexDatas.slice(1).map((item, i) => (\n              <Col\n                span={6}\n                key={i}\n                style={{\n                  paddingLeft: i == 0 ? 0 : null,\n                  paddingRight: i != topIndexDatas.length - 2 ? 0 : '15px',\n                }}\n              >\n                <Card>\n                  <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                    {item.title}\n                  </span>\n                  <TooltipAnt title={item.tips}>\n                    <ExclamationCircleOutlined />\n                  </TooltipAnt>\n                  <div>\n                    <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                      {formatMoney(item.value)}\n                    </span>\n                    <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                  </div>\n                  <div style={{color: '#595858', height: '22px'}}>\n                    {computeUnit(item.value)}\n                  </div>\n                  <div>\n                    {(function () {\n                      if (i == 0) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddLoanBalanceAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <Area\n                              type=\"monotone\"\n                              dataKey=\"amount\"\n                              fill=\"#d9f5f8\"\n                              stroke=\"#79dbe6\"\n                            />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 1) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddInterestAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n\n                            <Bar dataKey=\"amount\" barSize={10} fill=\"#1890ff\" />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 2) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddBadLoanAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n\n                            <Bar dataKey=\"amount\" barSize={10} fill=\"#1890ff\" />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 3) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddLoanUserList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <Area\n                              type=\"monotone\"\n                              dataKey=\"amount\"\n                              fill=\"#d9f5f8\"\n                              stroke=\"#79dbe6\"\n                            />\n                          </ComposedChart>\n                        )\n                      }\n                    })()}\n                  </div>\n                </Card>\n              </Col>\n            ))\n          : null}\n      </Row> */}\n\n      {/* <Card title=\"年度指标\" style={{width: '100%', marginTop: '20px'}}>\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              年日均余额及日均余额\n              <span style={{position: 'absolute', right: 0, top: '5px'}}>\n                {coreIndex.yearMonth}月\n              </span>\n            </h4>\n\n            <ComposedChart width={800} height={360} data={listCoreIndexYear}>\n              <XAxis dataKey=\"day\" />\n              <YAxis tickFormatter={toWan} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              <Bar\n                dataKey=\"dailyAmount\"\n                barSize={20}\n                fill=\"#1890ff\"\n                name=\"日均余额\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"yearDailyAmount\"\n                stroke=\"#5cc35c\"\n                name=\"年日均余额\"\n              />\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            {coreIndexYears.length\n              ? coreIndexYears.map((item, i) => (\n                  <Card key={i}>\n                    <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                      {item.title}\n                    </span>\n                    <TooltipAnt title={item.tips}>\n                      <ExclamationCircleOutlined />\n                    </TooltipAnt>\n                    <div>\n                      <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                        {formatMoney(item.value)}\n                      </span>\n                      <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                    </div>\n                    <div style={{color: '#595858'}}>\n                      {computeUnit(item.value)}\n                    </div>\n                  </Card>\n                ))\n              : null}\n          </Col>\n        </Row>\n      </Card> */}\n      {/* <Card title=\"当前逾期\" style={{width: '100%', marginTop: '20px'}}>\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              分渠道分日逾期率\n              <TooltipAnt title={'统计日当日入逾期单数/统计日前日到期单数'}>\n                <ExclamationCircleOutlined />\n              </TooltipAnt>\n            </h4>\n\n            <ComposedChart\n              width={800}\n              height={360}\n              data={coreIndexOverdue.coreIndexBadLoanList}\n            >\n              <XAxis dataKey=\"reportTime\" />\n              <YAxis tickFormatter={toBaiFen} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              {Array.isArray(coreIndexOverdue.channelNames) &&\n                coreIndexOverdue.channelNames.map((v, i) => {\n                  return (\n                    <Line\n                      key={i}\n                      type=\"monotone\"\n                      dataKey={`channelRateList[${i}].rate`}\n                      stroke={colors[i]}\n                      name={v}\n                    />\n                  )\n                })}\n              <Line\n                type=\"monotone\"\n                dataKey=\"appBadRate\"\n                stroke=\"#1890ff\"\n                name=\"APP\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"appletBadRate\"\n                stroke=\"#5cc35c\"\n                name=\"小程序\"\n              />\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            <Card bodyStyle={{padding: '15px'}}>\n              <Row gutter={[10, 0]} align=\"bottom\">\n                <Col>\n                  <div>\n                    <div style={{fontSize: '16px', marginBottom: '5px'}}>\n                      {coreIndexOverdue.productName}\n                    </div>\n                    <div style={{color: '#b0b0b0'}}>\n                      总逾期率\n                      <TooltipAnt title=\"当前逾期单数/当前总放款单数*100\">\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                    </div>\n                    <div style={{fontSize: '24px', fontWeight: 500}}>\n                      {coreIndexOverdue.rate || 0}%\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <Progress\n                    type=\"circle\"\n                    width={66}\n                    percent={coreIndexOverdue.rate || 0}\n                    showInfo={false}\n                    strokeLinecap=\"square\"\n                    strokeWidth=\"16\"\n                  />\n                </Col>\n              </Row>\n            </Card>\n            {coreIndexOverdueAmount.length\n              ? coreIndexOverdueAmount.map((item, i) => {\n                  return (\n                    <Card key={i} bodyStyle={{padding: '15px'}}>\n                      <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                        {item.title}\n                      </span>\n                      <TooltipAnt title={item.tips}>\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                      <div>\n                        <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                          {formatMoney(item.value)}\n                        </span>\n                        <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                      </div>\n                      <div style={{color: '#595858'}}>\n                        {computeUnit(item.value)}\n                      </div>\n                    </Card>\n                  )\n                })\n              : null}\n          </Col>\n        </Row>\n      </Card> */}\n\n      {/* <Card\n        title=\"当前不良(逾期60+)\"\n        style={{width: '100%', marginTop: '20px'}}\n      >\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              分渠道分日不良率\n              <TooltipAnt title={'统计日当日不良单数/统计日前T-60到期单数'}>\n                <ExclamationCircleOutlined />\n              </TooltipAnt>\n            </h4>\n\n            <ComposedChart\n              width={800}\n              height={360}\n              data={coreIndexBadLoan.coreIndexBadLoanList}\n            >\n              <XAxis dataKey=\"reportTime\" />\n              <YAxis tickFormatter={toBaiFen} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              {Array.isArray(coreIndexBadLoan.channelNames) &&\n                coreIndexBadLoan.channelNames.map((v, i) => {\n                  return (\n                    <Line\n                      key={i}\n                      type=\"monotone\"\n                      dataKey={`channelRateList[${i}].rate`}\n                      stroke={colors[i]}\n                      name={v}\n                    />\n                  )\n                })}\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            <Card bodyStyle={{padding: '15px'}}>\n              <Row gutter={[10, 0]} align=\"bottom\">\n                <Col>\n                  <div>\n                    <div style={{fontSize: '16px', marginBottom: '5px'}}>\n                      {coreIndexBadLoan.productName}\n                    </div>\n                    <div style={{color: '#b0b0b0'}}>\n                      总不良率\n                      <TooltipAnt title=\"当前不良单数（逾期60天以上订单）/当前总放款单数*100\">\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                    </div>\n                    <div style={{fontSize: '24px', fontWeight: 500}}>\n                      {coreIndexBadLoan.rate || 0}%\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <Progress\n                    type=\"circle\"\n                    width={66}\n                    percent={coreIndexBadLoan.rate || 0}\n                    showInfo={false}\n                    strokeLinecap=\"square\"\n                    strokeWidth=\"16\"\n                  />\n                </Col>\n              </Row>\n            </Card>\n            {coreIndexBadLoanAmount.length\n              ? coreIndexBadLoanAmount.map((item, i) => {\n                  return (\n                    <Card key={i} bodyStyle={{padding: '15px'}}>\n                      <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                        {item.title}\n                      </span>\n                      <TooltipAnt title={item.tips}>\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                      <div>\n                        <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                          {formatMoney(item.value)}\n                        </span>\n                        <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                      </div>\n                      <div style={{color: '#595858'}}>\n                        {computeUnit(item.value)}\n                      </div>\n                    </Card>\n                  )\n                })\n              : null}\n          </Col>\n        </Row>\n      </Card> */}\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  return {}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}