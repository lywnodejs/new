{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiProduct from '~/api/product';\nimport moment from 'moment';\nimport apiBusiness from '~/api/business';\nimport apiAccounting from '~/api/accounting';\nimport { useCookies } from 'react-cookie';\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nconst {\n  RangePicker\n} = _DatePicker;\n\nconst getCurrentMonthFirst = () => {\n  var date = new Date();\n  date.setDate(1);\n  return date;\n};\n\nconst getData = async (values = {}) => {\n  const {\n    releaseDate\n  } = values;\n\n  if (Array.isArray(releaseDate)) {\n    values = _objectSpread(_objectSpread({}, values), {}, {\n      startTime: moment(releaseDate[0]).format('YYYY-MM-DD'),\n      endTime: moment(releaseDate[1]).format('YYYY-MM-DD')\n    });\n  } else if (releaseDate === undefined) {\n    values = _objectSpread(_objectSpread({}, values), {}, {\n      startTime: moment(getCurrentMonthFirst(), 'YYYY-MM-DD').format('YYYY-MM-DD'),\n      endTime: moment(new Date(new Date().setDate(new Date().getDate()))).format('YYYY-MM-DD')\n    });\n  } else if (releaseDate === null) {\n    values = _objectSpread(_objectSpread({}, values), {}, {\n      startTime: null,\n      endTime: null\n    });\n  }\n\n  delete values.releaseDate;\n\n  try {\n    let {\n      data: {\n        code,\n        data\n      }\n    } = await apiProduct.getMarketing(_objectSpread(_objectSpread({}, pageParams), values));\n\n    if (code == 0) {\n      return data;\n    }\n\n    return {\n      total: 0,\n      list: []\n    };\n  } catch (e) {\n    return {\n      total: 0,\n      list: []\n    };\n  }\n};\n\nconst breadcrumbs = [{\n  text: 'BI报表'\n}, {\n  text: '业务台账'\n}, {\n  text: '营销报表'\n}];\n\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: data,\n    1: setData\n  } = useState(props.data);\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: searchParams,\n    1: setSearchParams\n  } = useState({});\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  useEffect(() => {\n    getBranch4search();\n  }, []);\n\n  const onSearch = value => {\n    pageParams.pageNum = 1;\n    updateList(_objectSpread(_objectSpread({}, value), pageParams));\n    setSearchParams(_objectSpread(_objectSpread({}, value), pageParams));\n  };\n\n  const onResetForm = () => {\n    form.resetFields();\n    onSearch();\n  };\n\n  const getBranch4search = async () => {\n    let {\n      data: {\n        code,\n        data\n      }\n    } = await apiBusiness.getBranch4other();\n\n    if (code == 0) {\n      setProducts(data || []);\n    } else {\n      setProducts([]);\n    }\n  };\n\n  const onChangePage = (pageNum = pageParams.pageNum) => {\n    pageParams.pageNum = pageNum;\n    updateList(_objectSpread(_objectSpread({}, searchParams), pageParams));\n  };\n\n  const updateList = async params => {\n    let data = await getData(_objectSpread({}, params));\n    setData(data);\n  };\n\n  const columns = [{\n    title: '发放日期',\n    dataIndex: 'releaseDate',\n    align: 'left',\n    fixed: 'left'\n  }, {\n    title: '客户经理手机号',\n    dataIndex: 'managerMobile',\n    align: 'left'\n  }, {\n    title: '客户经理姓名',\n    dataIndex: 'managerName',\n    align: 'left'\n  }, {\n    title: '营销部门',\n    dataIndex: 'orgName',\n    align: 'left'\n  }, {\n    title: '客户姓名',\n    dataIndex: 'userName',\n    align: 'left'\n  }, {\n    title: '客户证件号码',\n    dataIndex: 'idCard',\n    align: 'left'\n  }, {\n    title: '客户手机号',\n    dataIndex: 'mobile',\n    align: 'left'\n  }, {\n    title: '客户联系地址',\n    dataIndex: 'address',\n    align: 'left'\n  }, {\n    title: '行业',\n    dataIndex: 'industry',\n    align: 'left'\n  }, {\n    title: '是否首贷客户',\n    dataIndex: 'isSd',\n    align: 'left'\n  }, {\n    title: '是否本行新增客户',\n    dataIndex: 'isNew',\n    align: 'left'\n  }, {\n    title: '是否本行新增存量客户',\n    dataIndex: 'isNewC',\n    align: 'left'\n  }, {\n    title: '贷款品种',\n    dataIndex: 'productType',\n    align: 'left'\n  }, {\n    title: '贷款金额',\n    dataIndex: 'loanAmount',\n    align: 'left'\n  }, {\n    title: '贷款余额',\n    dataIndex: 'blance',\n    align: 'left'\n  }, {\n    title: '贷款利率',\n    dataIndex: 'interest',\n    align: 'left'\n  }, {\n    title: '贷款期限',\n    dataIndex: 'term',\n    align: 'left'\n  }, {\n    title: '到期日期',\n    dataIndex: 'dueDate',\n    align: 'left'\n  }, {\n    title: '本月应收利息',\n    dataIndex: 'interestReceivable',\n    align: 'left'\n  }, {\n    title: '本月实收利息',\n    dataIndex: 'interestReceipts'\n  }, {\n    title: '收息率',\n    dataIndex: 'interestRate',\n    align: 'left'\n  }, {\n    title: '逾期本金',\n    dataIndex: 'overduePrincipal',\n    align: 'left'\n  }, {\n    title: '逾期利息',\n    dataIndex: 'overdueInterest',\n    align: 'left'\n  }, {\n    title: '逾期次数',\n    dataIndex: 'overdueFrequency',\n    align: 'left'\n  }];\n  const paginationConfig = {\n    total: data.total,\n    current: pageParams.pageNum,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: total => `共 ${total} 条`,\n    onChange: onChangePage\n  }; // const disabledDate = (current) => {\n  //   return current > new Date()\n  // }\n\n  const exportExcel = async () => {\n    const values = form.getFieldValue();\n    let postData = {};\n\n    try {\n      if (Array.isArray(values.releaseDate)) {\n        postData = {\n          startTime: moment(values.releaseDate[0]).format('YYYY-MM-DD'),\n          endTime: moment(values.releaseDate[1]).format('YYYY-MM-DD')\n        };\n      }\n\n      delete values.releaseDate;\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAccounting.fetch_marketing_export(_objectSpread(_objectSpread({}, values), postData));\n\n      if (code == 0) {\n        window.open(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Form, {\n    form: form,\n    name: \"search\",\n    onFinish: onSearch,\n    layout: \"inline\",\n    initialValues: {\n      releaseDate: [moment(getCurrentMonthFirst(), 'YYYY-MM-DD'), moment(new Date(new Date().setDate(new Date().getDate())), 'YYYY-MM-DD')],\n      productId: null\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u53D1\\u653E\\u65E5\\u671F\",\n    name: \"releaseDate\"\n  }, __jsx(RangePicker, null)), __jsx(_Form.Item, {\n    label: \"\\u5BA2\\u6237\\u7ECF\\u7406\\u624B\\u673A\\u53F7\",\n    name: \"managerMobile\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u5BA2\\u6237\\u7ECF\\u7406\\u59D3\\u540D\",\n    name: \"managerName\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u8425\\u9500\\u90E8\\u95E8\",\n    name: \"productId\"\n  }, __jsx(_Select, {\n    style: {\n      width: 120\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), products.map(v => __jsx(_Select.Option, {\n    key: v.id,\n    value: v.id\n  }, v.name)))), __jsx(_Form.Item, {\n    label: \"\\u5BA2\\u6237\\u59D3\\u540D\",\n    name: \"userName\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u5BA2\\u6237\\u8BC1\\u4EF6\\u53F7\\u7801\",\n    name: \"idCard\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u5BA2\\u6237\\u624B\\u673A\\u53F7\",\n    name: \"mobile\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\")), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"default\",\n    onClick: onResetForm\n  }, \"\\u91CD\\u7F6E\")), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: exportExcel,\n    type: \"primary\"\n  }, \"\\u5BFC\\u51FA\"))), __jsx(_Table, {\n    bordered: true,\n    rowKey: (v, i) => i,\n    align: \"center\",\n    scroll: {\n      x: 'max-content'\n    },\n    pagination: paginationConfig,\n    columns: columns,\n    dataSource: data.list || []\n  }));\n}\n\nbody.getInitialProps = async ctx => {\n  try {\n    let data = await getData();\n    return {\n      data: data\n    };\n  } catch (error) {}\n};\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/bi/book/marketing/index.js"],"names":["Layout","React","useEffect","useState","apiProduct","moment","apiBusiness","apiAccounting","useCookies","pageParams","pageNum","pageSize","RangePicker","getCurrentMonthFirst","date","Date","setDate","getData","values","releaseDate","Array","isArray","startTime","format","endTime","undefined","getDate","data","code","getMarketing","total","list","e","breadcrumbs","text","body","props","cookies","setData","form","useForm","searchParams","setSearchParams","products","setProducts","getBranch4search","onSearch","value","updateList","onResetForm","resetFields","getBranch4other","onChangePage","params","columns","title","dataIndex","align","fixed","paginationConfig","current","showSizeChanger","showQuickJumper","defaultPageSize","showTotal","onChange","exportExcel","getFieldValue","postData","fetch_marketing_export","window","open","err","console","log","marginBottom","productId","width","map","v","id","name","marginRight","i","x","getInitialProps","ctx","error"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState} from 'react'\nimport apiProduct from '~/api/product'\nimport {Table, Button, Form, Input, Card, DatePicker, Select} from 'antd'\nimport moment from 'moment'\nimport apiBusiness from '~/api/business'\nimport apiAccounting from '~/api/accounting'\nimport {useCookies} from 'react-cookie'\nconst pageParams = {\n  pageNum: 1,\n  pageSize: 10,\n}\nconst {RangePicker} = DatePicker\n\nconst getCurrentMonthFirst = () => {\n  var date = new Date()\n  date.setDate(1)\n  return date\n}\n\nconst getData = async (values = {}) => {\n  const {releaseDate} = values\n  if (Array.isArray(releaseDate)) {\n    values = {\n      ...values,\n      startTime: moment(releaseDate[0]).format('YYYY-MM-DD'),\n      endTime: moment(releaseDate[1]).format('YYYY-MM-DD'),\n    }\n  } else if (releaseDate === undefined) {\n    values = {\n      ...values,\n      startTime: moment(getCurrentMonthFirst(), 'YYYY-MM-DD').format(\n        'YYYY-MM-DD',\n      ),\n      endTime: moment(\n        new Date(new Date().setDate(new Date().getDate())),\n      ).format('YYYY-MM-DD'),\n    }\n  } else if (releaseDate === null) {\n    values = {\n      ...values,\n      startTime: null,\n      endTime: null,\n    }\n  }\n  delete values.releaseDate\n  try {\n    let {\n      data: {code, data},\n    } = await apiProduct.getMarketing({\n      ...pageParams,\n      ...values,\n    })\n    if (code == 0) {\n      return data\n    }\n    return {\n      total: 0,\n      list: [],\n    }\n  } catch (e) {\n    return {\n      total: 0,\n      list: [],\n    }\n  }\n}\n\nconst breadcrumbs = [{text: 'BI报表'}, {text: '业务台账'}, {text: '营销报表'}]\n\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId'])\n  const [data, setData] = useState(props.data)\n  const [form] = Form.useForm()\n  const [searchParams, setSearchParams] = useState({})\n  const [products, setProducts] = useState([])\n  useEffect(() => {\n    getBranch4search()\n  }, [])\n\n  const onSearch = (value) => {\n    pageParams.pageNum = 1\n    updateList({...value, ...pageParams})\n    setSearchParams({...value, ...pageParams})\n  }\n  const onResetForm = () => {\n    form.resetFields()\n    onSearch()\n  }\n  const getBranch4search = async () => {\n    let {\n      data: {code, data},\n    } = await apiBusiness.getBranch4other()\n    if (code == 0) {\n      setProducts(data || [])\n    } else {\n      setProducts([])\n    }\n  }\n\n  const onChangePage = (pageNum = pageParams.pageNum) => {\n    pageParams.pageNum = pageNum\n    updateList({...searchParams, ...pageParams})\n  }\n\n  const updateList = async (params) => {\n    let data = await getData({...params})\n    setData(data)\n  }\n\n  const columns = [\n    {\n      title: '发放日期',\n      dataIndex: 'releaseDate',\n      align: 'left',\n      fixed: 'left',\n    },\n    {\n      title: '客户经理手机号',\n      dataIndex: 'managerMobile',\n      align: 'left',\n    },\n    {\n      title: '客户经理姓名',\n      dataIndex: 'managerName',\n      align: 'left',\n    },\n    {\n      title: '营销部门',\n      dataIndex: 'orgName',\n      align: 'left',\n    },\n    {\n      title: '客户姓名',\n      dataIndex: 'userName',\n      align: 'left',\n    },\n    {\n      title: '客户证件号码',\n      dataIndex: 'idCard',\n      align: 'left',\n    },\n    {\n      title: '客户手机号',\n      dataIndex: 'mobile',\n      align: 'left',\n    },\n    {\n      title: '客户联系地址',\n      dataIndex: 'address',\n      align: 'left',\n    },\n    {\n      title: '行业',\n      dataIndex: 'industry',\n      align: 'left',\n    },\n    {\n      title: '是否首贷客户',\n      dataIndex: 'isSd',\n      align: 'left',\n    },\n    {\n      title: '是否本行新增客户',\n      dataIndex: 'isNew',\n      align: 'left',\n    },\n    {\n      title: '是否本行新增存量客户',\n      dataIndex: 'isNewC',\n      align: 'left',\n    },\n    {\n      title: '贷款品种',\n      dataIndex: 'productType',\n      align: 'left',\n    },\n    {\n      title: '贷款金额',\n      dataIndex: 'loanAmount',\n      align: 'left',\n    },\n    {\n      title: '贷款余额',\n      dataIndex: 'blance',\n      align: 'left',\n    },\n    {\n      title: '贷款利率',\n      dataIndex: 'interest',\n      align: 'left',\n    },\n    {\n      title: '贷款期限',\n      dataIndex: 'term',\n      align: 'left',\n    },\n    {\n      title: '到期日期',\n      dataIndex: 'dueDate',\n      align: 'left',\n    },\n    {\n      title: '本月应收利息',\n      dataIndex: 'interestReceivable',\n      align: 'left',\n    },\n    {\n      title: '本月实收利息',\n      dataIndex: 'interestReceipts',\n    },\n    {\n      title: '收息率',\n      dataIndex: 'interestRate',\n      align: 'left',\n    },\n    {\n      title: '逾期本金',\n      dataIndex: 'overduePrincipal',\n      align: 'left',\n    },\n    {\n      title: '逾期利息',\n      dataIndex: 'overdueInterest',\n      align: 'left',\n    },\n    {\n      title: '逾期次数',\n      dataIndex: 'overdueFrequency',\n      align: 'left',\n    },\n  ]\n\n  const paginationConfig = {\n    total: data.total,\n    current: pageParams.pageNum,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: (total) => `共 ${total} 条`,\n    onChange: onChangePage,\n  }\n  // const disabledDate = (current) => {\n  //   return current > new Date()\n  // }\n  const exportExcel = async () => {\n    const values = form.getFieldValue()\n    let postData = {}\n    try {\n      if (Array.isArray(values.releaseDate)) {\n        postData = {\n          startTime: moment(values.releaseDate[0]).format('YYYY-MM-DD'),\n          endTime: moment(values.releaseDate[1]).format('YYYY-MM-DD'),\n        }\n      }\n      delete values.releaseDate\n      const {\n        data: {data, code},\n      } = await apiAccounting.fetch_marketing_export({\n        ...values,\n        ...postData,\n      })\n      if (code == 0) {\n        window.open(data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Card style={{marginBottom: 30}}>\n        <Form\n          form={form}\n          name=\"search\"\n          onFinish={onSearch}\n          layout=\"inline\"\n          initialValues={{\n            releaseDate: [\n              moment(getCurrentMonthFirst(), 'YYYY-MM-DD'),\n              moment(\n                new Date(new Date().setDate(new Date().getDate())),\n                'YYYY-MM-DD',\n              ),\n            ],\n            productId: null,\n          }}\n        >\n          <Form.Item label=\"发放日期\" name=\"releaseDate\">\n            <RangePicker />\n          </Form.Item>\n          <Form.Item label=\"客户经理手机号\" name=\"managerMobile\">\n            <Input placeholder=\"请输入\" />\n          </Form.Item>\n          <Form.Item label=\"客户经理姓名\" name=\"managerName\">\n            <Input placeholder=\"请输入\" />\n          </Form.Item>\n          <Form.Item label=\"营销部门\" name=\"productId\">\n            <Select style={{width: 120}}>\n              <Select.Option value=\"\">全部</Select.Option>\n              {products.map((v) => (\n                <Select.Option key={v.id} value={v.id}>\n                  {v.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"客户姓名\" name=\"userName\">\n            <Input placeholder=\"请输入\" />\n          </Form.Item>\n          <Form.Item label=\"客户证件号码\" name=\"idCard\">\n            <Input placeholder=\"请输入\" />\n          </Form.Item>\n          <Form.Item label=\"客户手机号\" name=\"mobile\">\n            <Input placeholder=\"请输入\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              查询\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"default\" onClick={onResetForm}>\n              重置\n            </Button>\n          </Form.Item>\n          <Button\n            style={{marginRight: 15}}\n            onClick={exportExcel}\n            type=\"primary\"\n          >\n            导出\n          </Button>\n        </Form>\n      </Card>\n      <Table\n        bordered\n        rowKey={(v, i) => i}\n        align=\"center\"\n        scroll={{x: 'max-content'}}\n        pagination={paginationConfig}\n        columns={columns}\n        dataSource={data.list || []}\n      />\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async (ctx) => {\n  try {\n    let data = await getData()\n    return {data: data}\n  } catch (error) {}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}