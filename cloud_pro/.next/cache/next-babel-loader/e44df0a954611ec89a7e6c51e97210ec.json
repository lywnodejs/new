{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport Router, { withRouter } from 'next/router';\nimport api from '~/api/business';\nimport apiOrder from '~/api/order';\nimport apiProduct from '~/api/product';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nimport AssignModal from '~/components/common/AssignBusinessModal';\nvar pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nvar values = {};\nvar breadcrumbs = [{\n  text: '客户经理管理'\n}, {\n  text: '业务总列表'\n}];\n\nfunction body(_ref) {\n  var verifyStatus = _ref.verifyStatus,\n      applyStatusList = _ref.applyStatusList,\n      applySource = _ref.applySource,\n      applyOrderList = _ref.applyOrderList,\n      distribution = _ref.distribution,\n      orderStatus = _ref.orderStatus;\n\n  var _useState = useState([]),\n      productList = _useState[0],\n      setProductList = _useState[1];\n\n  var _useCookies = useCookies(['tenantId']),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  var _useState2 = useState({}),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisible = _useState3[1];\n\n  var _useState4 = useState([]),\n      orderIds = _useState4[0],\n      setOrderIds = _useState4[1];\n\n  var _useState5 = useState([]),\n      alloctOrderIds = _useState5[0],\n      setAlloctOrderIds = _useState5[1];\n\n  useEffect(function () {\n    onSearch({\n      orderStatus: 2\n    });\n    getProducts();\n  }, []);\n\n  var fetchList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values,\n          _yield$api$fetch_all_,\n          _yield$api$fetch_all_2,\n          data,\n          code,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.prev = 1;\n              _context.next = 4;\n              return api.fetch_all_order(_objectSpread(_objectSpread(_objectSpread({}, pageParams), values), {}, {\n                tenantId: cookies.tenantId\n              }));\n\n            case 4:\n              _yield$api$fetch_all_ = _context.sent;\n              _yield$api$fetch_all_2 = _yield$api$fetch_all_.data;\n              data = _yield$api$fetch_all_2.data;\n              code = _yield$api$fetch_all_2.code;\n\n              if (code == 0) {\n                setList(data);\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function fetchList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getProducts = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$apiProduct$get, _yield$apiProduct$get2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return apiProduct.get_products({\n                tenantId: cookies.tenantId\n              });\n\n            case 3:\n              _yield$apiProduct$get = _context2.sent;\n              _yield$apiProduct$get2 = _yield$apiProduct$get.data;\n              data = _yield$apiProduct$get2.data;\n              code = _yield$apiProduct$get2.code;\n\n              if (code == 0) {\n                setProductList(data);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function getProducts() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = value;\n              pageParams.pageNo = 1;\n              fetchList(_objectSpread({}, values));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onSearch(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onPage = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(pageNo, pageSize) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              pageParams.pageNo = pageNo;\n              pageParams.pageSize = pageSize;\n              fetchList(values);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onPage(_x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var appendToOrderIds = function appendToOrderIds(ids) {\n    setOrderIds(ids);\n  };\n\n  var onPartialAssign = function onPartialAssign(ids) {\n    var orderIdArr = ids || orderIds;\n    setAlloctOrderIds(orderIdArr);\n\n    if (Array.isArray(orderIdArr) && !orderIdArr.length) {\n      return _message.error('请先选择要分配的订单');\n    }\n\n    var hasStatus1 = orderIdArr.some(function (id) {\n      var itemData = list.list.find(function (item) {\n        return item.id == id;\n      });\n      return itemData.orderStatus == 1;\n    });\n\n    if (hasStatus1) {\n      _Modal.confirm({\n        content: '确定将已补充状态的订单重新分配客户经理？',\n        onOk: function onOk() {\n          setVisible(true);\n        }\n      });\n    } else {\n      setVisible(true);\n    }\n  }; // 单个分配\n\n\n  var allocat = function allocat(data) {\n    var ids = [data.id]; // setOrderIds(ids)\n\n    onPartialAssign(ids);\n  };\n\n  var onHide = function onHide() {\n    // setOrderIds([])\n    setVisible(false);\n  };\n\n  var onAssignSubmit = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref6) {\n      var orderIds, giveAccountManagerId, _yield$api$dateAssign, _yield$api$dateAssign2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              orderIds = _ref6.orderIds, giveAccountManagerId = _ref6.giveAccountManagerId;\n              _context5.prev = 1;\n              _context5.next = 4;\n              return api.dateAssign({\n                orderIds: orderIds,\n                giveAccountManagerId: giveAccountManagerId\n              });\n\n            case 4:\n              _yield$api$dateAssign = _context5.sent;\n              _yield$api$dateAssign2 = _yield$api$dateAssign.data;\n              data = _yield$api$dateAssign2.data;\n              code = _yield$api$dateAssign2.code;\n\n              if (code == 0) {\n                _message.success(\"\\u9009\\u62E9\\u5206\\u914D\\u6210\\u529F\");\n\n                setVisible(false);\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.log(_context5.t0);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 11]]);\n    }));\n\n    return function onAssignSubmit(_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(SearchForm, {\n    onSearch: onSearch,\n    onPartialAssign: onPartialAssign,\n    productList: productList,\n    applySource: applySource,\n    applyOrderList: applyOrderList,\n    applyStatusList: applyStatusList,\n    distribution: distribution,\n    orderStatus: orderStatus\n  }), __jsx(TableList, {\n    list: list,\n    onPage: onPage,\n    pageParams: pageParams,\n    appendToOrderIds: appendToOrderIds,\n    Router: Router,\n    allocat: allocat,\n    productList: productList,\n    applySource: applySource,\n    applyOrderList: applyOrderList,\n    applyStatusList: applyStatusList,\n    distribution: distribution,\n    orderStatus: orderStatus\n  })), __jsx(AssignModal, {\n    orderIds: alloctOrderIds,\n    visible: visible,\n    onHide: onHide,\n    pullData: onPage,\n    tenantId: cookies.tenantId,\n    onAssignSubmit: onAssignSubmit\n  }));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n  var backData, _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, data, code, _yield$Promise$all2$2, statusList, statusCode, _yield$Promise$all2$3, applyStatusList, applyStatusCode, _yield$Promise$all2$4, applySource, applySourceCode, _yield$Promise$all2$5, applyOrderList, applyOrderCode, _yield$Promise$all2$6, distribution, distributionCode, _yield$Promise$all2$7, orderStatus, orderStatusCOde;\n\n  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          backData = {\n            checkProgressList: [],\n            statusList: [],\n            applyStatusList: [],\n            applySource: [],\n            applyOrderList: [],\n            distribution: [],\n            orderStatus: []\n          };\n          _context6.prev = 1;\n          _context6.next = 4;\n          return Promise.all([apiOrder.get_data_dict('LOAN_CHECK_PROGRESS'), apiOrder.get_data_dict('LOAN_ORDER_STATUS'), apiOrder.get_data_dict('LOAN_APPLY_STATUS'), apiOrder.get_data_dict('LOAN_APPLY_SOURCE'), apiOrder.get_data_dict('LOAN_ORDER_TYPE'), apiOrder.get_data_dict('ACCOUNT_MANAGER_SELL_STATUS'), apiOrder.get_data_dict('ACCOUNT_MANAGER_ORDER_STATUS')]);\n\n        case 4:\n          _yield$Promise$all = _context6.sent;\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 7);\n          _yield$Promise$all2$ = _yield$Promise$all2[0].data;\n          data = _yield$Promise$all2$.data;\n          code = _yield$Promise$all2$.code;\n          _yield$Promise$all2$2 = _yield$Promise$all2[1].data;\n          statusList = _yield$Promise$all2$2.data;\n          statusCode = _yield$Promise$all2$2.code;\n          _yield$Promise$all2$3 = _yield$Promise$all2[2].data;\n          applyStatusList = _yield$Promise$all2$3.data;\n          applyStatusCode = _yield$Promise$all2$3.code;\n          _yield$Promise$all2$4 = _yield$Promise$all2[3].data;\n          applySource = _yield$Promise$all2$4.data;\n          applySourceCode = _yield$Promise$all2$4.code;\n          _yield$Promise$all2$5 = _yield$Promise$all2[4].data;\n          applyOrderList = _yield$Promise$all2$5.data;\n          applyOrderCode = _yield$Promise$all2$5.code;\n          _yield$Promise$all2$6 = _yield$Promise$all2[5].data;\n          distribution = _yield$Promise$all2$6.data;\n          distributionCode = _yield$Promise$all2$6.code;\n          _yield$Promise$all2$7 = _yield$Promise$all2[6].data;\n          orderStatus = _yield$Promise$all2$7.data;\n          orderStatusCOde = _yield$Promise$all2$7.code;\n\n          if (!(code == 0)) {\n            _context6.next = 29;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", {\n            checkProgressList: data,\n            statusList: statusCode === 0 ? statusList : [],\n            applyStatusList: applyStatusCode === 0 ? applyStatusList : [],\n            applySource: applySourceCode === 0 ? applySource : [],\n            applyOrderList: applyOrderCode === 0 ? applyOrderList : [],\n            distribution: distributionCode === 0 ? distribution : [],\n            orderStatus: orderStatusCOde === 0 ? orderStatus : []\n          });\n\n        case 29:\n          backData.code = code;\n          return _context6.abrupt(\"return\", backData);\n\n        case 33:\n          _context6.prev = 33;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log(_context6.t0);\n          return _context6.abrupt(\"return\", backData);\n\n        case 37:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, null, [[1, 33]]);\n}));\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}