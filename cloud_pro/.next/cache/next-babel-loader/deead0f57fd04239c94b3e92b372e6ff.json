{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiRegulatory from '~/api/regulatory';\nimport { REPORT_TYPE } from '~/utils/const';\nimport SearchForm from './searchForm';\nimport ImportData from './importData';\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\n\nconst getData = async (params = pageParams) => {\n  try {\n    let {\n      data: {\n        code,\n        data\n      }\n    } = await apiRegulatory.getCreditReportList(params);\n\n    if (code == 0) {\n      return data;\n    }\n\n    return {\n      totalSize: 0,\n      list: []\n    };\n  } catch (e) {\n    return {\n      totalSize: 0,\n      list: []\n    };\n  }\n};\n\nconst breadcrumbs = [{\n  text: '监管报送'\n}, {\n  text: '征信报送'\n}];\n\nfunction body(props) {\n  const {\n    0: data,\n    1: setData\n  } = useState(props.data);\n  const {\n    0: allCategory,\n    1: setAllCategory\n  } = useState([]);\n  const {\n    0: searchParams,\n    1: setSearchParams\n  } = useState({});\n  const {\n    0: allProducts,\n    1: setAllProducts\n  } = useState([]);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  useEffect(() => {\n    getCategory();\n    getAllProducts();\n  }, []);\n\n  const getCategory = () => {\n    apiRegulatory.getCategory('credit_report').then(({\n      data: {\n        data,\n        code\n      }\n    }) => {\n      if (code == 0) {\n        setAllCategory(data);\n      }\n    });\n  };\n\n  const getAllProducts = () => {\n    apiRegulatory.getAllProducts().then(({\n      data: {\n        data,\n        code\n      }\n    }) => {\n      if (code == 0) {\n        setAllProducts(data);\n      }\n    });\n  };\n\n  const onSearch = (_ref) => {\n    let {\n      time\n    } = _ref,\n        params = _objectWithoutProperties(_ref, [\"time\"]);\n\n    setSearchParams(params);\n    pageParams.pageNo = 1;\n    updateList(_objectSpread(_objectSpread({}, params), pageParams));\n  };\n\n  const onChangePage = (pageNo = pageParams.pageNo) => {\n    pageParams.pageNo = pageNo;\n    updateList(_objectSpread(_objectSpread({}, searchParams), pageParams));\n  };\n\n  const updateList = async params => {\n    let data = await getData(_objectSpread({}, params));\n    setData(data);\n  };\n\n  const columns = [{\n    title: '借据号',\n    dataIndex: 'orderNum'\n  }, {\n    title: '手机号',\n    dataIndex: 'mobilePhone'\n  }, {\n    title: '债务人名称',\n    dataIndex: 'userName'\n  }, {\n    title: '债务人身份标识号码',\n    dataIndex: 'idCard'\n  }, {\n    title: '产品名称',\n    dataIndex: 'productName'\n  }, {\n    title: '信息记录类型',\n    dataIndex: 'reportInfoType'\n  }, {\n    title: '信息记录事件',\n    dataIndex: 'eventName'\n  }, {\n    title: '应上报日期',\n    dataIndex: 'needReportDate'\n  }, {\n    title: '上报标识',\n    dataIndex: 'reportStatus',\n    render: val => {\n      const item = REPORT_TYPE.find(v => v.key == val);\n      return item && item.name || '';\n    }\n  }].map(v => {\n    v.align = 'center';\n    return v;\n  });\n  const paginationConfig = {\n    total: data.totalSize,\n    current: pageParams.pageNo,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: total => `共 ${total} 条`,\n    onChange: onChangePage\n  };\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(SearchForm, {\n    search: onSearch,\n    importData: setVisible,\n    allCategory: allCategory,\n    allProducts: allProducts\n  }), __jsx(_Table, {\n    bordered: true,\n    rowKey: (v, i) => i,\n    pagination: paginationConfig,\n    columns: columns,\n    dataSource: data.list || []\n  }), __jsx(ImportData, {\n    setVisible: setVisible,\n    visible: visible\n  }));\n}\n\nbody.getInitialProps = async ctx => {\n  let data = await getData();\n  return {\n    data\n  };\n};\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/regulatory/credit/index.js"],"names":["Layout","React","useEffect","useState","apiRegulatory","REPORT_TYPE","SearchForm","ImportData","pageParams","pageNo","pageSize","getData","params","data","code","getCreditReportList","totalSize","list","e","breadcrumbs","text","body","props","setData","allCategory","setAllCategory","searchParams","setSearchParams","allProducts","setAllProducts","visible","setVisible","getCategory","getAllProducts","then","onSearch","time","updateList","onChangePage","columns","title","dataIndex","render","val","item","find","v","key","name","map","align","paginationConfig","total","current","showSizeChanger","showQuickJumper","defaultPageSize","showTotal","onChange","i","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport React, {useEffect, useState} from 'react'\nimport apiRegulatory from '~/api/regulatory'\nimport {Table} from 'antd'\nimport {REPORT_TYPE} from '~/utils/const'\n\nimport SearchForm from './searchForm'\nimport ImportData from './importData'\n\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10,\n}\nconst getData = async (params = pageParams) => {\n  try {\n    let {\n      data: {code, data},\n    } = await apiRegulatory.getCreditReportList(params)\n    if (code == 0) {\n      return data\n    }\n    return {\n      totalSize: 0,\n      list: [],\n    }\n  } catch (e) {\n    return {\n      totalSize: 0,\n      list: [],\n    }\n  }\n}\n\nconst breadcrumbs = [{text: '监管报送'}, {text: '征信报送'}]\n\nfunction body(props) {\n  const [data, setData] = useState(props.data)\n  const [allCategory, setAllCategory] = useState([])\n  const [searchParams, setSearchParams] = useState({})\n  const [allProducts, setAllProducts] = useState([])\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    getCategory()\n    getAllProducts()\n  }, [])\n\n  const getCategory = () => {\n    apiRegulatory.getCategory('credit_report').then(({data: {data, code}}) => {\n      if (code == 0) {\n        setAllCategory(data)\n      }\n    })\n  }\n\n  const getAllProducts = () => {\n    apiRegulatory.getAllProducts().then(({data: {data, code}}) => {\n      if (code == 0) {\n        setAllProducts(data)\n      }\n    })\n  }\n\n  const onSearch = ({time, ...params}) => {\n    setSearchParams(params)\n    pageParams.pageNo = 1\n    updateList({...params, ...pageParams})\n  }\n\n  const onChangePage = (pageNo = pageParams.pageNo) => {\n    pageParams.pageNo = pageNo\n    updateList({...searchParams, ...pageParams})\n  }\n\n  const updateList = async (params) => {\n    let data = await getData({...params})\n    setData(data)\n  }\n\n  const columns = [\n    {title: '借据号', dataIndex: 'orderNum'},\n    {title: '手机号', dataIndex: 'mobilePhone'},\n    {title: '债务人名称', dataIndex: 'userName'},\n    {title: '债务人身份标识号码', dataIndex: 'idCard'},\n    {title: '产品名称', dataIndex: 'productName'},\n    {title: '信息记录类型', dataIndex: 'reportInfoType'},\n    {title: '信息记录事件', dataIndex: 'eventName'},\n    {title: '应上报日期', dataIndex: 'needReportDate'},\n    {\n      title: '上报标识',\n      dataIndex: 'reportStatus',\n      render: (val) => {\n        const item = REPORT_TYPE.find((v) => v.key == val)\n        return (item && item.name) || ''\n      },\n    },\n  ].map((v) => {\n    v.align = 'center'\n    return v\n  })\n\n  const paginationConfig = {\n    total: data.totalSize,\n    current: pageParams.pageNo,\n    showSizeChanger: false,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: (total) => `共 ${total} 条`,\n    onChange: onChangePage,\n  }\n\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <SearchForm\n        search={onSearch}\n        importData={setVisible}\n        allCategory={allCategory}\n        allProducts={allProducts}\n      />\n\n      <Table\n        bordered\n        rowKey={(v, i) => i}\n        pagination={paginationConfig}\n        columns={columns}\n        dataSource={data.list || []}\n      />\n      <ImportData setVisible={setVisible} visible={visible} />\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async (ctx) => {\n  let data = await getData()\n  return {data}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}