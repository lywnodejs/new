{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport api from '~/api/product';\nimport { cookies } from '~/utils';\nimport '~/themes/index.less';\nimport { CommonLayout } from '~/components/Layout/Layout';\nimport Login from '~/pages/login';\nexport const Context = React.createContext();\n\nconst Main = ({\n  statusCode,\n  Component,\n  pageProps,\n  isServer\n}) => {\n  if ((statusCode === -8 || statusCode === 1) && isServer) {\n    return __jsx(Login, null);\n  }\n\n  if (pageProps.login) {\n    return __jsx(Component, pageProps);\n  } // if (statusCode > -8 && statusCode < -4 && isServer) {\n  //   return <Error {...{statusCode: STATUSCODE[statusCode]}} />\n  // }\n\n\n  return __jsx(CommonLayout, null, __jsx(Component, pageProps));\n};\n\nfunction App({\n  Component,\n  pageProps,\n  statusCode,\n  isServer,\n  menu\n}) {\n  return __jsx(_ConfigProvider, {\n    locale: zhCN\n  }, __jsx(Context.Provider, {\n    value: {\n      menu\n    }\n  }, __jsx(Main, {\n    Component,\n    pageProps,\n    statusCode,\n    isServer\n  })));\n}\n\nApp.getInitialProps = async appContext => {\n  let statusCode = 0;\n\n  if (appContext.ctx.req !== undefined) {\n    axios.defaults.baseURL = `${appContext.ctx.req.protocol}://${appContext.ctx.req.headers.host}`;\n\n    if (appContext.ctx.req.headers && appContext.ctx.req.headers.cookie) {\n      // console.log('server:', appContext.ctx.req.headers.cookie)\n      const cookie = appContext.ctx.req.headers.cookie.replace('sessionId=undefined;', '');\n      const {\n        sessionId\n      } = cookies(cookie);\n      delete axios.defaults.headers.common['token'];\n\n      if (sessionId !== undefined && sessionId !== 'undefined') {\n        axios.defaults.headers.common['token'] = sessionId;\n      }\n    }\n  } else {\n    delete axios.defaults.baseURL;\n  }\n\n  let pageProps = {}; // let {menu} = await import('~/lib/menu')\n\n  let menu = [];\n\n  try {\n    const {\n      data: {\n        code,\n        data\n      }\n    } = await api.get_menu_list(); // console.log(code, data)\n\n    if (code == 0 && Array.isArray(data)) {\n      menu = data;\n    }\n\n    statusCode = code;\n  } catch (e) {\n    console.log(e);\n    menu = [];\n  }\n\n  if (appContext.Component.getInitialProps) {\n    pageProps = await appContext.Component.getInitialProps(appContext);\n    statusCode = pageProps.code;\n  }\n\n  return {\n    pageProps,\n    menu,\n    statusCode,\n    isServer: appContext.ctx.req !== undefined\n  };\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}