{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport { useEffect, useState } from 'react';\nimport styles from './style.less';\nimport { LockOutlined, PhoneOutlined, MailOutlined } from '@ant-design/icons';\nimport { post, postForm } from '~/utils/fetch';\nimport { useCookies } from 'react-cookie';\nimport _ from 'lodash';\nimport { useRouter } from 'next/router';\nconst tailLayout = {\n  wrapperCol: {\n    span: 24\n  }\n};\n\nconst LoginForm = () => {\n  const [form] = _Form.useForm();\n\n  const [cookies, setCookie] = useCookies(['sessionId']);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    0: smsText,\n    1: setSmsText\n  } = useState('获取验证码');\n  let {\n    0: time,\n    1: setTime\n  } = useState(60);\n  const {\n    0: timer,\n    1: setTimer\n  } = useState(null);\n\n  const onFinish = async params => {\n    setLoading(true);\n    const {\n      data: {\n        code,\n        data,\n        desc\n      }\n    } = await postForm('userManage/userLogin', params).catch(() => {\n      setLoading(false);\n    });\n    setLoading(false);\n\n    if (code !== 0) {\n      return;\n    }\n\n    if (_.isObject(data) && _.isObject(data.authAccount)) {\n      if (data.authAccount.authToken) {\n        setCookie('sessionId', data.authAccount.authToken, {\n          path: '/'\n        });\n      }\n\n      setCookie('dataScope', data.authAccount.dataScope, {\n        path: '/'\n      });\n\n      if (data.authAccount.accountName) {\n        setCookie('name', data.authAccount.accountName, {\n          path: '/'\n        });\n      }\n\n      if (data.authAccount.roleId) {\n        setCookie('roleId', data.authAccount.roleId, {\n          path: '/'\n        });\n      }\n\n      if (data.authAccount.trueName) {\n        setCookie('trueName', data.authAccount.trueName, {\n          path: '/'\n        });\n      }\n    }\n\n    if (_.isObject(data) && _.isObject(data.tenant)) {\n      if (data.tenant.id) {\n        setCookie('tenantId', data.tenant.id, {\n          path: '/'\n        });\n      }\n    } // location.href = '/'\n\n\n    router.push('/');\n  };\n\n  const getSmsCode = async () => {\n    let mobile = form.getFieldValue('mobile');\n\n    if (timer || !mobile) {\n      return;\n    }\n\n    console.log('getSmsCode');\n    countDown();\n    const {\n      data: {\n        code,\n        data,\n        desc\n      }\n    } = await postForm('userManage/sendVerifyCode', {\n      mobile\n    });\n\n    if (code == 0) {\n      _message.success('短信发送成功');\n    }\n  };\n\n  const countDown = () => {\n    setSmsText(`${time}s后重新获取`);\n    const c_timer = setInterval(() => {\n      time--;\n\n      if (time === 0) {\n        clearInterval(c_timer);\n        setTimer(null);\n        setTime(60);\n        setSmsText('获取验证码');\n      } else {\n        setSmsText(`${time}s后重新获取`);\n      }\n    }, 1000);\n    setTimer(c_timer);\n  };\n\n  return __jsx(_Form, {\n    form: form,\n    style: {\n      width: '400px'\n    },\n    name: \"basic\",\n    initialValues: {// mobile: '13800001234',\n      // verifyCode: '123456',\n    },\n    onFinish: onFinish\n  }, __jsx(_Form.Item, {\n    name: \"mobile\",\n    rules: [{\n      required: true,\n      message: '请输入手机号'\n    }]\n  }, __jsx(_Input, {\n    placeholder: '请输入手机号',\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    prefix: __jsx(PhoneOutlined, null)\n  })), __jsx(_Form.Item, {\n    name: \"verifyCode\",\n    rules: [{\n      required: true,\n      message: '请输入验证码'\n    }]\n  }, __jsx(_Input.Search, {\n    size: \"large\",\n    prefix: __jsx(MailOutlined, null),\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n    enterButton: smsText,\n    onSearch: getSmsCode\n  })), __jsx(_Form.Item, null, __jsx(_Button, {\n    loading: loading,\n    size: \"large\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true\n  }, \"\\u767B\\u5F55\")));\n};\n\nfunction body() {\n  return __jsx(\"div\", {\n    className: styles.wrapper\n  }, __jsx(_Row, {\n    justify: \"space-around\",\n    align: \"middle\",\n    className: styles.row\n  }, __jsx(_Col, {\n    span: 2\n  }), __jsx(_Col, null, __jsx(\"h1\", {\n    className: styles.h1\n  }, \"\\u4FE1\\u8D37\\u4E1A\\u52A1\\u7CFB\\u7EDF\"), __jsx(\"p\", {\n    className: styles.p\n  }), __jsx(LoginForm, null)), __jsx(_Col, {\n    span: 2\n  })));\n}\n\nbody.getInitialProps = () => ({\n  login: true\n});\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/login/index.js"],"names":["Layout","useEffect","useState","styles","LockOutlined","PhoneOutlined","MailOutlined","post","postForm","useCookies","_","useRouter","tailLayout","wrapperCol","span","LoginForm","form","useForm","cookies","setCookie","loading","setLoading","router","smsText","setSmsText","time","setTime","timer","setTimer","onFinish","params","data","code","desc","catch","isObject","authAccount","authToken","path","dataScope","accountName","roleId","trueName","tenant","id","push","getSmsCode","mobile","getFieldValue","console","log","countDown","success","c_timer","setInterval","clearInterval","width","required","message","body","wrapper","row","h1","p","getInitialProps","login"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport {useEffect, useState} from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Row,\n  Col,\n  Select,\n  Modal,\n  message,\n} from 'antd'\nimport styles from './style.less'\nimport {LockOutlined, PhoneOutlined, MailOutlined} from '@ant-design/icons'\nimport {post, postForm} from '~/utils/fetch'\nimport {useCookies} from 'react-cookie'\nimport _ from 'lodash'\nimport {useRouter} from 'next/router'\n\nconst tailLayout = {\n  wrapperCol: {span: 24},\n}\n\nconst LoginForm = () => {\n  const [form] = Form.useForm()\n  const [cookies, setCookie] = useCookies(['sessionId'])\n  const [loading, setLoading] = useState(false)\n  const router = useRouter()\n\n  const [smsText, setSmsText] = useState('获取验证码')\n  let [time, setTime] = useState(60)\n  const [timer, setTimer] = useState(null)\n\n  const onFinish = async (params) => {\n    setLoading(true)\n\n    const {\n      data: {code, data, desc},\n    } = await postForm('userManage/userLogin', params).catch(() => {\n      setLoading(false)\n    })\n\n    setLoading(false)\n\n    if (code !== 0) {\n      return\n    }\n\n    if (_.isObject(data) && _.isObject(data.authAccount)) {\n      if (data.authAccount.authToken) {\n        setCookie('sessionId', data.authAccount.authToken, {path: '/'})\n      }\n      setCookie('dataScope', data.authAccount.dataScope, {path: '/'})\n\n      if (data.authAccount.accountName) {\n        setCookie('name', data.authAccount.accountName, {path: '/'})\n      }\n\n      if (data.authAccount.roleId) {\n        setCookie('roleId', data.authAccount.roleId, {path: '/'})\n      }\n\n      if (data.authAccount.trueName) {\n        setCookie('trueName', data.authAccount.trueName, {path: '/'})\n      }\n    }\n\n    if (_.isObject(data) && _.isObject(data.tenant)) {\n      if (data.tenant.id) {\n        setCookie('tenantId', data.tenant.id, {path: '/'})\n      }\n    }\n\n    // location.href = '/'\n    router.push('/')\n  }\n\n  const getSmsCode = async () => {\n    let mobile = form.getFieldValue('mobile')\n    if (timer || !mobile) {\n      return\n    }\n    console.log('getSmsCode')\n    countDown()\n    const {\n      data: {code, data, desc},\n    } = await postForm('userManage/sendVerifyCode', {mobile})\n\n    if (code == 0) {\n      message.success('短信发送成功')\n    }\n  }\n\n  const countDown = () => {\n    setSmsText(`${time}s后重新获取`)\n    const c_timer = setInterval(() => {\n      time--\n      if (time === 0) {\n        clearInterval(c_timer)\n        setTimer(null)\n        setTime(60)\n        setSmsText('获取验证码')\n      } else {\n        setSmsText(`${time}s后重新获取`)\n      }\n    }, 1000)\n    setTimer(c_timer)\n  }\n\n  return (\n    <Form\n      form={form}\n      style={{width: '400px'}}\n      name=\"basic\"\n      initialValues={\n        {\n          // mobile: '13800001234',\n          // verifyCode: '123456',\n        }\n      }\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name=\"mobile\"\n        rules={[\n          {\n            required: true,\n            message: '请输入手机号',\n          },\n        ]}\n      >\n        <Input\n          placeholder={'请输入手机号'}\n          size=\"large\"\n          style={{width: '100%'}}\n          prefix={<PhoneOutlined />}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"verifyCode\"\n        rules={[{required: true, message: '请输入验证码'}]}\n      >\n        <Input.Search\n          size=\"large\"\n          prefix={<MailOutlined />}\n          placeholder=\"请输入验证码\"\n          enterButton={smsText}\n          onSearch={getSmsCode}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          loading={loading}\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          block\n        >\n          登录\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nfunction body() {\n  return (\n    <div className={styles.wrapper}>\n      <Row justify=\"space-around\" align=\"middle\" className={styles.row}>\n        <Col span={2} />\n        <Col>\n          <h1 className={styles.h1}>信贷业务系统</h1>\n          <p className={styles.p}></p>\n          <LoginForm />\n        </Col>\n        <Col span={2}></Col>\n      </Row>\n    </div>\n  )\n}\n\nbody.getInitialProps = () => ({\n  login: true,\n})\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}