{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nexport default function SendSms(props) {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const [form] = _Form.useForm();\n\n  useEffect(() => {\n    if (visible) {\n      form.resetFields();\n    }\n  }, [visible]);\n\n  const successFunc = () => {\n    setLoading(false);\n    setVisible(false);\n  };\n\n  const failFunc = () => {\n    setLoading(false);\n  };\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      setLoading(true);\n      props.getRemark(values.remark, successFunc, failFunc);\n    }).catch(errorInfo => {\n      console.error(errorInfo);\n    });\n  };\n\n  const layout = {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    onClick: () => setVisible(true)\n  }, props.target ? props.target : __jsx(_Button, {\n    type: \"link\"\n  }, \"\\u5907\\u6CE8\")), __jsx(_Modal, {\n    title: \"\\u5907\\u6CE8\",\n    visible: visible,\n    confirmLoading: loading,\n    onOk: handleOk,\n    onCancel: () => setVisible(false)\n  }, __jsx(_Form, _extends({}, layout, {\n    form: form,\n    name: \"basic\"\n  }), __jsx(_Form.Item, {\n    label: \"\\u5907\\u6CE8\",\n    name: \"remark\",\n    rules: [{\n      required: true,\n      message: '请输入备注!'\n    }, {\n      whitespace: true\n    }]\n  }, __jsx(_Input.TextArea, {\n    rows: 4\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}