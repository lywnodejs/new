{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport apiBusiness from '~/api/business';\nimport _ from 'lodash';\nconst {\n  RangePicker\n} = _TimePicker;\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\n\nconst EditModal = props => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(props.show);\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: departments,\n    1: setDepartments\n  } = useState([]);\n  const {\n    0: showDepartments,\n    1: setShowDepartments\n  } = useState([]);\n\n  const [form] = _Form.useForm();\n\n  useEffect(() => {\n    setShow(props.show);\n\n    if (!props.show) {\n      setConfirmLoading(false);\n    } else {\n      form.setFieldsValue(_objectSpread({\n        status: 1\n      }, props.data));\n      console.log('showModalData:', props.data);\n      initDepartments();\n    }\n  }, [props]);\n\n  const handleCancel = () => {\n    form.resetFields();\n    form.setFieldsValue(null);\n    props.close();\n  };\n\n  const initDepartments = () => {\n    if (props.data) {\n      handleChangeBranch(props.data.branchNetworkId, 'init');\n    } else {\n      setDepartments([]);\n      setShowDepartments([]);\n    }\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    form.validateFields().then(async values => {\n      const params = Object.assign({}, values);\n\n      if (props.data) {\n        params.id = props.data.id;\n      }\n\n      let {\n        data: {\n          code\n        }\n      } = await apiBusiness.editManagerItem(params);\n      setConfirmLoading(false);\n\n      if (code == 0) {\n        form.resetFields();\n        form.setFieldsValue(null);\n        props.close(true, true);\n      }\n    }).catch(err => {\n      setConfirmLoading(false);\n    });\n  };\n\n  const handleSearchDepart = keyword => {\n    const branchNetworkId = form.getFieldValue('branchNetworkId');\n    console.log(branchNetworkId);\n\n    if (!keyword) {\n      if (!branchNetworkId) {\n        return initDepartments();\n      }\n\n      return handleChangeBranch(branchNetworkId, 'change');\n    }\n\n    const arr = departments.filter(v => v.name.indexOf(keyword) > -1);\n    setShowDepartments(arr);\n  };\n\n  const handleChangeBranch = (id, type) => {\n    const item = props.networkDepartmentTree.find(v => v.networkId == id);\n\n    if (item && Array.isArray(item.departmentVoList)) {\n      setDepartments(item.departmentVoList);\n      setShowDepartments(item.departmentVoList);\n    } else {\n      setDepartments([]);\n      setShowDepartments([]);\n    }\n\n    if (!type) {\n      form.setFieldsValue({\n        departmentId: null\n      });\n    }\n  };\n\n  return __jsx(_Modal, {\n    title: props.data ? '编辑信息' : '新增人员',\n    visible: show,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    confirmLoading: confirmLoading\n  }, __jsx(_Form, _extends({}, layout, {\n    form: form,\n    name: \"basic\"\n  }), __jsx(_Form.Item, {\n    label: \"\\u5DE5\\u53F7\",\n    name: \"jobNumber\",\n    rules: [{\n      required: true,\n      message: '工号不可为空'\n    }]\n  }, __jsx(_Input, null)), __jsx(_Form.Item, {\n    label: \"\\u5BA2\\u6237\\u7ECF\\u7406\\u59D3\\u540D\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: '客户经理姓名不可为空'\n    }]\n  }, __jsx(_Input, null)), __jsx(_Form.Item, {\n    label: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n    name: \"mobile\",\n    rules: [{\n      required: true,\n      message: '联系电话不可为空'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!/^1[3456789]\\d{9}$/.test(value)) {\n          return Promise.reject('手机号格式错误');\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n    })]\n  }, __jsx(_Input, {\n    style: {\n      width: '100%'\n    }\n  })), __jsx(_Form.Item, {\n    label: \"\\u6240\\u5C5E\\u673A\\u6784\",\n    name: \"branchNetworkId\",\n    rules: [{\n      required: true,\n      message: '所属机构不可为空'\n    }]\n  }, __jsx(_Select, {\n    onChange: id => handleChangeBranch(id),\n    style: {\n      width: '100%'\n    }\n  }, props.branch.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: v.id\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u5BF9\\u5E94\\u7EC4\\u7EC7\\u67B6\\u6784\",\n    rules: [{\n      required: true,\n      message: '对应组织架构不可为空'\n    }],\n    name: \"departmentId\"\n  }, __jsx(_Select, {\n    showSearch: true,\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u90E8\\u95E8\",\n    filterOption: false,\n    defaultActiveFirstOption: false,\n    onSearch: handleSearchDepart // onChange={handleChangeDepart}\n    ,\n    style: {\n      width: '100%'\n    }\n  }, showDepartments.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.id,\n      key: i\n    }, v.name);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u72B6\\u6001\",\n    name: \"status\",\n    required: true\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: 1\n  }, \"\\u542F\\u7528\"), __jsx(_Radio, {\n    value: 0\n  }, \"\\u7981\\u7528\")))));\n};\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/business/manager/edit.js"],"names":["React","useEffect","useState","apiBusiness","_","RangePicker","layout","labelCol","span","wrapperCol","EditModal","props","show","setShow","confirmLoading","setConfirmLoading","departments","setDepartments","showDepartments","setShowDepartments","form","useForm","setFieldsValue","status","data","console","log","initDepartments","handleCancel","resetFields","close","handleChangeBranch","branchNetworkId","handleOk","validateFields","then","values","params","id","code","editManagerItem","catch","err","handleSearchDepart","keyword","getFieldValue","arr","filter","v","name","indexOf","type","item","networkDepartmentTree","find","networkId","Array","isArray","departmentVoList","departmentId","required","message","validator","rule","value","test","Promise","reject","resolve","width","branch","map","i"],"mappings":"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","sourcesContent":["import {Modal, Form, Input, Radio, InputNumber, TimePicker, Select} from 'antd'\nimport React, {useEffect, useState} from 'react'\nimport apiBusiness from '~/api/business'\nimport _ from 'lodash'\n\nconst {RangePicker} = TimePicker\n\nconst layout = {\n  labelCol: {span: 6},\n  wrapperCol: {span: 15},\n}\n\nconst EditModal = (props) => {\n  const [show, setShow] = useState(props.show)\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const [departments, setDepartments] = useState([])\n  const [showDepartments, setShowDepartments] = useState([])\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    setShow(props.show)\n    if (!props.show) {\n      setConfirmLoading(false)\n    } else {\n      form.setFieldsValue({status: 1, ...props.data})\n      console.log('showModalData:', props.data)\n      initDepartments()\n    }\n  }, [props])\n\n  const handleCancel = () => {\n    form.resetFields()\n    form.setFieldsValue(null)\n    props.close()\n  }\n\n  const initDepartments = () => {\n    if (props.data) {\n      handleChangeBranch(props.data.branchNetworkId, 'init')\n    } else {\n      setDepartments([])\n      setShowDepartments([])\n    }\n  }\n\n  const handleOk = () => {\n    setConfirmLoading(true)\n    form\n      .validateFields()\n      .then(async (values) => {\n        const {...params} = values\n\n        if (props.data) {\n          params.id = props.data.id\n        }\n        let {\n          data: {code},\n        } = await apiBusiness.editManagerItem(params)\n        setConfirmLoading(false)\n        if (code == 0) {\n          form.resetFields()\n          form.setFieldsValue(null)\n          props.close(true, true)\n        }\n      })\n      .catch((err) => {\n        setConfirmLoading(false)\n      })\n  }\n\n  const handleSearchDepart = (keyword) => {\n    const branchNetworkId = form.getFieldValue('branchNetworkId')\n    console.log(branchNetworkId)\n    if (!keyword) {\n      if (!branchNetworkId) {\n        return initDepartments()\n      }\n      return handleChangeBranch(branchNetworkId, 'change')\n    }\n    const arr = departments.filter((v) => v.name.indexOf(keyword) > -1)\n    setShowDepartments(arr)\n  }\n\n  const handleChangeBranch = (id, type) => {\n    const item = props.networkDepartmentTree.find((v) => v.networkId == id)\n    if (item && Array.isArray(item.departmentVoList)) {\n      setDepartments(item.departmentVoList)\n      setShowDepartments(item.departmentVoList)\n    } else {\n      setDepartments([])\n      setShowDepartments([])\n    }\n    if (!type) {\n      form.setFieldsValue({departmentId: null})\n    }\n  }\n\n  return (\n    <Modal\n      title={props.data ? '编辑信息' : '新增人员'}\n      visible={show}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={confirmLoading}\n    >\n      <Form {...layout} form={form} name=\"basic\">\n        <Form.Item\n          label=\"工号\"\n          name=\"jobNumber\"\n          rules={[{required: true, message: '工号不可为空'}]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"客户经理姓名\"\n          name=\"name\"\n          rules={[{required: true, message: '客户经理姓名不可为空'}]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"联系电话\"\n          name=\"mobile\"\n          rules={[\n            {required: true, message: '联系电话不可为空'},\n            ({getFieldValue}) => ({\n              validator(rule, value) {\n                if (!/^1[3456789]\\d{9}$/.test(value)) {\n                  return Promise.reject('手机号格式错误')\n                } else {\n                  return Promise.resolve()\n                }\n              },\n            }),\n          ]}\n        >\n          <Input style={{width: '100%'}} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"所属机构\"\n          name=\"branchNetworkId\"\n          rules={[{required: true, message: '所属机构不可为空'}]}\n        >\n          <Select\n            onChange={(id) => handleChangeBranch(id)}\n            style={{width: '100%'}}\n          >\n            {props.branch.map((v, i) => {\n              return (\n                <Select.Option value={v.id} key={v.id}>\n                  {v.name}\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"对应组织架构\"\n          rules={[{required: true, message: '对应组织架构不可为空'}]}\n          name=\"departmentId\"\n        >\n          <Select\n            showSearch\n            placeholder=\"请选择部门\"\n            filterOption={false}\n            defaultActiveFirstOption={false}\n            onSearch={handleSearchDepart}\n            // onChange={handleChangeDepart}\n            style={{width: '100%'}}\n          >\n            {showDepartments.map((v, i) => {\n              return (\n                <Select.Option value={v.id} key={i}>\n                  {v.name}\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"状态\" name=\"status\" required>\n          <Radio.Group>\n            <Radio value={1}>启用</Radio>\n            <Radio value={0}>禁用</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}