{"ast":null,"code":"import { gwRequest, get, request, post } from '~/utils/fetch';\nexport default {\n  fetch_all_order: params => {\n    return request(`loan/distributionQueryOrderList`, 'get', params);\n  },\n  dateAssign: params => {\n    return request(`loan/distributionAccountManager`, 'post', params);\n  },\n  getBranchList: params => {\n    return gwRequest('bank.api.usermanageraccountservice.searchnetworks', [params]);\n  },\n  getBranch4other: params => {\n    return gwRequest('bank.api.usermanageraccountservice.getnetworkbydepartmentid', [{}]);\n  },\n  getNetworkDepartmentTree: params => {\n    return gwRequest('bank.api.usermanageraccountservice.getnetworkdepartmenttree', [{}]);\n  },\n  editBranchItem: params => {\n    const methodName = params.id ? 'bank.api.usermanageraccountservice.editnetwork' : 'bank.api.usermanageraccountservice.addnetwork';\n    return gwRequest(methodName, [params]);\n  },\n  deleteBranch: id => {\n    return gwRequest('bank.api.usermanageraccountservice.deletenetwork', [{\n      id\n    }]);\n  },\n  getManagerList: params => {\n    return gwRequest('bank.api.usermanageraccountservice.searchallusermanager', [params]);\n  },\n  editManagerItem: params => {\n    const methodName = params.id ? 'bank.api.usermanageraccountservice.updatemanages' : 'bank.api.usermanageraccountservice.insertmanages';\n    return gwRequest(methodName, [params]);\n  },\n  deleteManager: id => {\n    return gwRequest('bank.api.usermanageraccountservice.deletemanages', [{\n      id\n    }]);\n  },\n  updateManagerStatus: params => {\n    return gwRequest('bank.api.usermanageraccountservice.updatemanagesstatus', [params]);\n  },\n  getOrders: params => {\n    return gwRequest('bank.api.usermanageraccountservice.searchorders', [params]);\n  },\n  getUsers: (params = {}) => {\n    return gwRequest('bank.api.usermanageraccountservice.getusermanageraccounttree', [params]);\n  },\n  updateAssign: params => {\n    return gwRequest('bank.api.usermanageraccountservice.giveordertouser', [params]);\n  },\n  getNetWorks: params => {\n    return gwRequest('bank.api.branchnetworkservice.getnetworklist', [params]);\n  },\n  getAchievementByNetwork: params => {\n    return gwRequest('bank.api.newusermanagerachievementservice.getachievementbynetwork', [params]);\n  },\n  getAchievementByManager: params => {\n    return gwRequest('bank.api.newusermanagerachievementservice.getachievementbymanager', [params]);\n  },\n  getManagerByNetworkId: params => {\n    return gwRequest('bank.api.usermanageraccountservice.getmanagerbynetworkid', [params]);\n  },\n  getTaskList: params => {\n    return gwRequest('bank.api.distributestatisticsservice.distributestatistics', [params]);\n  },\n  exportTaskData: params => {\n    return gwRequest('bank.api.distributestatisticsservice.statisticsexport', [params]);\n  },\n  getNetwork4report: () => {\n    return gwRequest('bank.api.newusermanagerachievementservice.getnetworklist', [{}]);\n  },\n  getProduct4report: params => {\n    return gwRequest('bank.api.newusermanagerachievementservice.getproductlist', [params]);\n  },\n  exportReportData: params => {\n    return gwRequest('bank.api.newusermanagerachievementservice.statisticsexport', [params]);\n  },\n  getDepart4select: () => {\n    return gwRequest(`bank.api.usermanageraccountservice.getdepartmentlist`, [{}]);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}