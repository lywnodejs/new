{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/tree/style\";\nimport _Tree from \"antd/lib/tree\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState, useRef } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport api from '~/api/authority';\nvar breadcrumbs = [{\n  text: '权限管理'\n}, {\n  text: '角色管理'\n}, {\n  text: '权限配置'\n}]; // const fixTabs = [\n//   '业务看板',\n//   '产品管理',\n//   '进件管理',\n//   '风控管理',\n//   '信审管理',\n//   '贷后管理',\n//   '营销管理',\n//   '账务管理',\n//   '协议管理',\n//   '权限管理',\n//   '系统设置管理',\n// ]\n\nfunction body(props) {\n  var t = useRef();\n\n  var _useState = useState(true),\n      showLine = _useState[0],\n      setShowLine = _useState[1];\n\n  var _useState2 = useState(-1),\n      activeIndex = _useState2[0],\n      setActiveIndex = _useState2[1];\n\n  var _useState3 = useState([]),\n      allBtnToPageMap = _useState3[0],\n      setAllBtnToPageMap = _useState3[1];\n\n  var _useState4 = useState([]),\n      parentIdMap = _useState4[0],\n      setParentIdMap = _useState4[1];\n\n  var _useState5 = useState([]),\n      fixTabs = _useState5[0],\n      setFixTabs = _useState5[1];\n\n  var _useState6 = useState([{\n    type: 3,\n    expandedKeys: [],\n    checkedKeys: [],\n    autoExpandParent: true,\n    selectedKeys: []\n  }, {\n    type: 4,\n    expandedKeys: [],\n    checkedKeys: [],\n    autoExpandParent: true,\n    selectedKeys: []\n  }]),\n      resourceTypesMap = _useState6[0],\n      setResourceTypesMap = _useState6[1];\n\n  var _useState7 = useState([]),\n      allList = _useState7[0],\n      setAllList = _useState7[1];\n\n  var _useState8 = useState([]),\n      leftList = _useState8[0],\n      setLeftList = _useState8[1];\n\n  var _useState9 = useState([]),\n      rightList = _useState9[0],\n      setRightList = _useState9[1];\n\n  var _useState10 = useState([]),\n      roleName = _useState10[0],\n      setRoleName = _useState10[1];\n\n  useEffect(function () {\n    function fetchData() {\n      fetchRole();\n      fetchList();\n    }\n\n    fetchData();\n  }, []);\n\n  var fetchRole = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$api$get_one_ro, _yield$api$get_one_ro2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get_one_role(props.router.query.roleId);\n\n            case 3:\n              _yield$api$get_one_ro = _context.sent;\n              _yield$api$get_one_ro2 = _yield$api$get_one_ro.data;\n              data = _yield$api$get_one_ro2.data;\n              code = _yield$api$get_one_ro2.code;\n\n              if (code === 0) {\n                setRoleName(data.roleName);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function fetchRole() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var values,\n          _yield$api$get_resour,\n          _yield$api$get_resour2,\n          data,\n          code,\n          list,\n          names,\n          _leftList,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              values = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              _context2.prev = 1;\n              _context2.next = 4;\n              return api.get_resource('get', {\n                roleId: props.router.query.roleId\n              });\n\n            case 4:\n              _yield$api$get_resour = _context2.sent;\n              _yield$api$get_resour2 = _yield$api$get_resour.data;\n              data = _yield$api$get_resour2.data;\n              code = _yield$api$get_resour2.code;\n\n              if (code === 0) {\n                list = [{\n                  id: 0,\n                  resourceType: 3,\n                  hasAuth: 1,\n                  parentResourceId: null,\n                  pageName: '互联网核心系统',\n                  children: data,\n                  key: '0',\n                  title: '互联网核心系统',\n                  disabled: true\n                }];\n                names = data.map(function (v) {\n                  return v.pageName;\n                });\n                setFixTabs(names);\n                addKeyAndTitleToChildren(list[0]);\n                _leftList = JSON.parse(JSON.stringify(list));\n                handleAllCheckAndExpand(list);\n                setAllList(list);\n                delFromList(_leftList);\n                setResourceTypesMap(_toConsumableArray(resourceTypesMap));\n                setAllBtnToPageMap(_toConsumableArray(allBtnToPageMap));\n                setLeftList(_toConsumableArray(_leftList));\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function fetchList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var addKeyAndTitleToChildren = function addKeyAndTitleToChildren(list) {\n    if (Array.isArray(list.children) && list.children.length) {\n      list.children.forEach(function (one) {\n        one.key = String(one.id);\n        one.title = one.pageName;\n        addKeyAndTitleToChildren(one);\n      });\n    }\n  };\n\n  var delFromList = function delFromList(leftList) {\n    for (var i = 0; i < leftList.length; i++) {\n      if (leftList[i].resourceType && leftList[i].resourceType == 4) {\n        allBtnToPageMap.push({\n          id: leftList[i].id,\n          key: String(leftList[i].id),\n          title: leftList[i].pageName,\n          children: leftList[i].children\n        });\n        leftList[i].splice(i, 1);\n      }\n\n      mapAttrToChildren(leftList[i], 1);\n    }\n  };\n\n  var handleAllCheckAndExpand = function handleAllCheckAndExpand(allLists) {\n    if (Array.isArray(allLists) && allLists.length) {\n      allLists.forEach(function (item) {\n        handleOneCheckAndExpand(item, 0);\n        mapAttrToChildren(item, 0, 1);\n      });\n    }\n  };\n\n  var handleOneCheckAndExpand = function handleOneCheckAndExpand(list, last) {\n    // let findOne = resourceTypesMap.filter(\n    //   (one) => one.type == list.resourceType,\n    // )\n    var findOne = [resourceTypesMap[0]]; // console.log(findOne)\n    // debugger\n\n    list.hasAuth && findOne[0].checkedKeys.push(list.key);\n    findOne[0].expandedKeys.push(list.key);\n  };\n\n  var mapAttrToChildren = function mapAttrToChildren(mem, del, last) {\n    var child = mem.children,\n        len = child.length;\n    var delChild = [];\n\n    if (child && len) {\n      for (var i = 0; i < len; i++) {\n        // if (\n        //   del &&\n        //   child[i] &&\n        //   child[i].resourceType &&\n        //   child[i].resourceType == 4\n        // ) {\n        //   delChild.push(child[i])\n        //   allBtnToPageMap.push({\n        //     id: mem.id,\n        //     key: String(mem.id),\n        //     title: mem.pageName,\n        //     children: delChild,\n        //   })\n        //   child.splice(i--, 1)\n        // }\n        if (!del) {\n          child[i].level = last;\n          handleOneCheckAndExpand(child[i], child[i].level);\n          mapIdToParentId(child[i]);\n        }\n\n        if (child[i] && child[i].children && child[i].children.length) {\n          del ? mapAttrToChildren(child[i], 1) : mapAttrToChildren(child[i], 0, ++child[i].level);\n        }\n      }\n    }\n  };\n\n  var mapIdToParentId = function mapIdToParentId(child) {\n    var id = child.id,\n        parentResourceId = child.parentResourceId,\n        pageName = child.pageName;\n    parentIdMap.push({\n      id: id,\n      key: String(id),\n      parentResourceId: parentResourceId,\n      pageName: pageName,\n      title: pageName\n    });\n    setParentIdMap(_toConsumableArray(parentIdMap));\n  };\n\n  var findIndexInResourceTypes = function findIndexInResourceTypes(type) {\n    return resourceTypesMap.findIndex(function (one) {\n      return one.type == type;\n    });\n  };\n\n  var handleKeysToState = function handleKeysToState(type, obj) {\n    var findIndex = findIndexInResourceTypes(type);\n    resourceTypesMap[findIndex][obj[0]] = obj[1];\n\n    if (obj[0] == 'expandedKeys') {\n      resourceTypesMap[findIndex].autoExpandParent = false;\n    }\n\n    setResourceTypesMap(_toConsumableArray(resourceTypesMap));\n  };\n\n  var _onExpand = function onExpand(expandedKeys, info, type) {\n    handleKeysToState(type, ['expandedKeys', expandedKeys]);\n  };\n\n  var findNodeInAllListOne = function findNodeInAllListOne(treeData, id) {\n    var findTree;\n\n    try {\n      var findNodeInAllList = function findNodeInAllList(treeData, id) {\n        if (treeData.id == id) {\n          throw treeData;\n        }\n\n        if (Array.isArray(treeData.children) && treeData.children.length) {\n          for (var i = 0; i < treeData.children.length; i++) {\n            if (treeData.children[i].id == id) {\n              throw treeData.children[i];\n            }\n\n            findNodeInAllList(treeData.children[i], id);\n          }\n        }\n      };\n\n      findNodeInAllList(treeData, id);\n    } catch (res) {\n      findTree = res;\n    }\n\n    return findTree;\n  };\n\n  var _onCheck = function onCheck(_ref3, _ref4, type) {\n    var checked = _ref3.checked;\n    var node = _ref4.node;\n    console.log('onCheck', checked);\n    console.log(node);\n    var keys = [];\n    var rightKeys = [];\n    node.children = findNodeInAllListOne(allList[0], node.id).children;\n\n    if (node.children) {\n      getChildrenKeys(node.children, rightKeys, 1);\n    }\n\n    console.log(rightKeys);\n\n    if (node.children) {\n      getChildrenKeys(node.children, keys);\n    }\n\n    var findIndex = findIndexInResourceTypes(type);\n\n    if (checked.length > resourceTypesMap[findIndex].checkedKeys.length) {\n      var pNode = parentKeys(node.key, type);\n      var pKeys = pNode.map(function (v) {\n        return v.id + '';\n      });\n      var pLeftKeys = pNode.filter(function (v) {\n        return v.resourceType == 3;\n      }).map(function (v) {\n        return v.id + '';\n      });\n      var pRightKeys = pNode.filter(function (v) {\n        return v.resourceType == 4;\n      }).map(function (v) {\n        return v.id + '';\n      });\n      console.log(pKeys, 'cccc');\n      var k = checked.concat(pKeys.filter(function (v) {\n        return !(checked.indexOf(v) > -1);\n      }));\n\n      if (Array.isArray(pLeftKeys) && pLeftKeys.length && type == 4) {\n        var l = resourceTypesMap[0].checkedKeys.concat(pLeftKeys.filter(function (v) {\n          return !(resourceTypesMap[0].checkedKeys.indexOf(v) > -1);\n        }));\n        handleKeysToState(3, ['checkedKeys', _toConsumableArray(l)]);\n      }\n\n      if (Array.isArray(pRightKeys) && pRightKeys.length && type == 4) {\n        var l = resourceTypesMap[0].checkedKeys.concat(pRightKeys.filter(function (v) {\n          return !(resourceTypesMap[0].checkedKeys.indexOf(v) > -1);\n        }));\n        handleKeysToState(4, ['checkedKeys', _toConsumableArray(l)]);\n        return;\n      }\n\n      if (rightKeys.length && type == 3) {\n        console.log(rightKeys);\n        var r = resourceTypesMap[1].checkedKeys.concat(rightKeys.filter(function (v) {\n          return !(resourceTypesMap[1].checkedKeys.indexOf(v) > -1);\n        }));\n        handleKeysToState(4, ['checkedKeys', _toConsumableArray(r)]);\n      }\n\n      handleKeysToState(type, ['checkedKeys', [].concat(_toConsumableArray(k), keys)]);\n    } else {\n      var _k = checked.filter(function (v) {\n        return keys.indexOf(v) == -1;\n      });\n\n      if (rightKeys.length && type == 3) {\n        var _r = resourceTypesMap[1].checkedKeys.filter(function (v) {\n          return rightKeys.indexOf(v) == -1;\n        });\n\n        handleKeysToState(4, ['checkedKeys', _toConsumableArray(_r)]);\n      }\n\n      handleKeysToState(type, ['checkedKeys', _k]);\n    }\n  };\n\n  var parentKeys = function parentKeys(key, type) {\n    var pKeys = [];\n    var pNode = [];\n    var treeData = allList;\n\n    for (var index in treeData) {\n      var tree = treeData[index];\n      pKeys = [];\n      pNode = [];\n\n      if (Array.isArray(tree.children) && tree.children.length > 0) {\n        pNode.push(tree);\n        getParentKeys(tree, key, pKeys, pNode);\n        console.log(pKeys);\n        console.log(pNode);\n\n        if (pKeys.length === 0) {\n          pNode.pop();\n        }\n      }\n\n      if (pKeys.length > 0) {\n        return pNode;\n      }\n    }\n\n    return pNode;\n  };\n\n  var getParentKeys = function getParentKeys(tree, key, pKeys, pNode) {\n    for (var index in tree.children) {\n      var item = tree.children[index];\n\n      if (item.id == key) {\n        pNode.push(item);\n        pKeys.push(tree.id);\n        return;\n      } else {\n        if (Array.isArray(item.children) && item.children.length > 0) {\n          pNode.push(item);\n          getParentKeys(item, key, pKeys, pNode);\n\n          if (pKeys.length === 0) {\n            pNode.pop();\n          } else {\n            return;\n          }\n        }\n      }\n    }\n  };\n\n  var getChildrenKeys = function getChildrenKeys(tree, ids, isFilterType) {\n    tree.forEach(function (item) {\n      if (isFilterType) {\n        if (item.resourceType == 4) {\n          ids.push(item.key);\n        }\n      } else {\n        ids.push(item.key);\n      }\n\n      if (Array.isArray(item.children)) {\n        getChildrenKeys(item.children, ids, isFilterType);\n      }\n    });\n  };\n\n  var _onSelect = function onSelect(selectedKeys, info, type) {\n    console.log('onSelect', selectedKeys); // if (type == 4) {\n    //   return\n    // }\n\n    var findKey = allBtnToPageMap.filter(function (one) {\n      return one.id == selectedKeys;\n    });\n    handleKeysToState(type, ['selectedKeys', selectedKeys]);\n    setRightList(findKey.length ? findKey[0].children : []);\n  };\n\n  var findParentById = function findParentById(id) {\n    return parentIdMap.filter(function (one) {\n      return one.id == id;\n    })[0];\n  };\n\n  var renderTree = function renderTree(_ref5, treeData) {\n    var expandedKeys = _ref5.expandedKeys,\n        autoExpandParent = _ref5.autoExpandParent,\n        checkedKeys = _ref5.checkedKeys,\n        selectedKeys = _ref5.selectedKeys,\n        type = _ref5.type;\n    return __jsx(_Tree, {\n      ref: t,\n      checkable: true,\n      checkStrictly: true,\n      showLine: showLine,\n      onExpand: function onExpand(expandedKeys, info) {\n        return _onExpand(expandedKeys, info, type);\n      },\n      expandedKeys: _toConsumableArray(expandedKeys),\n      autoExpandParent: autoExpandParent,\n      onCheck: function onCheck(checkedKeys, info) {\n        return _onCheck(checkedKeys, info, type);\n      },\n      checkedKeys: _toConsumableArray(checkedKeys),\n      onSelect: function onSelect(selectedKeys, info) {\n        return _onSelect(selectedKeys, info, type);\n      },\n      selectedKeys: _toConsumableArray(selectedKeys),\n      treeData: treeData\n    });\n  };\n\n  var onRefresh = function onRefresh() {\n    location.reload();\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var checkedKeys, checkedKeysFt, resourceIds, _loop, i, _ret, _yield$api$put_resour, _yield$api$put_resour2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              checkedKeys = resourceTypesMap[0].checkedKeys;\n              checkedKeysFt = resourceTypesMap[1].checkedKeys;\n              resourceIds = [].concat(_toConsumableArray(checkedKeys), _toConsumableArray(checkedKeysFt));\n\n              _loop = function _loop() {\n                if (resourceIds[i] == 0) {\n                  return \"continue\";\n                }\n\n                var _findParentById = findParentById(resourceIds[i]),\n                    parentResourceId = _findParentById.parentResourceId;\n\n                if (!resourceIds.some(function (item) {\n                  return item == parentResourceId;\n                })) {\n                  var _findParentById2 = findParentById(parentResourceId),\n                      pageName = _findParentById2.pageName;\n\n                  _message.error(\"\\u8BF7\\u5148\\u9009\\u62E9\\u7236\\u8282\\u70B9\\\"\".concat(pageName, \"\\\"\"));\n\n                  return {\n                    v: false\n                  };\n                }\n              };\n\n              i = 0;\n\n            case 5:\n              if (!(i < resourceIds.length)) {\n                _context3.next = 16;\n                break;\n              }\n\n              _ret = _loop();\n              _context3.t0 = _ret;\n              _context3.next = _context3.t0 === \"continue\" ? 10 : 11;\n              break;\n\n            case 10:\n              return _context3.abrupt(\"continue\", 13);\n\n            case 11:\n              if (!(typeof _ret === \"object\")) {\n                _context3.next = 13;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", _ret.v);\n\n            case 13:\n              i++;\n              _context3.next = 5;\n              break;\n\n            case 16:\n              resourceIds = resourceIds.join(',');\n              _context3.prev = 17;\n              _context3.next = 20;\n              return api.put_resource({\n                roleId: Number(props.router.query.roleId),\n                resourceIds: resourceIds\n              });\n\n            case 20:\n              _yield$api$put_resour = _context3.sent;\n              _yield$api$put_resour2 = _yield$api$put_resour.data;\n              data = _yield$api$put_resour2.data;\n              code = _yield$api$put_resour2.code;\n\n              if (code == 0) {\n                _message.success('保存成功');\n\n                Router.back();\n              }\n\n              _context3.next = 30;\n              break;\n\n            case 27:\n              _context3.prev = 27;\n              _context3.t1 = _context3[\"catch\"](17);\n              console.log('Failed:', _context3.t1);\n\n            case 30:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[17, 27]]);\n    }));\n\n    return function onSubmit() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var onSwitch = function onSwitch(index, one) {\n    var nodes = document.getElementsByClassName('ant-tree-list-holder-inner')[0].getElementsByClassName('ant-tree-node-content-wrapper');\n\n    var findNode = _toConsumableArray(nodes).find(function (node) {\n      return node.title === one;\n    });\n\n    document.getElementById('primaryLayout').scrollTop = findNode.offsetTop + 128;\n    setActiveIndex(index);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '46px'\n    }\n  }, __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(\"div\", {\n    className: \"authorTab\"\n  }, fixTabs.map(function (one, index) {\n    return __jsx(\"p\", {\n      style: {\n        margin: '1em 15px 1em 0'\n      },\n      className: activeIndex == index ? 'tabActive' : '',\n      onClick: function onClick() {\n        return onSwitch(index, one);\n      }\n    }, one);\n  }), __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      right: '5px',\n      top: '9px'\n    }\n  }, __jsx(_Button, {\n    onClick: onRefresh\n  }, \"\\u5237\\u65B0\"), __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"button\",\n    onClick: onSubmit,\n    style: {\n      marginLeft: '5px'\n    }\n  }, \"\\u4FDD\\u5B58\"))), __jsx(_Card, {\n    title: \"\\u5F53\\u524D\\u89D2\\u8272\\uFF1A\".concat(roleName)\n  }, __jsx(_Row, {\n    gutter: 24\n  }, __jsx(_Col, {\n    span: 24\n  }, __jsx(_Card, {\n    type: \"inner\",\n    title: \"\\u9875\\u9762\"\n  }, renderTree(resourceTypesMap[0], leftList)))))));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}));\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}