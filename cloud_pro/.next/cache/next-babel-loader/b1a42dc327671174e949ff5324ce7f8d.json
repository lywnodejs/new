{"ast":null,"code":"import \"antd/lib/progress/style\";\nimport _Progress from \"antd/lib/progress\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '~/components/Layout';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useCookies } from 'react-cookie';\nimport { useEffect, useState } from 'react';\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart, Bar, Area } from 'recharts';\nimport { formatMoney, computeUnit } from '~/utils';\nimport api from '~/api/authority';\nimport apiProduct from '~/api/product';\nconst colors = ['#1890ff', '#5cc35c', '#fadb14', '#f5222d', '#fa8c16', '#faad14', '#a0d911', '#13c2c2', '#722ed1', '#eb2f96', '#bfbfbf', '#2f54eb'];\n\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: topIndexDatas,\n    1: setTopIndexDatas\n  } = useState([]);\n  const {\n    0: timingDatas,\n    1: setTimingDatas\n  } = useState([]);\n  const {\n    0: listCoreIndexYear,\n    1: setListCoreIndexYear\n  } = useState([]);\n  const {\n    0: dayAddLoanAmountList,\n    1: setDayAddLoanAmountList\n  } = useState([]);\n  const {\n    0: dayAddLoanBalanceAmountList,\n    1: setDayAddLoanBalanceAmountList\n  } = useState([]);\n  const {\n    0: dayAddInterestAmountList,\n    1: setDayAddInterestAmountList\n  } = useState([]);\n  const {\n    0: dayAddBadLoanAmountList,\n    1: setDayAddBadLoanAmountList\n  } = useState([]);\n  const {\n    0: dayAddLoanUserList,\n    1: setDayAddLoanUserList\n  } = useState([]);\n  const {\n    0: coreIndexYears,\n    1: setCoreIndexYears\n  } = useState([]);\n  const {\n    0: coreIndex,\n    1: setCoreIndex\n  } = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {\n      amount: 0,\n      count: 0,\n      peopleNumber: 0\n    },\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null\n  });\n  const {\n    0: coreIndexBadLoan,\n    1: setCoreIndexBadLoan\n  } = useState({});\n  const {\n    0: coreIndexBadLoanAmount,\n    1: setCoreIndexBadLoanAmount\n  } = useState([]);\n  const {\n    0: coreIndexOverdue,\n    1: setCoreIndexOverdue\n  } = useState({});\n  const {\n    0: coreIndexOverdueAmount,\n    1: setCoreIndexOverdueAmount\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: productId,\n    1: setProductId\n  } = useState('-1');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await apiProduct.get_products({\n          tenantId: cookies.tenantId\n        });\n\n        if (code == 0) {\n          setProductList(data);\n          data && data.length && setProductId(String(data[0].id));\n          fetchIndex(data[0].id);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    let {\n      dayAddLoanAmount,\n      dayAddLoanBalanceAmount,\n      dayAddInterestAmount,\n      dayAddBadLoanAmount,\n      dayAddLoanUser,\n      historyLoanAmount,\n      historyLoanBalanceAmount,\n      historyLoanNum,\n      historyLoanUser,\n      historyInterestAmount,\n      listCoreIndexYear,\n      dayAddLoanAmountList,\n      dayAddLoanBalanceAmountList,\n      dayAddInterestAmountList,\n      dayAddBadLoanAmountList,\n      dayAddLoanUserList,\n      yearBadLoanAmount,\n      yearInterestAmount,\n      yearProfit,\n      coreIndexNowBadLoan,\n      coreIndexNowOverdue\n    } = coreIndex;\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {\n      rate: 0\n    };\n    coreIndexNowOverdue = coreIndexNowOverdue || {\n      rate: 0\n    };\n    setCoreIndexBadLoan(coreIndexNowBadLoan);\n    setCoreIndexOverdue(coreIndexNowOverdue);\n    setListCoreIndexYear(listCoreIndexYear);\n    setDayAddLoanAmountList(dayAddLoanAmountList);\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList);\n    setDayAddInterestAmountList(dayAddInterestAmountList);\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList);\n    setDayAddLoanUserList(dayAddLoanUserList);\n    setCoreIndexBadLoanAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowBadLoan.amount || 0,\n      tips: '不良订单的剩余贷款余额（本金部分）'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowBadLoan.count || 0,\n      tips: '订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowBadLoan.peopleNumber || 0,\n      tips: '用户的人数'\n    }]);\n    setCoreIndexOverdueAmount([{\n      title: '总本金',\n      unit: '元',\n      value: coreIndexNowOverdue.amount || 0,\n      tips: '逾期订单的逾期期数本金之和'\n    }, {\n      title: '总笔数',\n      unit: '笔',\n      value: coreIndexNowOverdue.count || 0,\n      tips: '逾期订单的笔数'\n    }, {\n      title: '总客户数',\n      unit: '人',\n      value: coreIndexNowOverdue.peopleNumber || 0,\n      tips: '用户的人数'\n    }]);\n    setTopIndexDatas([{\n      title: '当日新增(放款金额)',\n      tips: '当日放款金额的累计',\n      unit: '元',\n      value: dayAddLoanAmount\n    }, {\n      title: '当日净增 (贷款余额)',\n      tips: '当日放款金额-当日还款金额',\n      unit: '元',\n      value: dayAddLoanBalanceAmount\n    }, {\n      title: '当日实收利息',\n      tips: '当日结息金额',\n      unit: '元',\n      value: dayAddInterestAmount\n    }, {\n      title: '当日新增(60+不良本金)',\n      tips: '当日新增的不良（逾期60+）本金',\n      unit: '元',\n      value: dayAddBadLoanAmount\n    }, {\n      title: '当日新增（放款用户）',\n      tips: '当日放款用户数的累计',\n      unit: '人',\n      value: dayAddLoanUser\n    }]);\n    setTimingDatas([{\n      title: '累放金额',\n      tips: '历史放款本金金额累计',\n      unit: '元',\n      value: historyLoanAmount\n    }, {\n      title: '贷款余额',\n      tips: '所有在途订单(含逾期)的剩余待还本金之和',\n      unit: '元',\n      value: historyLoanBalanceAmount\n    }, {\n      title: '累放笔数',\n      tips: '历史所有用户放款笔数',\n      unit: '笔',\n      value: historyLoanNum\n    }, {\n      title: '累放用户数',\n      tips: '历史放款用户数',\n      unit: '人',\n      value: historyLoanUser\n    }, {\n      title: '实收息费（包含利息罚息）',\n      tips: '利息+罚息',\n      unit: '元',\n      value: historyInterestAmount\n    }]);\n    setCoreIndexYears([{\n      title: '年度利润率（未剔除获客成本）',\n      tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n      unit: '',\n      value: yearProfit\n    }, {\n      title: '年度实收利息',\n      tips: '当前年内的结息之和',\n      unit: '元',\n      value: yearInterestAmount\n    }, {\n      title: '年度净不良本金（60+）',\n      tips: '当前年内的不良本金之和',\n      unit: '元',\n      value: yearBadLoanAmount\n    }]);\n  }, [coreIndex]);\n\n  const fetchIndex = async id => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.get_core_index({\n        productId: id\n      });\n\n      if (code == 0 && data) {\n        setCoreIndex(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const toWan = (decimal, fixed = 0) => `${(decimal / 10000).toFixed(fixed)}万`;\n\n  const toBaiFen = (decimal, fixed = 0) => `${decimal}%`;\n\n  const changeProduct = val => {\n    setProductId(val);\n    fetchIndex(val);\n  };\n\n  return __jsx(Layout, {\n    isGray: true\n  }, __jsx(_Row, {\n    gutter: [30, 0],\n    style: {\n      marginLeft: 0\n    }\n  }, topIndexDatas.length ? topIndexDatas.slice(0, 1).map((item, i) => __jsx(_Col, {\n    span: 5,\n    key: i,\n    style: {\n      paddingLeft: i == 0 ? 0 : null\n    }\n  }, __jsx(_Card, {\n    bodyStyle: {\n      padding: '12px 24px'\n    }\n  }, __jsx(\"span\", {\n    style: {\n      color: '#b0b0b0',\n      marginRight: '8px'\n    }\n  }, item.title), __jsx(_Tooltip, {\n    title: item.tips\n  }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n    style: {\n      fontSize: '26px',\n      fontWeight: 'bold'\n    }\n  }, formatMoney(item.value)), __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, item.unit)), __jsx(\"div\", {\n    style: {\n      color: '#595858'\n    }\n  }, computeUnit(item.value))))) : null, __jsx(_Col, {\n    span: 19,\n    style: {\n      textAlign: 'right'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: '20px 0 20px'\n    }\n  }, __jsx(_Select, {\n    style: {\n      width: '130px'\n    },\n    onChange: val => changeProduct(val),\n    value: productList.find(v => v.id == productId) && productList.find(v => v.id == productId).name\n  }, productList.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.id\n  }, v.name)))), __jsx(\"div\", null, \"\\u6570\\u636E\\u66F4\\u65B0\\u65F6\\u95F4\\uFF1A\", coreIndex.reportTime))), __jsx(_Card, {\n    title: \"\\u8FD130\\u65E5\\u65B0\\u589E\\u653E\\u6B3E\\u91D1\\u989D\",\n    style: {\n      width: '100%',\n      marginTop: '0px'\n    },\n    bodyStyle: {\n      padding: '24px 24px 10px'\n    }\n  }, __jsx(ComposedChart, {\n    width: 1100,\n    height: 240,\n    data: dayAddLoanAmountList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toWan\n  }), __jsx(Tooltip, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Bar, {\n    dataKey: \"amount\",\n    barSize: 16,\n    fill: \"#1890ff\",\n    name: \"\\u65B0\\u589E\\u653E\\u6B3E\\u91D1\\u989D\"\n  }))), __jsx(_Row, {\n    gutter: [30, 0],\n    style: {\n      marginLeft: 0\n    }\n  }, topIndexDatas.length ? topIndexDatas.slice(1).map((item, i) => __jsx(_Col, {\n    span: 6,\n    key: i,\n    style: {\n      paddingLeft: i == 0 ? 0 : null,\n      paddingRight: i != topIndexDatas.length - 2 ? 0 : '15px'\n    }\n  }, __jsx(_Card, null, __jsx(\"span\", {\n    style: {\n      color: '#b0b0b0',\n      marginRight: '8px'\n    }\n  }, item.title), __jsx(_Tooltip, {\n    title: item.tips\n  }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n    style: {\n      fontSize: '26px',\n      fontWeight: 'bold'\n    }\n  }, formatMoney(item.value)), __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, item.unit)), __jsx(\"div\", {\n    style: {\n      color: '#595858',\n      height: '22px'\n    }\n  }, computeUnit(item.value)), __jsx(\"div\", null, function () {\n    if (i == 0) {\n      return __jsx(ComposedChart, {\n        width: 260,\n        height: 80,\n        data: dayAddLoanBalanceAmountList\n      }, __jsx(XAxis, {\n        dataKey: \"reportTime\",\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(YAxis, {\n        tickFormatter: toWan,\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(Area, {\n        type: \"monotone\",\n        dataKey: \"amount\",\n        fill: \"#d9f5f8\",\n        stroke: \"#79dbe6\"\n      }));\n    }\n\n    if (i == 1) {\n      return __jsx(ComposedChart, {\n        width: 260,\n        height: 80,\n        data: dayAddInterestAmountList\n      }, __jsx(XAxis, {\n        dataKey: \"reportTime\",\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(YAxis, {\n        tickFormatter: toWan,\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(Bar, {\n        dataKey: \"amount\",\n        barSize: 10,\n        fill: \"#1890ff\"\n      }));\n    }\n\n    if (i == 2) {\n      return __jsx(ComposedChart, {\n        width: 260,\n        height: 80,\n        data: dayAddBadLoanAmountList\n      }, __jsx(XAxis, {\n        dataKey: \"reportTime\",\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(YAxis, {\n        tickFormatter: toWan,\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(Bar, {\n        dataKey: \"amount\",\n        barSize: 10,\n        fill: \"#1890ff\"\n      }));\n    }\n\n    if (i == 3) {\n      return __jsx(ComposedChart, {\n        width: 260,\n        height: 80,\n        data: dayAddLoanUserList\n      }, __jsx(XAxis, {\n        dataKey: \"reportTime\",\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(YAxis, {\n        tickFormatter: toWan,\n        hide: true,\n        interval: \"preserveStartEnd\"\n      }), __jsx(Area, {\n        type: \"monotone\",\n        dataKey: \"amount\",\n        fill: \"#d9f5f8\",\n        stroke: \"#79dbe6\"\n      }));\n    }\n  }())))) : null), __jsx(_Card, {\n    title: \"\\u7D2F\\u8BA1\\u4EA4\\u6613\\u60C5\\u51B5\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, {\n    gutter: [30, 0]\n  }, timingDatas.length ? timingDatas.map((item, i) => __jsx(_Col, {\n    span: 4.6,\n    key: i\n  }, __jsx(_Card, {\n    bordered: false\n  }, __jsx(\"span\", {\n    style: {\n      color: '#b0b0b0',\n      marginRight: '8px'\n    }\n  }, item.title), __jsx(_Tooltip, {\n    title: item.tips\n  }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n    style: {\n      fontSize: '26px',\n      fontWeight: 'bold'\n    }\n  }, formatMoney(item.value)), __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, item.unit)), __jsx(\"div\", {\n    style: {\n      color: '#595858',\n      height: '22px'\n    }\n  }, computeUnit(item.value))))) : null)), __jsx(_Card, {\n    title: \"\\u5E74\\u5EA6\\u6307\\u6807\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h4\", {\n    style: {\n      position: 'relative',\n      width: '800px'\n    }\n  }, \"\\u5E74\\u65E5\\u5747\\u4F59\\u989D\\u53CA\\u65E5\\u5747\\u4F59\\u989D\", __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      right: 0,\n      top: '5px'\n    }\n  }, coreIndex.yearMonth, \"\\u6708\")), __jsx(ComposedChart, {\n    width: 800,\n    height: 360,\n    data: listCoreIndexYear\n  }, __jsx(XAxis, {\n    dataKey: \"day\"\n  }), __jsx(YAxis, {\n    tickFormatter: toWan\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), __jsx(Bar, {\n    dataKey: \"dailyAmount\",\n    barSize: 20,\n    fill: \"#1890ff\",\n    name: \"\\u65E5\\u5747\\u4F59\\u989D\"\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"yearDailyAmount\",\n    stroke: \"#5cc35c\",\n    name: \"\\u5E74\\u65E5\\u5747\\u4F59\\u989D\"\n  }))), __jsx(_Col, {\n    span: 6\n  }, coreIndexYears.length ? coreIndexYears.map((item, i) => __jsx(_Card, {\n    key: i\n  }, __jsx(\"span\", {\n    style: {\n      color: '#b0b0b0',\n      marginRight: '8px'\n    }\n  }, item.title), __jsx(_Tooltip, {\n    title: item.tips\n  }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n    style: {\n      fontSize: '26px',\n      fontWeight: 'bold'\n    }\n  }, formatMoney(item.value)), __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, item.unit)), __jsx(\"div\", {\n    style: {\n      color: '#595858'\n    }\n  }, computeUnit(item.value)))) : null))), __jsx(_Card, {\n    title: \"\\u5F53\\u524D\\u903E\\u671F\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h4\", {\n    style: {\n      position: 'relative',\n      width: '800px'\n    }\n  }, \"\\u5206\\u6E20\\u9053\\u5206\\u65E5\\u903E\\u671F\\u7387\", __jsx(_Tooltip, {\n    title: '统计日当日入逾期单数/统计日前日到期单数'\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(ComposedChart, {\n    width: 800,\n    height: 360,\n    data: coreIndexOverdue.coreIndexBadLoanList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toBaiFen\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), Array.isArray(coreIndexOverdue.channelNames) && coreIndexOverdue.channelNames.map((v, i) => {\n    return __jsx(Line, {\n      key: i,\n      type: \"monotone\",\n      dataKey: `channelRateList[${i}].rate`,\n      stroke: colors[i],\n      name: v\n    });\n  }))), __jsx(_Col, {\n    span: 6\n  }, __jsx(_Card, {\n    bodyStyle: {\n      padding: '15px'\n    }\n  }, __jsx(_Row, {\n    gutter: [10, 0],\n    align: \"bottom\"\n  }, __jsx(_Col, null, __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      fontSize: '16px',\n      marginBottom: '5px'\n    }\n  }, coreIndexOverdue.productName), __jsx(\"div\", {\n    style: {\n      color: '#b0b0b0'\n    }\n  }, \"\\u603B\\u903E\\u671F\\u7387\", __jsx(_Tooltip, {\n    title: \"\\u5F53\\u524D\\u903E\\u671F\\u5355\\u6570/\\u5F53\\u524D\\u603B\\u653E\\u6B3E\\u5355\\u6570*100\"\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(\"div\", {\n    style: {\n      fontSize: '24px',\n      fontWeight: 500\n    }\n  }, coreIndexOverdue.rate || 0, \"%\"))), __jsx(_Col, null, __jsx(_Progress, {\n    type: \"circle\",\n    width: 66,\n    percent: coreIndexOverdue.rate || 0,\n    showInfo: false,\n    strokeLinecap: \"square\",\n    strokeWidth: \"16\"\n  })))), coreIndexOverdueAmount.length ? coreIndexOverdueAmount.map((item, i) => {\n    return __jsx(_Card, {\n      key: i,\n      bodyStyle: {\n        padding: '15px'\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858'\n      }\n    }, computeUnit(item.value)));\n  }) : null))), __jsx(_Card, {\n    title: \"\\u5F53\\u524D\\u4E0D\\u826F(\\u903E\\u671F60+)\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    }\n  }, __jsx(_Row, null, __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h4\", {\n    style: {\n      position: 'relative',\n      width: '800px'\n    }\n  }, \"\\u5206\\u6E20\\u9053\\u5206\\u65E5\\u4E0D\\u826F\\u7387\", __jsx(_Tooltip, {\n    title: '统计日当日不良单数/统计日前T-60到期单数'\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(ComposedChart, {\n    width: 800,\n    height: 360,\n    data: coreIndexBadLoan.coreIndexBadLoanList\n  }, __jsx(XAxis, {\n    dataKey: \"reportTime\"\n  }), __jsx(YAxis, {\n    tickFormatter: toBaiFen\n  }), __jsx(Tooltip, null), __jsx(Legend, null), __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    vertical: false\n  }), Array.isArray(coreIndexBadLoan.channelNames) && coreIndexBadLoan.channelNames.map((v, i) => {\n    return __jsx(Line, {\n      key: i,\n      type: \"monotone\",\n      dataKey: `channelRateList[${i}].rate`,\n      stroke: colors[i],\n      name: v\n    });\n  }))), __jsx(_Col, {\n    span: 6\n  }, __jsx(_Card, {\n    bodyStyle: {\n      padding: '15px'\n    }\n  }, __jsx(_Row, {\n    gutter: [10, 0],\n    align: \"bottom\"\n  }, __jsx(_Col, null, __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      fontSize: '16px',\n      marginBottom: '5px'\n    }\n  }, coreIndexBadLoan.productName), __jsx(\"div\", {\n    style: {\n      color: '#b0b0b0'\n    }\n  }, \"\\u603B\\u4E0D\\u826F\\u7387\", __jsx(_Tooltip, {\n    title: \"\\u5F53\\u524D\\u4E0D\\u826F\\u5355\\u6570\\uFF08\\u903E\\u671F60\\u5929\\u4EE5\\u4E0A\\u8BA2\\u5355\\uFF09/\\u5F53\\u524D\\u603B\\u653E\\u6B3E\\u5355\\u6570*100\"\n  }, __jsx(ExclamationCircleOutlined, null))), __jsx(\"div\", {\n    style: {\n      fontSize: '24px',\n      fontWeight: 500\n    }\n  }, coreIndexBadLoan.rate || 0, \"%\"))), __jsx(_Col, null, __jsx(_Progress, {\n    type: \"circle\",\n    width: 66,\n    percent: coreIndexBadLoan.rate || 0,\n    showInfo: false,\n    strokeLinecap: \"square\",\n    strokeWidth: \"16\"\n  })))), coreIndexBadLoanAmount.length ? coreIndexBadLoanAmount.map((item, i) => {\n    return __jsx(_Card, {\n      key: i,\n      bodyStyle: {\n        padding: '15px'\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: '#b0b0b0',\n        marginRight: '8px'\n      }\n    }, item.title), __jsx(_Tooltip, {\n      title: item.tips\n    }, __jsx(ExclamationCircleOutlined, null)), __jsx(\"div\", null, __jsx(\"span\", {\n      style: {\n        fontSize: '26px',\n        fontWeight: 'bold'\n      }\n    }, formatMoney(item.value)), __jsx(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, item.unit)), __jsx(\"div\", {\n      style: {\n        color: '#595858'\n      }\n    }, computeUnit(item.value)));\n  }) : null))));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/dashboard/index.js"],"names":["Layout","ExclamationCircleOutlined","useCookies","useEffect","useState","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ComposedChart","Bar","Area","formatMoney","computeUnit","api","apiProduct","colors","body","props","cookies","topIndexDatas","setTopIndexDatas","timingDatas","setTimingDatas","listCoreIndexYear","setListCoreIndexYear","dayAddLoanAmountList","setDayAddLoanAmountList","dayAddLoanBalanceAmountList","setDayAddLoanBalanceAmountList","dayAddInterestAmountList","setDayAddInterestAmountList","dayAddBadLoanAmountList","setDayAddBadLoanAmountList","dayAddLoanUserList","setDayAddLoanUserList","coreIndexYears","setCoreIndexYears","coreIndex","setCoreIndex","dayAddLoanAmount","dayAddLoanBalanceAmount","dayAddInterestAmount","dayAddBadLoanAmount","dayAddLoanUser","historyLoanAmount","historyLoanBalanceAmount","historyLoanNum","historyLoanUser","historyInterestAmount","yearBadLoanAmount","yearInterestAmount","yearProfit","coreIndexNowBadLoan","amount","count","peopleNumber","coreIndexNowOverdue","yearMonth","reportTime","coreIndexBadLoan","setCoreIndexBadLoan","coreIndexBadLoanAmount","setCoreIndexBadLoanAmount","coreIndexOverdue","setCoreIndexOverdue","coreIndexOverdueAmount","setCoreIndexOverdueAmount","productList","setProductList","productId","setProductId","fetchData","data","code","get_products","tenantId","length","String","id","fetchIndex","error","console","log","rate","title","unit","value","tips","get_core_index","err","toWan","decimal","fixed","toFixed","toBaiFen","changeProduct","val","marginLeft","slice","map","item","i","paddingLeft","padding","color","marginRight","fontSize","fontWeight","textAlign","margin","width","find","v","name","marginTop","paddingRight","height","position","right","top","coreIndexBadLoanList","Array","isArray","channelNames","marginBottom","productName","getInitialProps"],"mappings":"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","sourcesContent":["import {Layout} from '~/components/Layout'\nimport {\n  message,\n  Card,\n  Row,\n  Col,\n  Tooltip as TooltipAnt,\n  Progress,\n  Select,\n} from 'antd'\nimport {ExclamationCircleOutlined} from '@ant-design/icons'\nimport {useCookies} from 'react-cookie'\nimport {useEffect, useState} from 'react'\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ComposedChart,\n  Bar,\n  Area,\n} from 'recharts'\nimport {formatMoney, computeUnit} from '~/utils'\nimport api from '~/api/authority'\nimport apiProduct from '~/api/product'\n\nconst colors = [\n  '#1890ff',\n  '#5cc35c',\n  '#fadb14',\n  '#f5222d',\n  '#fa8c16',\n  '#faad14',\n  '#a0d911',\n  '#13c2c2',\n  '#722ed1',\n  '#eb2f96',\n  '#bfbfbf',\n  '#2f54eb',\n]\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId'])\n  const [topIndexDatas, setTopIndexDatas] = useState([])\n  const [timingDatas, setTimingDatas] = useState([])\n  const [listCoreIndexYear, setListCoreIndexYear] = useState([])\n  const [dayAddLoanAmountList, setDayAddLoanAmountList] = useState([])\n  const [\n    dayAddLoanBalanceAmountList,\n    setDayAddLoanBalanceAmountList,\n  ] = useState([])\n  const [dayAddInterestAmountList, setDayAddInterestAmountList] = useState([])\n  const [dayAddBadLoanAmountList, setDayAddBadLoanAmountList] = useState([])\n  const [dayAddLoanUserList, setDayAddLoanUserList] = useState([])\n\n  const [coreIndexYears, setCoreIndexYears] = useState([])\n  const [coreIndex, setCoreIndex] = useState({\n    dayAddLoanAmount: 0,\n    dayAddLoanBalanceAmount: 0,\n    dayAddInterestAmount: 0,\n    dayAddBadLoanAmount: 0,\n    dayAddLoanUser: 0,\n    historyLoanAmount: 0,\n    historyLoanBalanceAmount: 0,\n    historyLoanNum: 0,\n    historyLoanUser: 0,\n    historyInterestAmount: 0,\n    listCoreIndexYear: [],\n    dayAddLoanAmountList: [],\n    dayAddLoanBalanceAmountList: [],\n    dayAddInterestAmountList: [],\n    dayAddBadLoanAmountList: [],\n    dayAddLoanUserList: [],\n    yearBadLoanAmount: 0,\n    yearInterestAmount: 0,\n    yearProfit: 0,\n    coreIndexNowBadLoan: {amount: 0, count: 0, peopleNumber: 0},\n    coreIndexNowOverdue: {},\n    yearMonth: null,\n    reportTime: null,\n  })\n  const [coreIndexBadLoan, setCoreIndexBadLoan] = useState({})\n  const [coreIndexBadLoanAmount, setCoreIndexBadLoanAmount] = useState([])\n  const [coreIndexOverdue, setCoreIndexOverdue] = useState({})\n  const [coreIndexOverdueAmount, setCoreIndexOverdueAmount] = useState([])\n  const [productList, setProductList] = useState([])\n  const [productId, setProductId] = useState('-1')\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {data, code},\n        } = await apiProduct.get_products({tenantId: cookies.tenantId})\n        if (code == 0) {\n          setProductList(data)\n          data && data.length && setProductId(String(data[0].id))\n          fetchIndex(data[0].id)\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    let {\n      dayAddLoanAmount,\n      dayAddLoanBalanceAmount,\n      dayAddInterestAmount,\n      dayAddBadLoanAmount,\n      dayAddLoanUser,\n      historyLoanAmount,\n      historyLoanBalanceAmount,\n      historyLoanNum,\n      historyLoanUser,\n      historyInterestAmount,\n      listCoreIndexYear,\n      dayAddLoanAmountList,\n      dayAddLoanBalanceAmountList,\n      dayAddInterestAmountList,\n      dayAddBadLoanAmountList,\n      dayAddLoanUserList,\n      yearBadLoanAmount,\n      yearInterestAmount,\n      yearProfit,\n      coreIndexNowBadLoan,\n      coreIndexNowOverdue,\n    } = coreIndex\n    coreIndexNowBadLoan = coreIndexNowBadLoan || {rate: 0}\n    coreIndexNowOverdue = coreIndexNowOverdue || {rate: 0}\n    setCoreIndexBadLoan(coreIndexNowBadLoan)\n    setCoreIndexOverdue(coreIndexNowOverdue)\n    setListCoreIndexYear(listCoreIndexYear)\n    setDayAddLoanAmountList(dayAddLoanAmountList)\n    setDayAddLoanBalanceAmountList(dayAddLoanBalanceAmountList)\n    setDayAddInterestAmountList(dayAddInterestAmountList)\n    setDayAddBadLoanAmountList(dayAddBadLoanAmountList)\n    setDayAddLoanUserList(dayAddLoanUserList)\n\n    setCoreIndexBadLoanAmount([\n      {\n        title: '总本金',\n        unit: '元',\n        value: coreIndexNowBadLoan.amount || 0,\n        tips: '不良订单的剩余贷款余额（本金部分）',\n      },\n      {\n        title: '总笔数',\n        unit: '笔',\n        value: coreIndexNowBadLoan.count || 0,\n        tips: '订单的笔数',\n      },\n      {\n        title: '总客户数',\n        unit: '人',\n        value: coreIndexNowBadLoan.peopleNumber || 0,\n        tips: '用户的人数',\n      },\n    ])\n    setCoreIndexOverdueAmount([\n      {\n        title: '总本金',\n        unit: '元',\n        value: coreIndexNowOverdue.amount || 0,\n        tips: '逾期订单的逾期期数本金之和',\n      },\n      {\n        title: '总笔数',\n        unit: '笔',\n        value: coreIndexNowOverdue.count || 0,\n        tips: '逾期订单的笔数',\n      },\n      {\n        title: '总客户数',\n        unit: '人',\n        value: coreIndexNowOverdue.peopleNumber || 0,\n        tips: '用户的人数',\n      },\n    ])\n    setTopIndexDatas([\n      {\n        title: '当日新增(放款金额)',\n        tips: '当日放款金额的累计',\n        unit: '元',\n        value: dayAddLoanAmount,\n      },\n      {\n        title: '当日净增 (贷款余额)',\n        tips: '当日放款金额-当日还款金额',\n        unit: '元',\n        value: dayAddLoanBalanceAmount,\n      },\n      {\n        title: '当日实收利息',\n        tips: '当日结息金额',\n        unit: '元',\n        value: dayAddInterestAmount,\n      },\n      {\n        title: '当日新增(60+不良本金)',\n        tips: '当日新增的不良（逾期60+）本金',\n        unit: '元',\n        value: dayAddBadLoanAmount,\n      },\n      {\n        title: '当日新增（放款用户）',\n        tips: '当日放款用户数的累计',\n        unit: '人',\n        value: dayAddLoanUser,\n      },\n    ])\n\n    setTimingDatas([\n      {\n        title: '累放金额',\n        tips: '历史放款本金金额累计',\n        unit: '元',\n        value: historyLoanAmount,\n      },\n      {\n        title: '贷款余额',\n        tips: '所有在途订单(含逾期)的剩余待还本金之和',\n        unit: '元',\n        value: historyLoanBalanceAmount,\n      },\n      {\n        title: '累放笔数',\n        tips: '历史所有用户放款笔数',\n        unit: '笔',\n        value: historyLoanNum,\n      },\n      {\n        title: '累放用户数',\n        tips: '历史放款用户数',\n        unit: '人',\n        value: historyLoanUser,\n      },\n      {\n        title: '实收息费（包含利息罚息）',\n        tips: '利息+罚息',\n        unit: '元',\n        value: historyInterestAmount,\n      },\n    ])\n    setCoreIndexYears([\n      {\n        title: '年度利润率（未剔除获客成本）',\n        tips: '（当前年度实收息费-（60+不良本金））/当前年日均余额',\n        unit: '',\n        value: yearProfit,\n      },\n      {\n        title: '年度实收利息',\n        tips: '当前年内的结息之和',\n        unit: '元',\n        value: yearInterestAmount,\n      },\n      {\n        title: '年度净不良本金（60+）',\n        tips: '当前年内的不良本金之和',\n        unit: '元',\n        value: yearBadLoanAmount,\n      },\n    ])\n  }, [coreIndex])\n  const fetchIndex = async (id) => {\n    try {\n      const {\n        data: {data, code},\n      } = await api.get_core_index({\n        productId: id,\n      })\n      if (code == 0 && data) {\n        setCoreIndex(data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const toWan = (decimal, fixed = 0) => `${(decimal / 10000).toFixed(fixed)}万`\n  const toBaiFen = (decimal, fixed = 0) => `${decimal}%`\n  const changeProduct = (val) => {\n    setProductId(val)\n    fetchIndex(val)\n  }\n  return (\n    <Layout isGray={true}>\n      <Row gutter={[30, 0]} style={{marginLeft: 0}}>\n        {topIndexDatas.length\n          ? topIndexDatas.slice(0, 1).map((item, i) => (\n              <Col span={5} key={i} style={{paddingLeft: i == 0 ? 0 : null}}>\n                <Card bodyStyle={{padding: '12px 24px'}}>\n                  <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                    {item.title}\n                  </span>\n                  <TooltipAnt title={item.tips}>\n                    <ExclamationCircleOutlined />\n                  </TooltipAnt>\n                  <div>\n                    <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                      {formatMoney(item.value)}\n                    </span>\n                    <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                  </div>\n                  <div style={{color: '#595858'}}>\n                    {computeUnit(item.value)}\n                  </div>\n                </Card>\n              </Col>\n            ))\n          : null}\n        <Col span={19} style={{textAlign: 'right'}}>\n          <div style={{margin: '20px 0 20px'}}>\n            <Select\n              style={{width: '130px'}}\n              onChange={(val) => changeProduct(val)}\n              value={\n                productList.find((v) => v.id == productId) &&\n                productList.find((v) => v.id == productId).name\n              }\n            >\n              {productList.map((v, i) => (\n                <Select.Option key={i} value={v.id}>\n                  {v.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div>数据更新时间：{coreIndex.reportTime}</div>\n        </Col>\n      </Row>\n      <Card\n        title=\"近30日新增放款金额\"\n        style={{width: '100%', marginTop: '0px'}}\n        bodyStyle={{padding: '24px 24px 10px'}}\n      >\n        <ComposedChart width={1100} height={240} data={dayAddLoanAmountList}>\n          <XAxis dataKey=\"reportTime\" />\n          <YAxis tickFormatter={toWan} />\n          <Tooltip />\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <Bar\n            dataKey=\"amount\"\n            barSize={16}\n            fill=\"#1890ff\"\n            name=\"新增放款金额\"\n          />\n        </ComposedChart>\n      </Card>\n      <Row gutter={[30, 0]} style={{marginLeft: 0}}>\n        {topIndexDatas.length\n          ? topIndexDatas.slice(1).map((item, i) => (\n              <Col\n                span={6}\n                key={i}\n                style={{\n                  paddingLeft: i == 0 ? 0 : null,\n                  paddingRight: i != topIndexDatas.length - 2 ? 0 : '15px',\n                }}\n              >\n                <Card>\n                  <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                    {item.title}\n                  </span>\n                  <TooltipAnt title={item.tips}>\n                    <ExclamationCircleOutlined />\n                  </TooltipAnt>\n                  <div>\n                    <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                      {formatMoney(item.value)}\n                    </span>\n                    <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                  </div>\n                  <div style={{color: '#595858', height: '22px'}}>\n                    {computeUnit(item.value)}\n                  </div>\n                  <div>\n                    {(function () {\n                      if (i == 0) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddLoanBalanceAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <Area\n                              type=\"monotone\"\n                              dataKey=\"amount\"\n                              fill=\"#d9f5f8\"\n                              stroke=\"#79dbe6\"\n                            />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 1) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddInterestAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n\n                            <Bar dataKey=\"amount\" barSize={10} fill=\"#1890ff\" />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 2) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddBadLoanAmountList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n\n                            <Bar dataKey=\"amount\" barSize={10} fill=\"#1890ff\" />\n                          </ComposedChart>\n                        )\n                      }\n                      if (i == 3) {\n                        return (\n                          <ComposedChart\n                            width={260}\n                            height={80}\n                            data={dayAddLoanUserList}\n                          >\n                            <XAxis\n                              dataKey=\"reportTime\"\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <YAxis\n                              tickFormatter={toWan}\n                              hide={true}\n                              interval=\"preserveStartEnd\"\n                            />\n                            <Area\n                              type=\"monotone\"\n                              dataKey=\"amount\"\n                              fill=\"#d9f5f8\"\n                              stroke=\"#79dbe6\"\n                            />\n                          </ComposedChart>\n                        )\n                      }\n                    })()}\n                  </div>\n                </Card>\n              </Col>\n            ))\n          : null}\n      </Row>\n      <Card title=\"累计交易情况\" style={{width: '100%', marginTop: '20px'}}>\n        <Row gutter={[30, 0]}>\n          {timingDatas.length\n            ? timingDatas.map((item, i) => (\n                <Col span={4.6} key={i}>\n                  <Card bordered={false}>\n                    <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                      {item.title}\n                    </span>\n                    <TooltipAnt title={item.tips}>\n                      <ExclamationCircleOutlined />\n                    </TooltipAnt>\n                    <div>\n                      <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                        {formatMoney(item.value)}\n                      </span>\n                      <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                    </div>\n                    <div style={{color: '#595858', height: '22px'}}>\n                      {computeUnit(item.value)}\n                    </div>\n                  </Card>\n                </Col>\n              ))\n            : null}\n        </Row>\n      </Card>\n      <Card title=\"年度指标\" style={{width: '100%', marginTop: '20px'}}>\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              年日均余额及日均余额\n              <span style={{position: 'absolute', right: 0, top: '5px'}}>\n                {coreIndex.yearMonth}月\n              </span>\n            </h4>\n\n            <ComposedChart width={800} height={360} data={listCoreIndexYear}>\n              <XAxis dataKey=\"day\" />\n              <YAxis tickFormatter={toWan} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              <Bar\n                dataKey=\"dailyAmount\"\n                barSize={20}\n                fill=\"#1890ff\"\n                name=\"日均余额\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"yearDailyAmount\"\n                stroke=\"#5cc35c\"\n                name=\"年日均余额\"\n              />\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            {coreIndexYears.length\n              ? coreIndexYears.map((item, i) => (\n                  <Card key={i}>\n                    <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                      {item.title}\n                    </span>\n                    <TooltipAnt title={item.tips}>\n                      <ExclamationCircleOutlined />\n                    </TooltipAnt>\n                    <div>\n                      <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                        {formatMoney(item.value)}\n                      </span>\n                      <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                    </div>\n                    <div style={{color: '#595858'}}>\n                      {computeUnit(item.value)}\n                    </div>\n                  </Card>\n                ))\n              : null}\n          </Col>\n        </Row>\n      </Card>\n      <Card title=\"当前逾期\" style={{width: '100%', marginTop: '20px'}}>\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              分渠道分日逾期率\n              <TooltipAnt title={'统计日当日入逾期单数/统计日前日到期单数'}>\n                <ExclamationCircleOutlined />\n              </TooltipAnt>\n            </h4>\n\n            <ComposedChart\n              width={800}\n              height={360}\n              data={coreIndexOverdue.coreIndexBadLoanList}\n            >\n              <XAxis dataKey=\"reportTime\" />\n              <YAxis tickFormatter={toBaiFen} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              {Array.isArray(coreIndexOverdue.channelNames) &&\n                coreIndexOverdue.channelNames.map((v, i) => {\n                  return (\n                    <Line\n                      key={i}\n                      type=\"monotone\"\n                      dataKey={`channelRateList[${i}].rate`}\n                      stroke={colors[i]}\n                      name={v}\n                    />\n                  )\n                })}\n              {/* <Line\n                type=\"monotone\"\n                dataKey=\"appBadRate\"\n                stroke=\"#1890ff\"\n                name=\"APP\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"appletBadRate\"\n                stroke=\"#5cc35c\"\n                name=\"小程序\"\n              /> */}\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            <Card bodyStyle={{padding: '15px'}}>\n              <Row gutter={[10, 0]} align=\"bottom\">\n                <Col>\n                  <div>\n                    <div style={{fontSize: '16px', marginBottom: '5px'}}>\n                      {coreIndexOverdue.productName}\n                    </div>\n                    <div style={{color: '#b0b0b0'}}>\n                      总逾期率\n                      <TooltipAnt title=\"当前逾期单数/当前总放款单数*100\">\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                    </div>\n                    <div style={{fontSize: '24px', fontWeight: 500}}>\n                      {coreIndexOverdue.rate || 0}%\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <Progress\n                    type=\"circle\"\n                    width={66}\n                    percent={coreIndexOverdue.rate || 0}\n                    showInfo={false}\n                    strokeLinecap=\"square\"\n                    strokeWidth=\"16\"\n                  />\n                </Col>\n              </Row>\n            </Card>\n            {coreIndexOverdueAmount.length\n              ? coreIndexOverdueAmount.map((item, i) => {\n                  return (\n                    <Card key={i} bodyStyle={{padding: '15px'}}>\n                      <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                        {item.title}\n                      </span>\n                      <TooltipAnt title={item.tips}>\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                      <div>\n                        <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                          {formatMoney(item.value)}\n                        </span>\n                        <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                      </div>\n                      <div style={{color: '#595858'}}>\n                        {computeUnit(item.value)}\n                      </div>\n                    </Card>\n                  )\n                })\n              : null}\n          </Col>\n        </Row>\n      </Card>\n\n      <Card\n        title=\"当前不良(逾期60+)\"\n        style={{width: '100%', marginTop: '20px'}}\n      >\n        <Row>\n          <Col span={18}>\n            <h4 style={{position: 'relative', width: '800px'}}>\n              分渠道分日不良率\n              <TooltipAnt title={'统计日当日不良单数/统计日前T-60到期单数'}>\n                <ExclamationCircleOutlined />\n              </TooltipAnt>\n            </h4>\n\n            <ComposedChart\n              width={800}\n              height={360}\n              data={coreIndexBadLoan.coreIndexBadLoanList}\n            >\n              <XAxis dataKey=\"reportTime\" />\n              <YAxis tickFormatter={toBaiFen} />\n              <Tooltip />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n              {Array.isArray(coreIndexBadLoan.channelNames) &&\n                coreIndexBadLoan.channelNames.map((v, i) => {\n                  return (\n                    <Line\n                      key={i}\n                      type=\"monotone\"\n                      dataKey={`channelRateList[${i}].rate`}\n                      stroke={colors[i]}\n                      name={v}\n                    />\n                  )\n                })}\n            </ComposedChart>\n          </Col>\n          <Col span={6}>\n            <Card bodyStyle={{padding: '15px'}}>\n              <Row gutter={[10, 0]} align=\"bottom\">\n                <Col>\n                  <div>\n                    <div style={{fontSize: '16px', marginBottom: '5px'}}>\n                      {coreIndexBadLoan.productName}\n                    </div>\n                    <div style={{color: '#b0b0b0'}}>\n                      总不良率\n                      <TooltipAnt title=\"当前不良单数（逾期60天以上订单）/当前总放款单数*100\">\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                    </div>\n                    <div style={{fontSize: '24px', fontWeight: 500}}>\n                      {coreIndexBadLoan.rate || 0}%\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <Progress\n                    type=\"circle\"\n                    width={66}\n                    percent={coreIndexBadLoan.rate || 0}\n                    showInfo={false}\n                    strokeLinecap=\"square\"\n                    strokeWidth=\"16\"\n                  />\n                </Col>\n              </Row>\n            </Card>\n            {coreIndexBadLoanAmount.length\n              ? coreIndexBadLoanAmount.map((item, i) => {\n                  return (\n                    <Card key={i} bodyStyle={{padding: '15px'}}>\n                      <span style={{color: '#b0b0b0', marginRight: '8px'}}>\n                        {item.title}\n                      </span>\n                      <TooltipAnt title={item.tips}>\n                        <ExclamationCircleOutlined />\n                      </TooltipAnt>\n                      <div>\n                        <span style={{fontSize: '26px', fontWeight: 'bold'}}>\n                          {formatMoney(item.value)}\n                        </span>\n                        <span style={{fontWeight: 'bold'}}>{item.unit}</span>\n                      </div>\n                      <div style={{color: '#595858'}}>\n                        {computeUnit(item.value)}\n                      </div>\n                    </Card>\n                  )\n                })\n              : null}\n          </Col>\n        </Row>\n      </Card>\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  return {}\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}