{"ast":null,"code":"import \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/descriptions/style\";\nimport _Descriptions from \"antd/lib/descriptions\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Layout } from '~/components/Layout';\nimport api from '~/api/collection';\nimport { UserOutlined } from '@ant-design/icons';\nimport Media from '~/components/common/Media';\nimport styles from './index.less';\nvar breadcrumbs = [{\n  text: '贷后管理'\n}, {\n  text: '贷后检查管理'\n}, {\n  text: '检查详情'\n}];\n\nvar getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n    var _yield$api$getCheckRe, _yield$api$getCheckRe2, data, code;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return api.getCheckResult(params);\n\n          case 3:\n            _yield$api$getCheckRe = _context.sent;\n            _yield$api$getCheckRe2 = _yield$api$getCheckRe.data;\n            data = _yield$api$getCheckRe2.data;\n            code = _yield$api$getCheckRe2.code;\n            return _context.abrupt(\"return\", code == 0 ? data : {});\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", {});\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function getData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction body(props) {\n  var _useState = useState(props.detail),\n      detail = _useState[0],\n      setDetail = _useState[1];\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(_Space, {\n    align: \"center\",\n    size: 15,\n    style: {\n      marginBottom: 25\n    }\n  }, __jsx(_Avatar, {\n    size: 64,\n    icon: __jsx(UserOutlined, null)\n  }), __jsx(\"h3\", {\n    style: {\n      marginBottom: 0\n    }\n  }, detail.realName)), __jsx(_Descriptions, {\n    column: 6\n  }, __jsx(_Descriptions.Item, {\n    label: \"\\u8054\\u7CFB\\u7535\\u8BDD\"\n  }, detail.mobilePhone), __jsx(_Descriptions.Item, {\n    label: \"\\u501F\\u636E\\u53F7\"\n  }, detail.orderNum), __jsx(_Descriptions.Item, {\n    label: \"\\u501F\\u6B3E\\u5468\\u671F\"\n  }, detail.loanApplyTerm), __jsx(_Descriptions.Item, {\n    label: \"\\u7533\\u8BF7\\u65E5\\u671F\"\n  }, detail.loanApplyTime), __jsx(_Descriptions.Item, {\n    label: \"\\u5269\\u4F59\\u672C\\u91D1\"\n  }, detail.repayAmount), __jsx(_Descriptions.Item, {\n    label: \"\\u63D0\\u73B0\\u91D1\\u989D\"\n  }, detail.loanAmount))), __jsx(_List, {\n    grid: {\n      gutter: 16,\n      xs: 1,\n      sm: 2,\n      md: 3,\n      lg: 3,\n      xl: 3,\n      xxl: 4\n    },\n    dataSource: Array.isArray(detail.reviewOrder) ? detail.reviewOrder : [],\n    renderItem: function renderItem(item) {\n      return __jsx(_List.Item, null, __jsx(_Card, {\n        title: item.creviewCreateTime\n      }, __jsx(_Row, {\n        gutter: 20,\n        className: styles.descItem\n      }, __jsx(_Col, {\n        className: styles.title\n      }, \"\\u68C0\\u67E5\\u7F16\\u53F7\"), __jsx(_Col, {\n        className: styles.desc\n      }, item.reviewOrderNum)), __jsx(_Row, null, __jsx(_Col, {\n        className: [styles.title, styles.descItem]\n      }, \"\\u53D1\\u8D77\\u68C0\\u67E5\"), __jsx(_Col, {\n        offset: 1,\n        className: styles.desc\n      }, __jsx(\"div\", null, \"\\u68C0\\u67E5\\u539F\\u56E0\\uFF1A\", item.reviewReason), __jsx(\"div\", null, \"\\u68C0\\u67E5\\u5185\\u5BB9\\uFF1A\", item.reviewContent))), __jsx(_Divider, null), Array.isArray(item.catAttrs) ? item.catAttrs.map(function (catAttr, i) {\n        return __jsx(_Card, {\n          bodyStyle: {\n            padding: 0\n          },\n          headStyle: {\n            padding: 0\n          },\n          bordered: false,\n          title: __jsx(\"div\", {\n            className: styles.title\n          }, catAttr.catName),\n          key: i\n        }, __jsx(_Descriptions, {\n          column: 2,\n          style: {\n            marginTop: 15\n          }\n        }, Array.isArray(catAttr.list) ? catAttr.list.map(function (attr, index) {\n          var showTemp = attr.showValue;\n          var type = attr.attrType;\n\n          if (type == 'image' || type == 'voice' || type == 'video') {\n            var showValue = attr.showValue ? attr.showValue.split(',') : [];\n            showTemp = __jsx(Media, {\n              type: type,\n              data: showValue\n            });\n          }\n\n          return __jsx(_Descriptions.Item, {\n            label: attr.attrName,\n            key: index\n          }, showTemp);\n        }) : null));\n      }) : null));\n    }\n  }));\n}\n\nbody.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n    var _context$ctx$query, id, type, params, detail;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context$ctx$query = context.ctx.query, id = _context$ctx$query.id, type = _context$ctx$query.type;\n            params = {\n              id: id,\n              type: type\n            };\n            _context2.next = 4;\n            return getData(params);\n\n          case 4:\n            detail = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              detail: detail,\n              params: params\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}