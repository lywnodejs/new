{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport apiAssets from '~/api/assets';\nimport _ from 'lodash';\n\nconst TableList = ({\n  list,\n  onPage,\n  pageParams,\n  statusList,\n  productList,\n  totalData\n}) => {\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(pageParams.pageSize);\n  const {\n    0: selectedRowKeys,\n    1: setSelectedRowKeys\n  } = useState([]);\n  const {\n    0: selectedRows,\n    1: setSelectedRows\n  } = useState([]);\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: exportData,\n    1: setExportData\n  } = useState([]);\n  const {\n    0: obtainList,\n    1: setObtainList\n  } = useState([]);\n\n  const timeConversion = times => {\n    let date = new Date(times);\n    let y = date.getFullYear();\n    let m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    let d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    return y + '-' + m + '-' + d;\n  };\n\n  const columns = [{\n    title: '借据号',\n    dataIndex: 'orderNum',\n    key: 'orderNum',\n    width: 150\n  }, {\n    title: '借款人',\n    dataIndex: 'realName',\n    key: 'realName',\n    width: 150\n  }, {\n    title: '借款周期',\n    dataIndex: 'date',\n    key: 'date',\n    width: 150,\n    render: (record, row) => {\n      return __jsx(\"div\", null, row.grantFinishTime != '' ? __jsx(\"p\", null, \"\\u501F\\uFF1A\", timeConversion(row.grantFinishTime)) : null, row.finalRepayDate != '' ? __jsx(\"p\", null, \"\\u8FD8\\uFF1A\", timeConversion(row.finalRepayDate)) : null);\n    }\n  }, {\n    title: '产品',\n    dataIndex: 'productId',\n    key: 'productId',\n    width: 150,\n    render: (text, record, index) => {\n      let findOne = productList.find(one => one.id == text);\n      return findOne ? findOne.name : '';\n    }\n  }, {\n    title: '借据总额（元）',\n    dataIndex: 'signLoanAmount',\n    key: 'signLoanAmount',\n    width: 150,\n    render: record => {\n      if (record == null) {\n        return null;\n      } else {\n        let str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '借据余额（元）',\n    dataIndex: 'capitalAmount',\n    key: 'capitalAmount',\n    width: 150,\n    render: record => {\n      if (record == null) {\n        return null;\n      } else {\n        let str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '剩余未还（元）',\n    dataIndex: 'surplusPayableAmount',\n    key: 'surplusPayableAmount',\n    width: 150,\n    render: record => {\n      if (record == null) {\n        return null;\n      } else {\n        let str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '逾期天数',\n    dataIndex: 'overdueDay',\n    key: 'overdueDay',\n    width: 150,\n    render: record => {\n      if (record == null) {\n        return null;\n      } else {\n        let str = Number(record).toLocaleString();\n        return str;\n      }\n    }\n  }, {\n    title: '借据状态',\n    dataIndex: 'status',\n    key: 'status',\n    width: 150,\n    render: (text, record, index) => {\n      let findOne = statusList.find(one => one.code == text);\n      return findOne ? findOne.description : '';\n    }\n  }, {\n    title: '资产处置标志',\n    dataIndex: 'protectionTypeString',\n    key: 'protectionTypeString',\n    width: 150\n  }, {\n    title: '操作',\n    dataIndex: 'cz',\n    key: 'cz',\n    width: 150,\n    fixed: 'right',\n    render: (text, record, index) => {\n      return __jsx(React.Fragment, null, __jsx(_Button, {\n        type: \"link\",\n        onClick: () => checkDetail(record)\n      }, \"\\u8BE6\\u60C5\"));\n    }\n  }];\n\n  const checkDetail = record => {\n    let url = `/assets/list/detail?orderNum=${record.orderNum}&protectionType=${record.protectionType}`;\n    Router.push(url);\n  };\n\n  const onShowSizeChange = (current, pageSize) => {\n    console.log(current, pageSize);\n    pageParams.pageSize = pageSize;\n    setPageSize(pageSize);\n  };\n\n  const pagination = {\n    defaultCurrent: 1,\n    total: totalData != null ? totalData.total : null,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: total => {\n      return `共 ${total} 条记录`;\n    },\n    onChange: pageNumber => {\n      pageParams.pageNum = pageNumber;\n      onPage();\n    }\n  };\n\n  const onSelect = (record, selected) => {\n    const keys = [...selectedRowKeys];\n    const rows = [...selectedRows];\n\n    if (selected) {\n      keys.push(record.id);\n      rows.push(record);\n    } else {\n      _.remove(keys, i => {\n        return i === record.id;\n      });\n\n      _.remove(rows, item => {\n        return item.id === record.id;\n      });\n    }\n\n    const mySelectedRowKeys = _.uniq(keys);\n\n    const mySelectedRows = _.uniqBy(rows, 'id');\n\n    setSelectedRowKeys(mySelectedRowKeys);\n    setSelectedRows(mySelectedRows);\n  };\n\n  const onSelectAll = (selected, sRows, changeRows) => {\n    let keys = [...selectedRowKeys];\n    let rows = [...selectedRows];\n\n    const changeRowKeys = _.map(changeRows, 'id');\n\n    if (selected) {\n      changeRows.forEach(item => {\n        keys = _.uniq(_.concat(keys, [item.id]));\n        rows = _.uniqBy(_.concat(rows, [item]));\n      });\n    } else {\n      changeRows.forEach(item => {\n        _.remove(keys, i => {\n          return i === item.id;\n        });\n\n        _.remove(rows, k => {\n          return _.includes(changeRowKeys, k.id);\n        });\n      });\n    }\n\n    setSelectedRowKeys(keys);\n    setSelectedRows(rows);\n  };\n\n  const handleExport = async () => {\n    let newRows = [];\n\n    if (selectedRowKeys.length < 1) {\n      return _message.error('请先选择导出项');\n    }\n\n    const values = await form.validateFields();\n\n    if (values.fileType == undefined) {\n      return _message.error('请选择导出类型');\n    }\n\n    selectedRows.forEach(item => {\n      newRows.push(item.orderNum);\n    });\n    setObtainList(newRows);\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAssets.fetch_cheek_export({\n        fileType: values.fileType,\n        orderNums: newRows\n      });\n\n      if (code == 0) {\n        setVisible(true);\n        setExportData(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const values = await form.validateFields();\n\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiAssets.fetch_export_list({\n        fileType: values.fileType,\n        orderNums: obtainList\n      });\n\n      if (code == 0) {\n        _message.success('文件生成中，请稍后至【导出记录】中下载');\n\n        setVisible(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(_Card, null, __jsx(_Row, null, __jsx(_Col, {\n    span: 1,\n    style: {\n      marginTop: 5\n    }\n  }, __jsx(\"span\", null, \"\\u5DF2\\u9009\\u62E9\", __jsx(\"span\", {\n    style: {\n      color: '#26b3ff'\n    }\n  }, Array.isArray(selectedRowKeys) ? selectedRowKeys.length : 0), \"\\u9879\")), __jsx(_Col, {\n    span: 3\n  }, __jsx(_Form, {\n    name: \"form\",\n    form: form,\n    style: {\n      marginLeft: 20\n    },\n    initialValues: {\n      fileType: null\n    }\n  }, __jsx(_Form.Item, {\n    name: \"fileType\",\n    label: \"\"\n  }, __jsx(_Select, {\n    style: {\n      width: 200\n    }\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u9009\\u62E9\\u5BFC\\u51FA\\u7C7B\\u578B\"), __jsx(_Select.Option, {\n    value: 4\n  }, \"\\u53F8\\u6CD5\\u8BC9\\u8BBC\"), __jsx(_Select.Option, {\n    value: 3\n  }, \"\\u8D44\\u4EA7\\u6838\\u9500\"), __jsx(_Select.Option, {\n    value: 2\n  }, \"\\u8D44\\u4EA7\\u8F6C\\u8BA9\"))))), __jsx(_Col, {\n    span: 2\n  }, __jsx(_Button, {\n    type: \"primary\",\n    onClick: handleExport,\n    style: {\n      marginLeft: 30\n    }\n  }, \"\\u5BFC\\u51FA\"))), __jsx(_Table, {\n    style: {\n      marginTop: 20\n    },\n    rowKey: \"id\",\n    columns: columns,\n    dataSource: totalData == null ? [] : list,\n    bordered: true,\n    rowSelection: {\n      selectedRowKeys,\n      onSelect: onSelect,\n      onSelectAll: onSelectAll\n    },\n    pagination: pagination,\n    scroll: {\n      y: '100%',\n      x: '100%'\n    }\n  }), __jsx(_Modal, {\n    title: \"\\u64CD\\u4F5C\\u786E\\u8BA4\",\n    visible: visible,\n    footer: [__jsx(_Button, {\n      key: \"back\",\n      onClick: () => {\n        setVisible(false);\n      }\n    }, \"\\u8FD4\\u56DE\\u4FEE\\u6539\"), __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: handleSubmit\n    }, \"\\u786E\\u8BA4\\u63D0\\u4EA4\")],\n    onCancel: () => {\n      setVisible(false);\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    }\n  }, \"\\u5BFC\\u51FA\", `${exportData.typeString}`, \"\\u6587\\u4EF6\"), __jsx(\"p\", null, \"\\u5171\", `${exportData.iouCount}`, \"\\u4E2A\\u501F\\u636E\")));\n};\n\nexport default TableList;","map":null,"metadata":{},"sourceType":"module"}