{"ast":null,"code":"import \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport AddHistory from './AddHistory';\nimport BaseTable from './BaseTable';\nimport Router from 'next/router';\nimport api from '~/api/collection';\nexport default function (props) {\n  var _useState = useState(false),\n      showMore = _useState[0],\n      setShowMore = _useState[1];\n\n  var _useState2 = useState([]),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  useEffect(function () {\n    if (Array.isArray(props.list)) {\n      setList(props.list); // if(props.list.length > 5) {\n      //   setList(props.list.splice(0, 5))\n      //   setShowMore(true)\n      // } else {\n      //   setList(props.list)\n      // }\n    }\n\n    console.log(props);\n  }, [props]);\n  var columns = [{\n    title: '催收期数',\n    dataIndex: 'currentTerm'\n  }, {\n    title: '催收方式',\n    dataIndex: 'collectionMethod',\n    render: function render(text, record, index) {\n      var findOne = props.urgeMethods.find(function (one) {\n        return one.code == text;\n      });\n      return findOne ? findOne.description : '';\n    }\n  }, {\n    title: '催收对象',\n    dataIndex: 'collectionObject',\n    render: function render(text, record, index) {\n      var findOne = props.urgeObjects.find(function (one) {\n        return one.code == text;\n      });\n      return findOne ? findOne.description : '';\n    }\n  }, {\n    title: '联系号码',\n    dataIndex: 'collectionMobilePhone',\n    render: function render(text, record, index) {\n      return text ? text.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2') : text;\n    }\n  }, {\n    title: '联络结果',\n    dataIndex: 'collectionResult',\n    render: function render(text, record, index) {\n      if (record.repayDesire == '1') {\n        var findOne = props.urgeResultUnknows.find(function (one) {\n          return one.code == text;\n        });\n        return findOne ? findOne.description : '';\n      } else if (record.repayDesire == '2') {\n        var _findOne = props.urgeResultHighs.find(function (one) {\n          return one.code == text;\n        });\n\n        return _findOne ? _findOne.description : '';\n      } else if (record.repayDesire == '3') {\n        var _findOne2 = props.urgeResultLows.find(function (one) {\n          return one.code == text;\n        });\n\n        return _findOne2 ? _findOne2.description : '';\n      }\n    }\n  }, {\n    title: '逾期原因',\n    dataIndex: 'reasonType',\n    render: function render(text, record, index) {\n      var findOne = props.urgeReasonTypes.find(function (one) {\n        return one.code == text;\n      });\n      return findOne ? findOne.description : '';\n    }\n  }, {\n    title: '还款意愿',\n    dataIndex: 'repayDesire',\n    render: function render(text, record, index) {\n      var findOne = props.urgeRepayDesires.find(function (one) {\n        return one.code == text;\n      });\n      return findOne ? findOne.description : '';\n    }\n  }, {\n    title: '承诺还款日期',\n    dataIndex: 'promiseRepayTime'\n  }, {\n    title: '备注',\n    dataIndex: 'remark'\n  }, {\n    title: '催收员',\n    dataIndex: 'createUser'\n  }, {\n    title: '催收日期',\n    dataIndex: 'createTime'\n  }];\n\n  var getHistoryData = function getHistoryData(formData, successFun, failFun) {\n    var params = _objectSpread(_objectSpread({}, formData), {}, {\n      collectionOrderId: +props.id,\n      collectionMobilePhoneEncrypt: props.mobilePhoneEncrypt\n    });\n\n    api.add_one_collection(params).then(function (_ref) {\n      var code = _ref.data.code;\n\n      if (code == 0) {\n        _message.success('添加成功');\n\n        successFun();\n        props.reloadData('history');\n      } else {\n        failFun();\n      }\n    })[\"catch\"](function () {\n      failFun();\n    });\n  };\n\n  var toDetail = function toDetail() {\n    Router.push(\"/collection/reminded/form/history?id=\".concat(props.id));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    }\n  }, __jsx(AddHistory, _extends({\n    btnType: \"primary\",\n    getHistoryData: getHistoryData\n  }, props))), __jsx(BaseTable, {\n    list: list,\n    columns: columns\n  }), showMore && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginTop: 30,\n      textAlign: 'center'\n    }\n  }, __jsx(_Button, {\n    type: \"link\",\n    onClick: toDetail\n  }, \"\\u67E5\\u770B\\u8BE6\\u60C5\")), __jsx(_Divider, null)));\n}","map":null,"metadata":{},"sourceType":"module"}