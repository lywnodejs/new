{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState, useRef } from 'react';\nimport { Layout } from '~/components/Layout';\nimport nextId from 'react-id-generator';\nimport moment from 'moment';\nimport { biFetch } from '~/utils/fetch';\nimport { CSVLink } from 'react-csv';\nconst {\n  RangePicker\n} = _DatePicker;\nconst {\n  Option\n} = _Select;\nconst {\n  TabPane\n} = _Tabs;\nconst breadcrumbs = [{\n  text: 'BI报表'\n}, {\n  text: '贷后分析'\n}, {\n  text: '催收报表'\n}];\nconst tabs = ['到期金额', '到期笔数'];\nconst urls = ['/coll/stat/amount', '/coll/stat/count'];\nconst columns = [[{\n  title: '到期日期',\n  dataIndex: 'dueDate',\n  align: 'left',\n  width: 150,\n  fixed: 'left'\n}, {\n  title: '渠道',\n  dataIndex: 'srcChannel',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '到期本金',\n  dataIndex: 'dueCapitalAmt',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '入催本金',\n  dataIndex: 'collCapitalAmt',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '入催率',\n  dataIndex: 'dueCollRate',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '催回率',\n  dataIndex: 'collBackRate',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, ...[1, 3, 10, 30, 60, 90].map(v => ({\n  title: `${v}日内催回本金`,\n  dataIndex: `collBackAmtDay${v}`,\n  align: 'left',\n  width: 150\n})), ...[1, 3, 10, 30, 60, 90].map(v => ({\n  title: `${v}日催回率`,\n  dataIndex: `collBackRateDay${v}`,\n  align: 'left',\n  width: 120\n}))], [{\n  title: '到期日期',\n  dataIndex: 'dueDate',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '渠道',\n  dataIndex: 'srcChannel',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '到期笔数',\n  dataIndex: 'dueCnt',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '入催笔数',\n  dataIndex: 'collCnt',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '入催率',\n  dataIndex: 'dueCollRate',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, {\n  title: '催回率',\n  dataIndex: 'collBackRate',\n  align: 'left',\n  width: 100,\n  fixed: 'left'\n}, ...[1, 3, 10, 30, 60, 90].map(v => ({\n  title: `${v}日内催回笔数`,\n  dataIndex: `collBackCntDay${v}`,\n  align: 'left',\n  width: 150\n})), ...[1, 3, 10, 30, 60, 90].map(v => ({\n  title: `${v}日内催回率`,\n  dataIndex: `collBackRateDay${v}`,\n  align: 'left',\n  width: 120\n}))]];\nconst pages = [{\n  pageNo: 1,\n  pageSize: 20\n}, {\n  pageNo: 1,\n  pageSize: 20\n}];\nconst startDate = moment().subtract(7, 'days').format('YYYY-MM-DD');\nconst endDate = moment().subtract(1, 'days').format('YYYY-MM-DD');\n\nconst fetchList = async (url, params) => {\n  for (const [key, value] of Object.entries(params)) {\n    if (!value) {\n      delete params[key];\n    }\n  }\n\n  const startDate = Array.isArray(params.date) ? moment(params.date[0]).format('YYYY-MM-DD') : undefined;\n  const endDate = Array.isArray(params.date) ? moment(params.date[1]).format('YYYY-MM-DD') : undefined;\n  delete params.date;\n  const data = await biFetch(url, _objectSpread({\n    startDate,\n    endDate\n  }, params)); // console.log(data.data, '------------------------')\n\n  return data;\n};\n\nconst TableList = ({\n  onPage,\n  tab,\n  data: {\n    list = [],\n    pageRet = {}\n  },\n  columns = []\n}) => {\n  const onShowSizeChange = (current, size) => {\n    console.log(current, size);\n    pages[tab].pageSize = size;\n  }; // console.log('list: ', list)\n  // console.log('table:', pages[tab], list)\n\n\n  const pagination = {\n    position: 'bottom',\n    current: pages[tab].pageNo,\n    total: pageRet.totalCount,\n    pageSize: pages[tab].pageSize,\n    showTotal: total => `共 ${pageRet.totalCount} 条记录`,\n    onChange: onPage,\n    onShowSizeChange,\n    showSizeChanger: true,\n    showQuickJumper: true\n  };\n  return __jsx(_Table, {\n    rowKey: () => `tab-${tab}-${nextId()}`,\n    dataSource: list,\n    columns: columns,\n    pagination: pagination,\n    scroll: {\n      x: 1500\n    }\n  });\n};\n\nconst DownloadCSV = ({\n  form,\n  tab\n}) => {\n  const csvInstance = useRef();\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onDownload = async () => {\n    setLoading(true);\n    let values = form.getFieldsValue();\n    const {\n      data: {\n        code,\n        data: list\n      }\n    } = await fetchList(urls[tab], values);\n\n    if (code === 0) {\n      setData(list);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (data.list !== undefined && csvInstance.current && csvInstance.current.link) {\n      setTimeout(() => {\n        csvInstance.current.link.click();\n        setData({});\n      });\n    }\n  }, [data]);\n  let headers = columns[tab].map(column => ({\n    label: column.title,\n    key: column.dataIndex\n  }));\n  return __jsx(React.Fragment, null, __jsx(CSVLink, {\n    headers: headers,\n    data: data.list || [],\n    ref: csvInstance\n  }), __jsx(_Button, {\n    loading: loading,\n    type: \"primary\",\n    onClick: onDownload\n  }, \"\\u4E0B\\u8F7D\"));\n};\n\nconst beforeDate = function (n) {\n  var now = new Date();\n  now.setDate(now.getDate() - 15);\n  return now;\n};\n\nconst afterDate = function (n) {\n  var now = new Date();\n  now.setDate(now.getDate() + 15);\n  return now;\n};\n\nconst Search = ({\n  onSearch,\n  channels,\n  products,\n  form,\n  fetchList,\n  tab\n}) => {\n  return __jsx(_Form, {\n    layout: \"inline\",\n    form: form,\n    initialValues: {\n      // date: [moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD')],\n      date: [moment(beforeDate(15), 'YYYY-MM-DD'), moment(afterDate(15), 'YYYY-MM-DD')],\n      srcCode: '',\n      productId: ''\n    },\n    onFinish: onSearch,\n    className: \"searchForm\"\n  }, __jsx(_Form.Item, _extends({\n    label: \"\\u5230\\u671F\\u65E5\\u671F\",\n    name: \"date\"\n  }, {\n    rules: [{\n      type: 'array',\n      required: true,\n      message: '请选时间!'\n    }]\n  }), __jsx(RangePicker, null)), __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\",\n    name: \"productId\"\n  }, __jsx(_Select, {\n    style: {\n      width: 120\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), products.map(v => __jsx(_Select.Option, {\n    key: v.productId,\n    value: v.productId\n  }, v.productName)))), __jsx(_Form.Item, {\n    label: \"\\u8FDB\\u4EF6\\u6E20\\u9053\",\n    name: \"srcCode\"\n  }, __jsx(_Select, {\n    style: {\n      width: 120\n    }\n  }, __jsx(Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), channels.map(v => __jsx(Option, {\n    key: v.srcCode,\n    value: v.srcCode\n  }, v.name)))), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\")), __jsx(_Form.Item, null, __jsx(DownloadCSV, {\n    form,\n    tab\n  })));\n};\n\nconst body = ({\n  list,\n  channels,\n  products\n}) => {\n  const [form] = _Form.useForm();\n\n  let {\n    0: data,\n    1: setData\n  } = useState(list);\n  let {\n    0: tab,\n    1: setTab\n  } = useState(0);\n\n  const onSearch = async (values, pageNo = 1) => {\n    pages[tab].pageNo = pageNo;\n    const {\n      data: {\n        code,\n        data: result\n      }\n    } = await fetchList(urls[tab], _objectSpread(_objectSpread({}, values), pages[tab]));\n\n    if (code === 0) {\n      let temp = [...data];\n      temp[tab] = result;\n      setData(temp); // console.log(data)\n    }\n  };\n\n  const onTab = i => {\n    setTab(i);\n  };\n\n  useEffect(() => {\n    onSearch(form.getFieldsValue(), pages[tab].pageNo);\n  }, [tab]);\n\n  const onPage = page => {\n    const values = form.getFieldsValue();\n    onSearch(values, page);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(Search, {\n    onSearch,\n    channels,\n    products,\n    form,\n    tab\n  }), __jsx(\"div\", {\n    style: {\n      background: '#fff'\n    }\n  }, __jsx(_Tabs, {\n    tabBarStyle: {\n      paddingLeft: 30\n    },\n    onChange: onTab\n  }, tabs.map((v, i) => __jsx(TabPane, {\n    tab: v,\n    key: i\n  }, __jsx(TableList, {\n    tab: i,\n    data: data[i],\n    columns: columns[i],\n    onPage: onPage,\n    rowKey: record => record.dueDate + Math.random()\n  })))))));\n};\n\nbody.getInitialProps = async () => {\n  try {\n    const [{\n      data: {\n        code: amountCode,\n        data: amountList = {}\n      }\n    }, {\n      data: {\n        code: countCode,\n        data: countList = {}\n      }\n    }, {\n      data: {\n        data: channels = []\n      }\n    }, {\n      data: {\n        data: products = []\n      }\n    }] = await Promise.all([fetchList(urls[0], _objectSpread({\n      startDate,\n      endDate\n    }, pages[0])), fetchList(urls[1], _objectSpread({\n      startDate,\n      endDate\n    }, pages[1])), biFetch('/common/allChannel'), biFetch('/common/allProduct')]); // console.log(channels)\n\n    return {\n      list: [amountList, countList],\n      channels,\n      products\n    };\n  } catch (e) {\n    console.log(e);\n  }\n\n  return {\n    list: [{}, {}],\n    channels: [],\n    products: []\n  };\n};\n\nexport default body;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/bi/after/collection/index.js"],"names":["useEffect","useState","useRef","Layout","nextId","moment","biFetch","CSVLink","RangePicker","Option","TabPane","breadcrumbs","text","tabs","urls","columns","title","dataIndex","align","width","fixed","map","v","pages","pageNo","pageSize","startDate","subtract","format","endDate","fetchList","url","params","key","value","Object","entries","Array","isArray","date","undefined","data","TableList","onPage","tab","list","pageRet","onShowSizeChange","current","size","console","log","pagination","position","total","totalCount","showTotal","onChange","showSizeChanger","showQuickJumper","x","DownloadCSV","form","csvInstance","setData","loading","setLoading","onDownload","values","getFieldsValue","code","link","setTimeout","click","headers","column","label","beforeDate","n","now","Date","setDate","getDate","afterDate","Search","onSearch","channels","products","srcCode","productId","rules","type","required","message","productName","name","body","useForm","setTab","result","temp","onTab","i","page","background","paddingLeft","record","dueDate","Math","random","getInitialProps","amountCode","amountList","countCode","countList","Promise","all","e"],"mappings":"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","sourcesContent":["import {useEffect, useState, useRef} from 'react'\nimport {Layout} from '~/components/Layout'\nimport {Button, DatePicker, Form, Select, Table, Tabs, Space} from 'antd'\nimport nextId from 'react-id-generator'\nimport moment from 'moment'\nimport {biFetch} from '~/utils/fetch'\nimport {CSVLink} from 'react-csv'\n\nconst {RangePicker} = DatePicker\nconst {Option} = Select\nconst {TabPane} = Tabs\n\nconst breadcrumbs = [{text: 'BI报表'}, {text: '贷后分析'}, {text: '催收报表'}]\n\nconst tabs = ['到期金额', '到期笔数']\nconst urls = ['/coll/stat/amount', '/coll/stat/count']\n\nconst columns = [\n  [\n    {\n      title: '到期日期',\n      dataIndex: 'dueDate',\n      align: 'left',\n      width: 150,\n      fixed: 'left',\n    },\n    {\n      title: '渠道',\n      dataIndex: 'srcChannel',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '到期本金',\n      dataIndex: 'dueCapitalAmt',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '入催本金',\n      dataIndex: 'collCapitalAmt',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '入催率',\n      dataIndex: 'dueCollRate',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '催回率',\n      dataIndex: 'collBackRate',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    ...[1, 3, 10, 30, 60, 90].map((v) => ({\n      title: `${v}日内催回本金`,\n      dataIndex: `collBackAmtDay${v}`,\n      align: 'left',\n      width: 150,\n    })),\n    ...[1, 3, 10, 30, 60, 90].map((v) => ({\n      title: `${v}日催回率`,\n      dataIndex: `collBackRateDay${v}`,\n      align: 'left',\n      width: 120,\n    })),\n  ],\n  [\n    {\n      title: '到期日期',\n      dataIndex: 'dueDate',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '渠道',\n      dataIndex: 'srcChannel',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '到期笔数',\n      dataIndex: 'dueCnt',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '入催笔数',\n      dataIndex: 'collCnt',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '入催率',\n      dataIndex: 'dueCollRate',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    {\n      title: '催回率',\n      dataIndex: 'collBackRate',\n      align: 'left',\n      width: 100,\n      fixed: 'left',\n    },\n    ...[1, 3, 10, 30, 60, 90].map((v) => ({\n      title: `${v}日内催回笔数`,\n      dataIndex: `collBackCntDay${v}`,\n      align: 'left',\n      width: 150,\n    })),\n    ...[1, 3, 10, 30, 60, 90].map((v) => ({\n      title: `${v}日内催回率`,\n      dataIndex: `collBackRateDay${v}`,\n      align: 'left',\n      width: 120,\n    })),\n  ],\n]\n\nconst pages = [\n  {\n    pageNo: 1,\n    pageSize: 20,\n  },\n  {\n    pageNo: 1,\n    pageSize: 20,\n  },\n]\n\nconst startDate = moment().subtract(7, 'days').format('YYYY-MM-DD')\nconst endDate = moment().subtract(1, 'days').format('YYYY-MM-DD')\n\nconst fetchList = async (url, params) => {\n  for (const [key, value] of Object.entries(params)) {\n    if (!value) {\n      delete params[key]\n    }\n  }\n  const startDate = Array.isArray(params.date)\n    ? moment(params.date[0]).format('YYYY-MM-DD')\n    : undefined\n  const endDate = Array.isArray(params.date)\n    ? moment(params.date[1]).format('YYYY-MM-DD')\n    : undefined\n\n  delete params.date\n\n  const data = await biFetch(url, {\n    startDate,\n    endDate,\n    ...params,\n  })\n  // console.log(data.data, '------------------------')\n  return data\n}\n\nconst TableList = ({\n  onPage,\n  tab,\n  data: {list = [], pageRet = {}},\n  columns = [],\n}) => {\n  const onShowSizeChange = (current, size) => {\n    console.log(current, size)\n    pages[tab].pageSize = size\n  }\n\n  // console.log('list: ', list)\n  // console.log('table:', pages[tab], list)\n  const pagination = {\n    position: 'bottom',\n    current: pages[tab].pageNo,\n    total: pageRet.totalCount,\n    pageSize: pages[tab].pageSize,\n    showTotal: (total) => `共 ${pageRet.totalCount} 条记录`,\n    onChange: onPage,\n    onShowSizeChange,\n    showSizeChanger: true,\n    showQuickJumper: true,\n  }\n\n  return (\n    <Table\n      rowKey={() => `tab-${tab}-${nextId()}`}\n      dataSource={list}\n      columns={columns}\n      pagination={pagination}\n      scroll={{x: 1500}}\n    />\n  )\n}\n\nconst DownloadCSV = ({form, tab}) => {\n  const csvInstance = useRef()\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(false)\n\n  const onDownload = async () => {\n    setLoading(true)\n    let values = form.getFieldsValue()\n    const {\n      data: {code, data: list},\n    } = await fetchList(urls[tab], values)\n    if (code === 0) {\n      setData(list)\n    }\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    if (\n      data.list !== undefined &&\n      csvInstance.current &&\n      csvInstance.current.link\n    ) {\n      setTimeout(() => {\n        csvInstance.current.link.click()\n        setData({})\n      })\n    }\n  }, [data])\n\n  let headers = columns[tab].map((column) => ({\n    label: column.title,\n    key: column.dataIndex,\n  }))\n\n  return (\n    <>\n      <CSVLink\n        headers={headers}\n        data={data.list || []}\n        ref={csvInstance}\n      ></CSVLink>\n      <Button loading={loading} type=\"primary\" onClick={onDownload}>\n        下载\n      </Button>\n    </>\n  )\n}\n\nconst beforeDate = function (n) {\n  var now = new Date()\n  now.setDate(now.getDate() - 15)\n  return now\n}\n\nconst afterDate = function (n) {\n  var now = new Date()\n  now.setDate(now.getDate() + 15)\n  return now\n}\n\nconst Search = ({onSearch, channels, products, form, fetchList, tab}) => {\n  return (\n    <Form\n      layout=\"inline\"\n      form={form}\n      initialValues={{\n        // date: [moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD')],\n        date: [\n          moment(beforeDate(15), 'YYYY-MM-DD'),\n          moment(afterDate(15), 'YYYY-MM-DD'),\n        ],\n        srcCode: '',\n        productId: '',\n      }}\n      onFinish={onSearch}\n      className=\"searchForm\"\n    >\n      <Form.Item\n        label=\"到期日期\"\n        name=\"date\"\n        {...{\n          rules: [{type: 'array', required: true, message: '请选时间!'}],\n        }}\n      >\n        <RangePicker />\n      </Form.Item>\n\n      <Form.Item label=\"产品\" name=\"productId\">\n        <Select style={{width: 120}}>\n          <Select.Option value=\"\">全部</Select.Option>\n          {products.map((v) => (\n            <Select.Option key={v.productId} value={v.productId}>\n              {v.productName}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item label=\"进件渠道\" name=\"srcCode\">\n        <Select style={{width: 120}}>\n          <Option value=\"\">全部</Option>\n          {channels.map((v) => (\n            <Option key={v.srcCode} value={v.srcCode}>\n              {v.name}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          查询\n        </Button>\n      </Form.Item>\n\n      <Form.Item>\n        <DownloadCSV {...{form, tab}} />\n      </Form.Item>\n    </Form>\n  )\n}\n\nconst body = ({list, channels, products}) => {\n  const [form] = Form.useForm()\n  let [data, setData] = useState(list)\n  let [tab, setTab] = useState(0)\n\n  const onSearch = async (values, pageNo = 1) => {\n    pages[tab].pageNo = pageNo\n    const {\n      data: {code, data: result},\n    } = await fetchList(urls[tab], {...values, ...pages[tab]})\n\n    if (code === 0) {\n      let temp = [...data]\n      temp[tab] = result\n      setData(temp)\n      // console.log(data)\n    }\n  }\n\n  const onTab = (i) => {\n    setTab(i)\n  }\n\n  useEffect(() => {\n    onSearch(form.getFieldsValue(), pages[tab].pageNo)\n  }, [tab])\n\n  const onPage = (page) => {\n    const values = form.getFieldsValue()\n    onSearch(values, page)\n  }\n\n  return (\n    <Layout breadcrumbs={breadcrumbs}>\n      <Space direction=\"vertical\" size=\"large\" style={{width: '100%'}}>\n        <Search {...{onSearch, channels, products, form, tab}} />\n        <div style={{background: '#fff'}}>\n          <Tabs tabBarStyle={{paddingLeft: 30}} onChange={onTab}>\n            {tabs.map((v, i) => (\n              <TabPane tab={v} key={i}>\n                <TableList\n                  tab={i}\n                  data={data[i]}\n                  columns={columns[i]}\n                  onPage={onPage}\n                  rowKey={(record) => record.dueDate + Math.random()}\n                />\n              </TabPane>\n            ))}\n          </Tabs>\n        </div>\n      </Space>\n    </Layout>\n  )\n}\n\nbody.getInitialProps = async () => {\n  try {\n    const [\n      {\n        data: {code: amountCode, data: amountList = {}},\n      },\n      {\n        data: {code: countCode, data: countList = {}},\n      },\n      {\n        data: {data: channels = []},\n      },\n      {\n        data: {data: products = []},\n      },\n    ] = await Promise.all([\n      fetchList(urls[0], {\n        startDate,\n        endDate,\n        ...pages[0],\n      }),\n      fetchList(urls[1], {\n        startDate,\n        endDate,\n        ...pages[1],\n      }),\n      biFetch('/common/allChannel'),\n      biFetch('/common/allProduct'),\n    ])\n\n    // console.log(channels)\n\n    return {\n      list: [amountList, countList],\n      channels,\n      products,\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return {\n    list: [{}, {}],\n    channels: [],\n    products: [],\n  }\n}\n\nexport default body\n"]},"metadata":{},"sourceType":"module"}