{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { values } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport apiReview from '~/api/review';\n\nfunction SelectDistributionModal(props) {\n  var visible = props.visible,\n      onHide = props.onHide,\n      orderIds = props.orderIds,\n      selectData = props.selectData,\n      assignType = props.assignType,\n      verifyStatus = props.verifyStatus;\n\n  var _useState = useState([]),\n      selectValue = _useState[0],\n      setSelectValue = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    visible && fetchData();\n  }, [visible]);\n\n  var handleChange = function handleChange(value) {\n    setSelectValue(value);\n  };\n\n  var onEdit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$apiReview$fetc, _yield$apiReview$fetc2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return apiReview.fetch_assign_update({\n                assignType: assignType,\n                verifyStatus: verifyStatus,\n                checkedOrder: orderIds,\n                checkedUser: selectValue\n              });\n\n            case 3:\n              _yield$apiReview$fetc = _context2.sent;\n              _yield$apiReview$fetc2 = _yield$apiReview$fetc.data;\n              data = _yield$apiReview$fetc2.data;\n              code = _yield$apiReview$fetc2.code;\n\n              if (code == 0) {\n                _message.success('选择分配成功');\n\n                onHide();\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function onEdit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(_Modal, {\n    title: \"\\u9009\\u62E9\\u5206\\u914D\",\n    maskClosable: false,\n    visible: visible,\n    onOk: onEdit,\n    onCancel: onHide,\n    cancelText: \"\\u53D6\\u6D88\",\n    okText: \"\\u786E\\u5B9A\",\n    width: 600,\n    height: 600,\n    destroyOnClose: true\n  }, __jsx(_Row, {\n    gutter: [0, 16]\n  }, __jsx(_Col, {\n    span: 4\n  }, \"\\u9009\\u4E2D\\u6570\\u91CF\\uFF1A\"), __jsx(_Col, {\n    span: 20\n  }, Array.isArray(orderIds) ? orderIds.length : 0, \"\\u4E2A\\uFF0C\\u8BF7\\u9009\\u62E9\\u5206\\u914D\\u5BF9\\u8C61\")), __jsx(_Row, {\n    gutter: [0, 260]\n  }, __jsx(_Col, {\n    span: 2\n  }, \"\\u4EBA\\u5458\\uFF1A\"), __jsx(_Col, {\n    span: 22\n  }, __jsx(_Select, {\n    style: {\n      width: 500\n    },\n    mode: \"multiple\",\n    onChange: handleChange\n  }, selectData.map(function (v, i) {\n    return __jsx(_Select.Option, {\n      key: i,\n      value: v.id\n    }, v.accountName, \"_\", v.roleName);\n  })))));\n}\n\nexport default SelectDistributionModal;","map":null,"metadata":{},"sourceType":"module"}