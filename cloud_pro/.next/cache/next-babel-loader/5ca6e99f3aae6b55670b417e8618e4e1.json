{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/collection';\n\nconst useTransvertMembers = () => {\n  const [cookies] = useCookies(['sessionId']);\n  const {\n    0: treeData,\n    1: setTreeData\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await api.getTreeMemberList({\n          authToken: cookies.sessionId\n        });\n\n        if (code == 0) {\n          tansvertKey(data);\n          tansvertChildrenKey(data);\n          setTreeData([data]);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const tansvertKey = mem => {\n    setCommonKey(mem);\n    mem.children = mem.children && mem.children.length ? mem.children : [];\n  };\n\n  const setCommonKey = one => {\n    one.title = `${one.trueName}_${one.roleName}`;\n    one.value = `${one.accountName}`;\n    one.key = String(one.accountName);\n    one.token = one.authToken;\n  };\n\n  const tansvertChildrenKey = mem => {\n    if (Array.isArray(mem.children)) {\n      for (let i = 0; i < mem.children.length; i++) {\n        let one = mem.children[i];\n        setCommonKey(one);\n\n        if (one.children && one.children.length) {\n          tansvertChildrenKey(one);\n        }\n      }\n    }\n  };\n\n  return treeData;\n};\n\nexport default useTransvertMembers;","map":null,"metadata":{},"sourceType":"module"}