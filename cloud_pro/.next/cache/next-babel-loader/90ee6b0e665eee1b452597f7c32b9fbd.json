{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nexport default function (props) {\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  useEffect(function () {\n    form.resetFields();\n\n    if (props.data) {\n      console.log(props.data);\n      var productReview = props.data.productReview;\n\n      var prams = _objectSpread(_objectSpread({}, props.data), {}, {\n        productReviewSwitch: props.data.productReviewSwitch == 1,\n        productReviewData: productReview ? productReview.split('/') : [],\n        productUnsetReviewSwitch: props.data.productUnsetReviewSwitch == 1\n      });\n\n      form.setFieldsValue(prams);\n    }\n  }, [props.productId, props.data]);\n\n  var saveSetting = function saveSetting() {\n    form.validateFields().then(function (values) {\n      var productReviewSwitch = values.productReviewSwitch,\n          productReviewData = values.productReviewData,\n          productUnsetReviewSwitch = values.productUnsetReviewSwitch,\n          params = _objectWithoutProperties(values, [\"productReviewSwitch\", \"productReviewData\", \"productUnsetReviewSwitch\"]);\n\n      params.productReviewSwitch = productReviewSwitch ? 1 : 0;\n      params.productUnsetReviewSwitch = productUnsetReviewSwitch ? 1 : 0;\n      params.productReview = productReviewData.join('/');\n      props.saveSetting(params);\n    })[\"catch\"](function (errorInfo) {\n      console.error(errorInfo);\n    });\n  };\n\n  var style = {\n    display: 'inline-block',\n    marginBottom: 0,\n    verticalAlign: 'initial'\n  };\n  return __jsx(_Form, {\n    form: form\n  }, __jsx(_Form.Item, {\n    name: \"productReviewSwitch\",\n    valuePropName: \"checked\"\n  }, __jsx(_Checkbox, null, __jsx(_Form.Item, {\n    noStyle: true\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold',\n      marginRight: 15\n    }\n  }, \"\\u5468\\u671F\\u68C0\\u67E5:\"), __jsx(\"span\", null, \"\\u653E\\u6B3E\\u540E\\u7B2C\\u2003\"), __jsx(_Form.Item, {\n    style: style,\n    rules: [function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var isChecked = getFieldValue('productReviewSwitch');\n\n          if (isChecked && !value) {\n            return Promise.reject('请输入');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }],\n    name: ['productReviewData', 0]\n  }, __jsx(_InputNumber, {\n    min: 0,\n    precision: 0\n  })), __jsx(\"span\", null, \"\\u2003\\u5929\\u5F00\\u59CB,\\u2003\"), __jsx(_Form.Item, {\n    style: style,\n    rules: [function (_ref2) {\n      var getFieldValue = _ref2.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var isChecked = getFieldValue('productReviewSwitch');\n\n          if (isChecked && !value) {\n            return Promise.reject('请输入');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }],\n    name: ['productReviewData', 1]\n  }, __jsx(_InputNumber, {\n    min: 0,\n    precision: 0\n  })), __jsx(\"span\", null, \"\\u2003\\u5929\\u4E00\\u6B21\\uFF0C\\u5171\\u2003\"), __jsx(_Form.Item, {\n    rules: [function (_ref3) {\n      var getFieldValue = _ref3.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var isChecked = getFieldValue('productReviewSwitch');\n\n          if (isChecked && !value) {\n            return Promise.reject('请输入');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }],\n    style: style,\n    name: ['productReviewData', 2]\n  }, __jsx(_InputNumber, {\n    min: 0,\n    precision: 0\n  })), __jsx(\"span\", null, \"\\u2003\\u6B21\\u3002\")))), __jsx(_Form.Item, {\n    name: \"productUnsetReviewSwitch\",\n    valuePropName: \"checked\"\n  }, __jsx(_Checkbox, null, __jsx(_Form.Item, {\n    noStyle: true\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold',\n      marginRight: 15\n    }\n  }, \"\\u975E\\u56FA\\u5B9A\\u68C0\\u67E5:\"), __jsx(\"span\", null, \"\\u653E\\u6B3E\\u540E\\u7B2C\\u2003\"), __jsx(_Form.Item, {\n    style: style,\n    rules: [// {required: true, message: '请输入贷款期限'},\n    function (_ref4) {\n      var getFieldValue = _ref4.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          var isChecked = getFieldValue('productUnsetReviewSwitch');\n\n          if (isChecked && !value) {\n            return Promise.reject('请输入');\n          }\n\n          if (!value) {\n            return Promise.resolve();\n          }\n\n          var arr = value.split('/').filter(function (v) {\n            return !!v;\n          });\n          var reg = /(^[1-9]\\d*$)/;\n          var isTrue = arr.every(function (v) {\n            return reg.test(v);\n          });\n\n          if (!isTrue) {\n            return Promise.reject('请输入正确的天数，必须是正整数');\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }],\n    name: \"productUnsetReview\"\n  }, __jsx(_Input, {\n    style: {\n      width: 280\n    },\n    placeholder: \"\\u591A\\u4E2A\\u503C\\u7528\\u201C/\\u201D \\u9694\\u5F00\\uFF0C\\u5982\\u201C15/30/60\\u201D\"\n  })), __jsx(\"span\", null, \"\\u2003\\u5929\\u3002\\u2003\")))), __jsx(_Form.Item, null, __jsx(_Button, {\n    type: \"primary\",\n    onClick: saveSetting\n  }, \"\\u4FDD\\u5B58\")));\n}","map":null,"metadata":{},"sourceType":"module"}