{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport Router, { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport api from '~/api/collection';\nconst breadcrumbs = [{\n  text: '催收管理'\n}, {\n  text: '催收历史记录'\n}, {\n  text: '催收历史'\n}, {\n  text: '历史详情'\n}];\n\nfunction body({\n  router\n}) {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: pageParams,\n    1: setPageParams\n  } = useState({\n    page: 1,\n    pageSize: 10\n  });\n  const {\n    0: companys,\n    1: setCompanys\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data: {\n            data,\n            code\n          }\n        } = await api.fetch_all_whitelist({\n          page: 1,\n          pageSize: 9999,\n          useStatus: 1\n        });\n\n        if (code == 0) {\n          setCompanys(data.list);\n        }\n\n        fetchList(pageParams);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const fetchList = async pageParams => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.fetch_history_detail({\n        collectionOrderId: router.query.id,\n        page: pageParams.page,\n        pageSize: pageParams.pageSize\n      });\n\n      if (code == 0) {\n        setList(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const columns = [{\n    title: '催收订单ID',\n    dataIndex: 'collectionOrderId',\n    key: 'collectionOrderId',\n    width: 150\n  }, {\n    title: '催收级别',\n    dataIndex: 'collectionLevel',\n    key: 'collectionLevel',\n    width: 150\n  }, // {\n  //   title: '逾期天数',\n  //   dataIndex: 'overdueDays',\n  //   key: 'overdueDays',\n  //   width: 150,\n  // },\n  // {\n  //   title: '状态',\n  //   dataIndex: 'collectionStatus',\n  //   key: 'collectionStatus',\n  //   width: 150,\n  // },\n  {\n    title: '催收员账号',\n    dataIndex: 'accountId',\n    key: 'accountId',\n    width: 150\n  }, {\n    title: '催收员姓名',\n    dataIndex: 'accountName',\n    key: 'accountName',\n    width: 150\n  }, {\n    title: '催收员所属部门',\n    dataIndex: 'companyId',\n    key: 'companyId',\n    width: 150,\n    render: (text, record, index) => {\n      let findOne = companys.find(one => one.id == text);\n      return findOne ? findOne.companyName : '';\n    }\n  }, {\n    title: '入催日期',\n    dataIndex: 'beginTime',\n    key: 'beginTime',\n    width: 150\n  }, {\n    title: '最近一次催收日期',\n    dataIndex: 'lastCollectionTime',\n    key: 'lastCollectionTime',\n    width: 250\n  }, {\n    title: '入催期应还日期',\n    dataIndex: 'planRepayTime',\n    key: 'planRepayTime',\n    width: 250\n  }, {\n    title: '实际还款日期',\n    dataIndex: 'realRepayTime',\n    key: 'realRepayTime',\n    width: 250\n  }, {\n    title: '催收次数',\n    dataIndex: 'collectionTimes',\n    key: 'collectionTimes',\n    width: 150\n  }, {\n    title: '备注',\n    dataIndex: 'remark',\n    key: 'remark',\n    width: 150\n  }, {\n    title: '创建人',\n    dataIndex: 'createUser',\n    key: 'createUser',\n    width: 150\n  }, {\n    title: '创建日期',\n    dataIndex: 'createTime',\n    key: 'createTime',\n    width: 250\n  }];\n\n  const onChange = (pagination, filters, sorter, extra) => {\n    console.log(pagination, filters, sorter, extra);\n    pageParams.page = pagination.current;\n    pageParams.pageSize = pagination.pageSize;\n    setPageParams(_objectSpread({}, pageParams));\n    fetchList(pageParams);\n  };\n\n  const paginationConfig = {\n    total: list.total,\n    current: pageParams.page,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    defaultPageSize: pageParams.pageSize,\n    showTotal: total => `共 ${total} 条`\n  };\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Table, {\n    rowKey: \"id\",\n    dataSource: list.list,\n    columns: columns,\n    bordered: true,\n    pagination: paginationConfig,\n    scroll: {\n      y: '100%',\n      x: '100%'\n    },\n    onChange: onChange\n  }));\n}\n\nexport default withRouter(body);","map":null,"metadata":{},"sourceType":"module"}