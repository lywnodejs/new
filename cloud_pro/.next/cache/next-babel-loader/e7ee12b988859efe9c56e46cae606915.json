{"ast":null,"code":"import { gwRequest } from '~/utils/fetch';\nexport default {\n  getBranchList: function getBranchList(params) {\n    return gwRequest('bank.api.usermanageraccountservice.searchnetworks', [params]);\n  },\n  getBranch4other: function getBranch4other(params) {\n    return gwRequest('bank.api.usermanageraccountservice.getnetworkbydepartmentid', [{}]);\n  },\n  getNetworkDepartmentTree: function getNetworkDepartmentTree(params) {\n    return gwRequest('bank.api.usermanageraccountservice.getnetworkdepartmenttree', [{}]);\n  },\n  editBranchItem: function editBranchItem(params) {\n    var methodName = params.id ? 'bank.api.usermanageraccountservice.editnetwork' : 'bank.api.usermanageraccountservice.addnetwork';\n    return gwRequest(methodName, [params]);\n  },\n  deleteBranch: function deleteBranch(id) {\n    return gwRequest('bank.api.usermanageraccountservice.deletenetwork', [{\n      id: id\n    }]);\n  },\n  getManagerList: function getManagerList(params) {\n    return gwRequest('bank.api.usermanageraccountservice.searchallusermanager', [params]);\n  },\n  editManagerItem: function editManagerItem(params) {\n    var methodName = params.id ? 'bank.api.usermanageraccountservice.updatemanages' : 'bank.api.usermanageraccountservice.insertmanages';\n    return gwRequest(methodName, [params]);\n  },\n  deleteManager: function deleteManager(id) {\n    return gwRequest('bank.api.usermanageraccountservice.deletemanages', [{\n      id: id\n    }]);\n  },\n  updateManagerStatus: function updateManagerStatus(params) {\n    return gwRequest('bank.api.usermanageraccountservice.updatemanagesstatus', [params]);\n  },\n  getOrders: function getOrders(params) {\n    return gwRequest('bank.api.usermanageraccountservice.searchorders', [params]);\n  },\n  getUsers: function getUsers() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return gwRequest('bank.api.usermanageraccountservice.getusermanageraccounttree', [params]);\n  },\n  updateAssign: function updateAssign(params) {\n    return gwRequest('bank.api.usermanageraccountservice.giveordertouser', [params]);\n  },\n  getNetWorks: function getNetWorks(params) {\n    return gwRequest('bank.api.branchnetworkservice.getnetworklist', [params]);\n  },\n  getAchievementByNetwork: function getAchievementByNetwork(params) {\n    return gwRequest('bank.api.newusermanagerachievementservice.getachievementbynetwork', [params]);\n  },\n  getAchievementByManager: function getAchievementByManager(params) {\n    return gwRequest('bank.api.newusermanagerachievementservice.getachievementbymanager', [params]);\n  },\n  getManagerByNetworkId: function getManagerByNetworkId(params) {\n    return gwRequest('bank.api.usermanageraccountservice.getmanagerbynetworkid', [params]);\n  },\n  getTaskList: function getTaskList(params) {\n    return gwRequest('bank.api.distributestatisticsservice.distributestatistics', [params]);\n  },\n  exportTaskData: function exportTaskData(params) {\n    return gwRequest('bank.api.distributestatisticsservice.statisticsexport', [params]);\n  },\n  getNetwork4report: function getNetwork4report() {\n    return gwRequest('bank.api.newusermanagerachievementservice.getnetworklist', [{}]);\n  },\n  getProduct4report: function getProduct4report(params) {\n    return gwRequest('bank.api.newusermanagerachievementservice.getproductlist', [params]);\n  },\n  exportReportData: function exportReportData(params) {\n    return gwRequest('bank.api.newusermanagerachievementservice.statisticsexport', [params]);\n  },\n  getDepart4select: function getDepart4select() {\n    return gwRequest(\"bank.api.usermanageraccountservice.getdepartmentlist\", [{}]);\n  }\n};","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/api/business.js"],"names":["gwRequest","getBranchList","params","getBranch4other","getNetworkDepartmentTree","editBranchItem","methodName","id","deleteBranch","getManagerList","editManagerItem","deleteManager","updateManagerStatus","getOrders","getUsers","updateAssign","getNetWorks","getAchievementByNetwork","getAchievementByManager","getManagerByNetworkId","getTaskList","exportTaskData","getNetwork4report","getProduct4report","exportReportData","getDepart4select"],"mappings":"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","sourcesContent":["import {gwRequest} from '~/utils/fetch'\nexport default {\n  getBranchList: (params) => {\n    return gwRequest('bank.api.usermanageraccountservice.searchnetworks', [\n      params,\n    ])\n  },\n  getBranch4other: (params) => {\n    return gwRequest(\n      'bank.api.usermanageraccountservice.getnetworkbydepartmentid',\n      [{}],\n    )\n  },\n  getNetworkDepartmentTree: (params) => {\n    return gwRequest(\n      'bank.api.usermanageraccountservice.getnetworkdepartmenttree',\n      [{}],\n    )\n  },\n\n  editBranchItem: (params) => {\n    const methodName = params.id\n      ? 'bank.api.usermanageraccountservice.editnetwork'\n      : 'bank.api.usermanageraccountservice.addnetwork'\n    return gwRequest(methodName, [params])\n  },\n  deleteBranch: (id) => {\n    return gwRequest('bank.api.usermanageraccountservice.deletenetwork', [{id}])\n  },\n  getManagerList: (params) => {\n    return gwRequest(\n      'bank.api.usermanageraccountservice.searchallusermanager',\n      [params],\n    )\n  },\n  editManagerItem: (params) => {\n    const methodName = params.id\n      ? 'bank.api.usermanageraccountservice.updatemanages'\n      : 'bank.api.usermanageraccountservice.insertmanages'\n    return gwRequest(methodName, [params])\n  },\n  deleteManager: (id) => {\n    return gwRequest('bank.api.usermanageraccountservice.deletemanages', [{id}])\n  },\n  updateManagerStatus: (params) => {\n    return gwRequest('bank.api.usermanageraccountservice.updatemanagesstatus', [\n      params,\n    ])\n  },\n\n  getOrders: (params) => {\n    return gwRequest('bank.api.usermanageraccountservice.searchorders', [\n      params,\n    ])\n  },\n  getUsers: (params = {}) => {\n    return gwRequest(\n      'bank.api.usermanageraccountservice.getusermanageraccounttree',\n      [params],\n    )\n  },\n  updateAssign: (params) => {\n    return gwRequest('bank.api.usermanageraccountservice.giveordertouser', [\n      params,\n    ])\n  },\n  getNetWorks: (params) => {\n    return gwRequest('bank.api.branchnetworkservice.getnetworklist', [params])\n  },\n  getAchievementByNetwork: (params) => {\n    return gwRequest(\n      'bank.api.newusermanagerachievementservice.getachievementbynetwork',\n      [params],\n    )\n  },\n  getAchievementByManager: (params) => {\n    return gwRequest(\n      'bank.api.newusermanagerachievementservice.getachievementbymanager',\n      [params],\n    )\n  },\n  getManagerByNetworkId: (params) => {\n    return gwRequest(\n      'bank.api.usermanageraccountservice.getmanagerbynetworkid',\n      [params],\n    )\n  },\n  getTaskList: (params) => {\n    return gwRequest(\n      'bank.api.distributestatisticsservice.distributestatistics',\n      [params],\n    )\n  },\n  exportTaskData: (params) => {\n    return gwRequest('bank.api.distributestatisticsservice.statisticsexport', [\n      params,\n    ])\n  },\n  getNetwork4report: () => {\n    return gwRequest(\n      'bank.api.newusermanagerachievementservice.getnetworklist',\n      [{}],\n    )\n  },\n  getProduct4report: (params) => {\n    return gwRequest(\n      'bank.api.newusermanagerachievementservice.getproductlist',\n      [params],\n    )\n  },\n  exportReportData: (params) => {\n    return gwRequest(\n      'bank.api.newusermanagerachievementservice.statisticsexport',\n      [params],\n    )\n  },\n  getDepart4select: () => {\n    return gwRequest(`bank.api.usermanageraccountservice.getdepartmentlist`, [\n      {},\n    ])\n  },\n}\n"]},"metadata":{},"sourceType":"module"}