{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport { useEffect, useState } from 'react';\nimport apiAssets from '~/api/assets';\nvar breadcrumbs = [{\n  text: '资产保全'\n}, {\n  text: '导出记录'\n}];\nimport TableList from './TableList';\nvar pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nvar values = {};\n\nfunction body(props) {\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState([]),\n      totalData = _useState2[0],\n      setTotalData = _useState2[1];\n\n  useEffect(function () {\n    exportRecord();\n  }, []);\n\n  var exportRecord = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$apiAssets$fetc, _yield$apiAssets$fetc2, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return apiAssets.fetch_record_deduction(_objectSpread(_objectSpread({}, pageParams), {}, {\n                type: 1\n              }));\n\n            case 3:\n              _yield$apiAssets$fetc = _context.sent;\n              _yield$apiAssets$fetc2 = _yield$apiAssets$fetc.data;\n              data = _yield$apiAssets$fetc2.data;\n              code = _yield$apiAssets$fetc2.code;\n\n              if (code == 0) {\n                setList(data.list);\n                setTotalData(data.totalSize);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function exportRecord() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onPage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              exportRecord(values);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onPage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var downloadList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(item) {\n      var _yield$apiAssets$fetc3, _yield$apiAssets$fetc4, data, code;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return apiAssets.fetch_export_downLoad({\n                fileLogId: item.id\n              });\n\n            case 3:\n              _yield$apiAssets$fetc3 = _context3.sent;\n              _yield$apiAssets$fetc4 = _yield$apiAssets$fetc3.data;\n              data = _yield$apiAssets$fetc4.data;\n              code = _yield$apiAssets$fetc4.code;\n\n              if (code == 0) {\n                _message.success('下载成功');\n\n                window.open(data);\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function downloadList(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    isGray: true,\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Card, null, __jsx(TableList, {\n    list: list,\n    onPage: onPage,\n    pageParams: pageParams,\n    totalData: totalData,\n    downloadList: downloadList\n  })));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}