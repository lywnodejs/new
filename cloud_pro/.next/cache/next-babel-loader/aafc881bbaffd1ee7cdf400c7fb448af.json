{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport apiBusiness from '~/api/business';\nimport apiPay from '~/api/pay';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { useCookies } from 'react-cookie';\nconst {\n  RangePicker\n} = _TimePicker;\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\n\nconst EditModal = props => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(props.show);\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: showRoles,\n    1: setShowRoles\n  } = useState(props.branches || []);\n\n  const [form] = _Form.useForm();\n\n  const [cookies] = useCookies(['name']);\n  const {\n    0: channels,\n    1: setChannels\n  } = useState([]);\n  useEffect(() => {\n    setShow(props.show);\n\n    if (!props.show) {\n      form.resetFields();\n      setConfirmLoading(false);\n    } else {\n      let data = props.data;\n      form.setFieldsValue(data);\n\n      if (data) {\n        changePayType(data.payChannelType, data.payChannelCode);\n      }\n    }\n  }, [props]);\n\n  const changePayType = (type, payChannelCode) => {\n    let arr = props.channels.filter(v => {\n      return v.code.indexOf(`-${type}`) > -1;\n    });\n    setChannels(arr);\n    form.setFieldsValue({\n      payChannelCode\n    });\n  };\n\n  const handleCancel = () => {\n    form.resetFields();\n    form.setFieldsValue(null);\n    props.close();\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    form.validateFields().then(async values => {\n      const params = Object.assign({}, values);\n\n      if (props.data) {\n        params.id = props.data.id;\n      }\n\n      let {\n        data: {\n          code\n        }\n      } = await apiPay.editPayChannelConfig(params);\n      setConfirmLoading(false);\n\n      if (code == 0) {\n        form.resetFields();\n        form.setFieldsValue(null);\n        props.close(true, true);\n      }\n    }).catch(err => {\n      setConfirmLoading(false);\n    });\n  };\n\n  return __jsx(_Modal, {\n    title: props.data ? '编辑' : '新增',\n    visible: show,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    confirmLoading: confirmLoading\n  }, __jsx(_Form, _extends({}, layout, {\n    form: form,\n    name: \"basic\"\n  }), __jsx(_Form.Item, {\n    label: \"\\u4EA7\\u54C1\\u540D\\u79F0\",\n    name: \"productType\",\n    rules: [{\n      required: true,\n      message: '请选择产品名称'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u4EA7\\u54C1\\u540D\\u79F0\",\n    style: {\n      width: '200px'\n    }\n  }, props.products.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.code + '',\n      key: i\n    }, v.description);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u652F\\u4ED8\\u7C7B\\u578B\",\n    name: \"payChannelType\",\n    rules: [{\n      required: true,\n      message: '请选择支付类型'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u652F\\u4ED8\\u7C7B\\u578B\",\n    style: {\n      width: '200px'\n    },\n    onChange: v => changePayType(v)\n  }, __jsx(_Select.Option, {\n    value: \"in\"\n  }, \"\\u6536\\u6B3E\"), __jsx(_Select.Option, {\n    value: \"out\"\n  }, \"\\u653E\\u6B3E\"))), __jsx(_Form.Item, {\n    label: \"\\u652F\\u4ED8\\u901A\\u9053\",\n    name: \"payChannelCode\",\n    rules: [{\n      required: true,\n      message: '请选择支付通道'\n    }]\n  }, __jsx(_Select, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u652F\\u4ED8\\u901A\\u9053\",\n    style: {\n      width: '200px'\n    }\n  }, channels.map((v, i) => {\n    return __jsx(_Select.Option, {\n      value: v.code,\n      key: i\n    }, v.description);\n  }))), __jsx(_Form.Item, {\n    label: \"\\u8DEF\\u7531\\u6BD4\\u4F8B\",\n    name: \"channelWeight\",\n    rules: [{\n      required: true,\n      message: '路由比例不可为空'\n    }]\n  }, __jsx(_InputNumber, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u8DEF\\u7531\\u6BD4\\u4F8B\\uFF080-100\\uFF09\",\n    min: 0,\n    max: 100,\n    precision: 0\n  })), __jsx(_Form.Item, {\n    label: \"\\u542F\\u7528\\u72B6\\u6001\",\n    name: \"relaStatus\",\n    rules: [{\n      required: true,\n      message: '请选择启用状态'\n    }]\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: 1\n  }, \"\\u542F\\u7528\"), __jsx(_Radio, {\n    value: 0\n  }, \"\\u505C\\u7528\")))));\n};\n\nexport default EditModal;","map":null,"metadata":{},"sourceType":"module"}