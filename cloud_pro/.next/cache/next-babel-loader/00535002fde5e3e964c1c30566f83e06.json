{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiProduct from '~/api/product';\nimport Router from 'next/router';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/agreement';\nimport TableList from './TableList';\nimport { base64ToFileOrBlob } from 'web-downloadfile';\nconst {\n  TabPane\n} = _Tabs;\nconst breadcrumbs = [{\n  text: '协议管理'\n}, {\n  text: '签章查询'\n}];\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nlet values = {};\n\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: activeKey,\n    1: setActiveKey\n  } = useState('-1');\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: agreementIds,\n    1: setAgreementIds\n  } = useState([]);\n  useEffect(() => {\n    fetchProductList();\n  }, []);\n  useEffect(() => {\n    if (activeKey != -1) {\n      form.resetFields();\n      onSearch({});\n    }\n  }, [activeKey]);\n\n  const fetchProductList = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiProduct.get_products({\n        tenantId: cookies.tenantId\n      });\n\n      if (code == 0) {\n        setProductList(data);\n        data && data.length && setActiveKey(String(data[0].id));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchList = async (values = {}) => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getSignAgreementList(_objectSpread(_objectSpread(_objectSpread({}, pageParams), values), {}, {\n        productId: activeKey\n      }));\n\n      if (code == 0) {\n        console.log(data);\n        setList(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    onSearch({});\n  };\n\n  const changeTab = async key => {\n    setActiveKey(key);\n  };\n\n  const onSearch = value => {\n    values = value;\n    pageParams.pageNo = 1;\n    fetchList(_objectSpread({}, values));\n  };\n\n  const onPage = () => {\n    fetchList(values);\n  };\n\n  const onDownLoad = async ids => {\n    const params = ids || agreementIds;\n\n    try {\n      if (!params.length) {\n        return _message.error('请选择项目');\n      }\n\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.downloadSignAgreement(params);\n\n      if (code == 0) {\n        base64ToFileOrBlob('data:application/zip;base64,' + data.pdfData, '', false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onPreview = record => {\n    window.open(record.url);\n  };\n\n  const onDownLoadItem = async record => {\n    onDownLoad([record.id]);\n  };\n\n  const appendAgreementIds = ids => {\n    setAgreementIds(ids);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Tabs, {\n    activeKey: activeKey,\n    onTabClick: key => changeTab(key, false)\n  }, productList && productList.length ? productList.map(item => __jsx(TabPane, {\n    tab: item.name,\n    key: item.id,\n    forceRender: true\n  })) : null), __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(_Form, {\n    form: form,\n    onFinish: onSearch,\n    layout: \"inline\",\n    className: \"searchForm\"\n  }, __jsx(_Form.Item, {\n    label: \"\\u624B\\u673A\\u53F7\",\n    name: \"phone\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u7528\\u6237\\u540D\",\n    name: \"name\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u534F\\u8BAE\\u540D\\u79F0\",\n    name: \"fileName\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: onReset\n  }, \"\\u91CD\\u7F6E\"), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: () => onDownLoad()\n  }, \"\\u4E0B\\u8F7D\")), __jsx(TableList, {\n    list,\n    onPage,\n    pageParams,\n    onDownLoadItem,\n    onPreview,\n    appendAgreementIds\n  })));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}