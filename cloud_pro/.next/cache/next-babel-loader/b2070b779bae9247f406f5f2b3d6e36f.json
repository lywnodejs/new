{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apiProduct from '~/api/product';\nimport { useCookies } from 'react-cookie';\nimport api from '~/api/agreement';\nimport AgreementForm from './AgreementForm';\nimport TableList from './TableList';\nconst {\n  TabPane\n} = _Tabs;\nimport { base64ToFileOrBlob } from 'web-downloadfile';\nconst breadcrumbs = [{\n  text: '协议管理'\n}, {\n  text: '协议列表'\n}];\nconst pageParams = {\n  pageNo: 1,\n  pageSize: 10\n};\nlet values = {};\n\nfunction body(props) {\n  const [cookies] = useCookies(['tenantId']);\n  const {\n    0: activeKey,\n    1: setActiveKey\n  } = useState('-1');\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: selectIndex,\n    1: setIndex\n  } = useState(-1);\n  const {\n    0: selectItem,\n    1: setSelectItem\n  } = useState({});\n  const {\n    0: showPages,\n    1: setShowPages\n  } = useState([]);\n  const {\n    0: allPages,\n    1: setAllPages\n  } = useState([]);\n  const {\n    0: statusList,\n    1: setStatusList\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: agreementIds,\n    1: setAgreementIds\n  } = useState([]);\n  const {\n    0: appTypes,\n    1: setAppTypes\n  } = useState([]);\n  const {\n    0: tempData,\n    1: setTempData\n  } = useState([]);\n  const {\n    0: signNode,\n    1: setSignNode\n  } = useState([]);\n  useEffect(() => {\n    function fetchData() {\n      fetchProductList();\n      fetchAppType();\n      fetchAllPages();\n      fetchStatusList();\n      getTempData();\n      getSignNode();\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    function fetchData() {\n      if (activeKey != -1) {\n        form.resetFields();\n        onSearch({});\n      }\n    }\n\n    fetchData();\n  }, [activeKey]);\n\n  const fetchProductList = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await apiProduct.get_products({\n        tenantId: cookies.tenantId\n      });\n\n      if (code == 0) {\n        setProductList(data);\n        data && data.length && setActiveKey(String(data[0].id));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; // 获取模板列表\n\n\n  const getTempData = async () => {\n    let {\n      data: {\n        code,\n        data\n      }\n    } = await api.getEnableTemplateList({\n      route: null\n    });\n\n    if (code == 0) {\n      setTempData(data || []);\n    }\n  }; // 获取应用类型\n\n\n  const fetchAppType = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getAppType();\n\n      if (code == 0) {\n        const keys = Object.keys(data);\n        const types = keys.map(key => {\n          return {\n            key,\n            value: data[key]\n          };\n        });\n        setAppTypes(types);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const changeAppType = key => {\n    console.log(key);\n\n    if (!key) {\n      return setShowPages([]);\n    }\n\n    let item = appTypes.find(v => v.key == key);\n    let pages = allPages[item.value];\n    const keys = Object.keys(pages);\n    const showPage = keys.map(key => {\n      return {\n        key,\n        value: pages[key]\n      };\n    });\n    setShowPages(showPage);\n  }; // 获取展示页面\n\n\n  const fetchAllPages = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getAllPage();\n\n      if (code == 0) {\n        setAllPages(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; // 获取签章节点\n\n\n  const getSignNode = async () => {\n    const {\n      data: {\n        data,\n        code\n      }\n    } = await api.getSignNode();\n\n    if (code == 0) {\n      setSignNode(data);\n    }\n  };\n\n  const fetchStatusList = async () => {\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getStatusList();\n\n      if (code == 0) {\n        const arr = data && Object.keys(data).map(key => {\n          return {\n            key,\n            value: data[key]\n          };\n        }) || [];\n        setStatusList(arr);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchList = async (values = {}) => {\n    // getAgreementList\n    try {\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.getAgreementList(_objectSpread(_objectSpread(_objectSpread({}, pageParams), values), {}, {\n        productId: activeKey\n      }));\n\n      if (code == 0) {\n        setList(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onAdd = () => {\n    setIndex(-1);\n    setVisible(true);\n    setSelectItem({});\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    onSearch({});\n  };\n\n  const changeTab = async key => {\n    setActiveKey(key);\n  };\n\n  const onSearch = value => {\n    values = value;\n    pageParams.pageNo = 1;\n    fetchList(_objectSpread({}, values));\n  };\n\n  const onPage = () => {\n    fetchList(values);\n  };\n\n  const onEdit = (_ref) => {\n    let item = Object.assign({}, _ref);\n    item.applicationType = item.applicationTypeKey;\n    item.showPage = item.showPageKey;\n    setIndex(item.id);\n    setVisible(true);\n    setSelectItem(item);\n  };\n\n  const onDownLoad = async () => {\n    try {\n      if (!agreementIds.length) {\n        return _message.error('请选择项目');\n      }\n\n      const {\n        data: {\n          data,\n          code\n        }\n      } = await api.downloadAgreement(agreementIds);\n\n      if (code == 0) {\n        base64ToFileOrBlob('data:application/zip;base64,' + data.pdfData, '', false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onPreview = record => {\n    api.previewAgreement(record.id).then(res => {\n      if (res.data.code == 0) {\n        window.open(res.data.data);\n      }\n    });\n  };\n\n  const onSwitchStatus = async (record, i) => {\n    let params = {\n      id: record.id,\n      status: record.status == 1 ? 0 : 1\n    };\n\n    _Modal.confirm({\n      content: `确定将此协议${record.status == 1 ? '停用' : '启用'}吗？`,\n      onOk: async () => {\n        api.changeAgreementStatus(params).then(res => {\n          if (res.data.code == 0) {\n            _message.success('修改成功');\n\n            let temp = _objectSpread({}, list);\n\n            temp.list[i].status = params.status;\n            setList(temp);\n          }\n        });\n      }\n    });\n  };\n\n  const appendAgreementIds = ids => {\n    setAgreementIds(ids);\n  };\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Tabs, {\n    activeKey: activeKey,\n    onTabClick: key => changeTab(key, false)\n  }, productList && productList.length ? productList.map(item => __jsx(TabPane, {\n    tab: item.name,\n    key: item.id,\n    forceRender: true\n  })) : null), __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(_Form, {\n    form: form,\n    onFinish: onSearch,\n    layout: \"inline\",\n    className: \"searchForm\",\n    initialValues: {\n      templateName: '',\n      status: '',\n      showPage: null,\n      applicationType: null\n    }\n  }, __jsx(_Form.Item, {\n    label: \"\\u5E94\\u7528\\u7C7B\\u578B\",\n    name: \"applicationType\"\n  }, __jsx(_Select, {\n    style: {\n      width: '160px'\n    },\n    onChange: changeAppType\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u5168\\u90E8\"), appTypes.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.key\n  }, v.value)))), __jsx(_Form.Item, {\n    label: \"\\u5C55\\u793A\\u9875\\u9762\",\n    name: \"showPage\"\n  }, __jsx(_Select, {\n    style: {\n      width: '160px'\n    }\n  }, __jsx(_Select.Option, {\n    value: null\n  }, \"\\u5168\\u90E8\"), showPages.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.key\n  }, v.value)))), __jsx(_Form.Item, {\n    label: \"\\u534F\\u8BAE\\u540D\\u79F0\",\n    name: \"templateName\"\n  }, __jsx(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\"\n  })), __jsx(_Form.Item, {\n    label: \"\\u72B6\\u6001\",\n    name: \"status\"\n  }, __jsx(_Select, {\n    style: {\n      width: '160px'\n    }\n  }, __jsx(_Select.Option, {\n    value: \"\"\n  }, \"\\u5168\\u90E8\"), statusList.map((v, i) => __jsx(_Select.Option, {\n    key: i,\n    value: v.key\n  }, v.value)))), __jsx(_Button, {\n    type: \"primary\",\n    style: {\n      marginRight: 15\n    },\n    htmlType: \"submit\"\n  }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: onReset\n  }, \"\\u91CD\\u7F6E\"), __jsx(_Button, {\n    style: {\n      marginRight: 15\n    },\n    onClick: onDownLoad\n  }, \"\\u4E0B\\u8F7D\"), __jsx(_Button, {\n    type: \"primary\",\n    onClick: onAdd\n  }, \"\\u65B0\\u589E\")), __jsx(TableList, {\n    list,\n    onPage,\n    pageParams,\n    onEdit,\n    onPreview,\n    showPages,\n    onSwitchStatus,\n    appendAgreementIds\n  }), __jsx(AgreementForm, {\n    appTypes,\n    allPages,\n    tempData,\n    signNode,\n    selectIndex,\n    visible,\n    onHide: () => setVisible(false),\n    selectItem,\n    pullData: onPage,\n    showPages,\n    productId: activeKey,\n    productList\n  })));\n}\n\nbody.getInitialProps = async () => {\n  return {};\n};\n\nexport default body;","map":null,"metadata":{},"sourceType":"module"}