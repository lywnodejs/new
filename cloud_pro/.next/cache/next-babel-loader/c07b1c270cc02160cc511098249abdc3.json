{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport React, { useEffect, useState } from 'react';\n\nconst TableList = ({\n  list,\n  setList,\n  totalData,\n  pageParams,\n  onPage,\n  onScore,\n  onFail\n}) => {\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(pageParams.pageSize);\n  const columns = [{\n    title: '数据文件',\n    dataIndex: 'fileName',\n    key: 'fileName',\n    width: 150\n  }, {\n    title: '数据类别',\n    dataIndex: 'typeDesc',\n    key: 'typeDesc',\n    width: 150\n  }, {\n    title: '操作时间',\n    dataIndex: 'createTimeStr',\n    key: 'createTimeStr',\n    width: 150\n  }, {\n    title: '操作员',\n    dataIndex: 'createUser',\n    key: 'createUser',\n    width: 80\n  }, {\n    title: '状态',\n    dataIndex: 'status',\n    key: 'status',\n    width: 100,\n    render: text => {\n      switch (text) {\n        case 1:\n          return '导入中';\n\n        case 2:\n          return '评分中';\n\n        case 3:\n          return '评分结束';\n      }\n    }\n  }, {\n    title: '导入成功/失败数',\n    dataIndex: 'uploadSuccNum',\n    key: 'uploadSuccNum',\n    width: 150,\n    render: (record, row) => {\n      return __jsx(\"div\", null, __jsx(\"p\", null, row.uploadSuccNum, \"/\", row.uploadFailNum));\n    }\n  }, {\n    title: '评分成功/失败数',\n    dataIndex: 'scoreSuccNum',\n    key: 'scoreSuccNum',\n    width: 150,\n    render: (record, row) => {\n      return __jsx(\"div\", null, __jsx(\"p\", null, row.scoreSuccNum, \"/\", row.scoreFailNum));\n    }\n  }, {\n    title: '操作',\n    dataIndex: 'cz',\n    key: 'cz',\n    width: 150,\n    render: (text, record, index) => {\n      return __jsx(React.Fragment, null, record.uploadFailNum === '-' ? __jsx(_Button, {\n        type: \"link\"\n      }, __jsx(\"label\", {\n        style: {\n          color: '#d7d7d7'\n        }\n      }, \"\\u4E0B\\u8F7D\\u5931\\u8D25\\u6570\\u636E\")) : __jsx(_Button, {\n        type: \"link\",\n        onClick: () => onFail(record)\n      }, __jsx(\"a\", null, \"\\u4E0B\\u8F7D\\u5931\\u8D25\\u6570\\u636E\")), record.scoreFailNum === '-' ? __jsx(_Button, {\n        type: \"link\",\n        style: {\n          color: '#d7d7d7'\n        }\n      }, \"\\u91CD\\u65B0\\u8BC4\\u5206\") : __jsx(_Button, {\n        type: \"link\",\n        onClick: () => onScore(record)\n      }, \"\\u91CD\\u65B0\\u8BC4\\u5206\"));\n    }\n  }];\n\n  const onShowSizeChange = (current, pageSize) => {\n    console.log(current, pageSize);\n    pageParams.pageSize = pageSize;\n    setPageSize(pageSize);\n  };\n\n  const pagination = {\n    defaultCurrent: 1,\n    total: totalData.total,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: total => {\n      return `共 ${total} 条记录`;\n    },\n    onChange: pageNumber => {\n      pageParams.pageNum = pageNumber;\n      onPage();\n    }\n  };\n\n  const onEditStatus = record => {\n    record.status = !record.status;\n    setList([...list]);\n  };\n\n  return __jsx(_Table, {\n    rowKey: record => record.id,\n    dataSource: list,\n    columns: columns,\n    pagination: pagination\n  });\n};\n\nexport default TableList;","map":{"version":3,"sources":["/Users/liuyawei/Desktop/信用算力/项目/cloud_pro/pages/vitalization/dataUpdate/TableList.js"],"names":["Router","React","useEffect","useState","TableList","list","setList","totalData","pageParams","onPage","onScore","onFail","pageSize","setPageSize","columns","title","dataIndex","key","width","render","text","record","row","uploadSuccNum","uploadFailNum","scoreSuccNum","scoreFailNum","index","color","onShowSizeChange","current","console","log","pagination","defaultCurrent","total","showQuickJumper","showSizeChanger","pageNum","showTotal","onChange","pageNumber","onEditStatus","status","id"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,IADiB;AAEjBC,EAAAA,OAFiB;AAGjBC,EAAAA,SAHiB;AAIjBC,EAAAA,UAJiB;AAKjBC,EAAAA,MALiB;AAMjBC,EAAAA,OANiB;AAOjBC,EAAAA;AAPiB,CAAD,KAQZ;AACJ,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAACK,UAAU,CAACI,QAAZ,CAAxC;AAEA,QAAME,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE,UAHP;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADc,EAOd;AACEH,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE,UAHP;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAPc,EAad;AACEH,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,eAFb;AAGEC,IAAAA,GAAG,EAAE,eAHP;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAbc,EAmBd;AACEH,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAnBc,EAyBd;AACEH,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChB,cAAQA,IAAR;AACE,aAAK,CAAL;AACE,iBAAO,KAAP;;AACF,aAAK,CAAL;AACE,iBAAO,KAAP;;AACF,aAAK,CAAL;AACE,iBAAO,MAAP;AANJ;AAQD;AAdH,GAzBc,EAyCd;AACEL,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,SAAS,EAAE,eAFb;AAGEC,IAAAA,GAAG,EAAE,eAHP;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,MAAM,EAAE,CAACE,MAAD,EAASC,GAAT,KAAiB;AACvB,aACE,mBACE,iBACGA,GAAG,CAACC,aADP,OACuBD,GAAG,CAACE,aAD3B,CADF,CADF;AAOD;AAbH,GAzCc,EAwDd;AACET,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,SAAS,EAAE,cAFb;AAGEC,IAAAA,GAAG,EAAE,cAHP;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,MAAM,EAAE,CAACE,MAAD,EAASC,GAAT,KAAiB;AACvB,aACE,mBACE,iBACGA,GAAG,CAACG,YADP,OACsBH,GAAG,CAACI,YAD1B,CADF,CADF;AAOD;AAbH,GAxDc,EAuEd;AACEX,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,IAFb;AAGEC,IAAAA,GAAG,EAAE,IAHP;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeM,KAAf,KAAyB;AAC/B,aACE,4BACGN,MAAM,CAACG,aAAP,KAAyB,GAAzB,GACC;AAAQ,QAAA,IAAI,EAAC;AAAb,SACE;AAAO,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAE;AAAR;AAAd,gDADF,CADD,GAKC;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAMjB,MAAM,CAACU,MAAD;AAAzC,SACE,wDADF,CANJ,EAWGA,MAAM,CAACK,YAAP,KAAwB,GAAxB,GACC;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR;AAA3B,oCADD,GAKC;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAMlB,OAAO,CAACW,MAAD;AAA1C,oCAhBJ,CADF;AAuBD;AA7BH,GAvEc,CAAhB;;AAwGA,QAAMQ,gBAAgB,GAAG,CAACC,OAAD,EAAUlB,QAAV,KAAuB;AAC9CmB,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqBlB,QAArB;AACAJ,IAAAA,UAAU,CAACI,QAAX,GAAsBA,QAAtB;AACAC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAJD;;AAMA,QAAMqB,UAAU,GAAG;AACjBC,IAAAA,cAAc,EAAE,CADC;AAEjBC,IAAAA,KAAK,EAAE5B,SAAS,CAAC4B,KAFA;AAGjBvB,IAAAA,QAAQ,EAAEA,QAHO;AAIjBwB,IAAAA,eAAe,EAAE,IAJA;AAKjBC,IAAAA,eAAe,EAAE,IALA;AAMjBR,IAAAA,gBAAgB,EAAEA,gBAND;AAOjBC,IAAAA,OAAO,EAAEtB,UAAU,CAAC8B,OAPH;AAQjBC,IAAAA,SAAS,EAAGJ,KAAD,IAAW;AACpB,aAAQ,KAAIA,KAAM,MAAlB;AACD,KAVgB;AAWjBK,IAAAA,QAAQ,EAAGC,UAAD,IAAgB;AACxBjC,MAAAA,UAAU,CAAC8B,OAAX,GAAqBG,UAArB;AACAhC,MAAAA,MAAM;AACP;AAdgB,GAAnB;;AAgBA,QAAMiC,YAAY,GAAIrB,MAAD,IAAY;AAC/BA,IAAAA,MAAM,CAACsB,MAAP,GAAgB,CAACtB,MAAM,CAACsB,MAAxB;AACArC,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACD,GAHD;;AAIA,SACE;AACE,IAAA,MAAM,EAAGgB,MAAD,IAAYA,MAAM,CAACuB,EAD7B;AAEE,IAAA,UAAU,EAAEvC,IAFd;AAGE,IAAA,OAAO,EAAES,OAHX;AAIE,IAAA,UAAU,EAAEmB;AAJd,IADF;AAQD,CArJD;;AAuJA,eAAe7B,SAAf","sourcesContent":["import Router from 'next/router'\nimport {Table, Button} from 'antd'\nimport React, {useEffect, useState} from 'react'\n\nconst TableList = ({\n  list,\n  setList,\n  totalData,\n  pageParams,\n  onPage,\n  onScore,\n  onFail,\n}) => {\n  const [pageSize, setPageSize] = useState(pageParams.pageSize)\n\n  const columns = [\n    {\n      title: '数据文件',\n      dataIndex: 'fileName',\n      key: 'fileName',\n      width: 150,\n    },\n    {\n      title: '数据类别',\n      dataIndex: 'typeDesc',\n      key: 'typeDesc',\n      width: 150,\n    },\n    {\n      title: '操作时间',\n      dataIndex: 'createTimeStr',\n      key: 'createTimeStr',\n      width: 150,\n    },\n    {\n      title: '操作员',\n      dataIndex: 'createUser',\n      key: 'createUser',\n      width: 80,\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n      width: 100,\n      render: (text) => {\n        switch (text) {\n          case 1:\n            return '导入中'\n          case 2:\n            return '评分中'\n          case 3:\n            return '评分结束'\n        }\n      },\n    },\n    {\n      title: '导入成功/失败数',\n      dataIndex: 'uploadSuccNum',\n      key: 'uploadSuccNum',\n      width: 150,\n      render: (record, row) => {\n        return (\n          <div>\n            <p>\n              {row.uploadSuccNum}/{row.uploadFailNum}\n            </p>\n          </div>\n        )\n      },\n    },\n    {\n      title: '评分成功/失败数',\n      dataIndex: 'scoreSuccNum',\n      key: 'scoreSuccNum',\n      width: 150,\n      render: (record, row) => {\n        return (\n          <div>\n            <p>\n              {row.scoreSuccNum}/{row.scoreFailNum}\n            </p>\n          </div>\n        )\n      },\n    },\n    {\n      title: '操作',\n      dataIndex: 'cz',\n      key: 'cz',\n      width: 150,\n      render: (text, record, index) => {\n        return (\n          <>\n            {record.uploadFailNum === '-' ? (\n              <Button type=\"link\">\n                <label style={{color: '#d7d7d7'}}>下载失败数据</label>\n              </Button>\n            ) : (\n              <Button type=\"link\" onClick={() => onFail(record)}>\n                <a>下载失败数据</a>\n              </Button>\n            )}\n\n            {record.scoreFailNum === '-' ? (\n              <Button type=\"link\" style={{color: '#d7d7d7'}}>\n                重新评分\n              </Button>\n            ) : (\n              <Button type=\"link\" onClick={() => onScore(record)}>\n                重新评分\n              </Button>\n            )}\n          </>\n        )\n      },\n    },\n  ]\n\n  const onShowSizeChange = (current, pageSize) => {\n    console.log(current, pageSize)\n    pageParams.pageSize = pageSize\n    setPageSize(pageSize)\n  }\n\n  const pagination = {\n    defaultCurrent: 1,\n    total: totalData.total,\n    pageSize: pageSize,\n    showQuickJumper: true,\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    current: pageParams.pageNum,\n    showTotal: (total) => {\n      return `共 ${total} 条记录`\n    },\n    onChange: (pageNumber) => {\n      pageParams.pageNum = pageNumber\n      onPage()\n    },\n  }\n  const onEditStatus = (record) => {\n    record.status = !record.status\n    setList([...list])\n  }\n  return (\n    <Table\n      rowKey={(record) => record.id}\n      dataSource={list}\n      columns={columns}\n      pagination={pagination}\n    />\n  )\n}\n\nexport default TableList\n"]},"metadata":{},"sourceType":"module"}