{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from '~/components/Layout';\nimport React, { useEffect, useState } from 'react';\nimport apicustomer from '~/api/customer';\nimport SearchForm from './SearchForm';\nimport TableList from './TableList';\nvar breadcrumbs = [{\n  text: '客户管理'\n}, {\n  text: '客户列表'\n}];\nvar pageParams = {\n  pageNum: 1,\n  pageSize: 10\n};\nvar values = {};\n\nfunction body(props) {\n  var _useState = useState([]),\n      totalData = _useState[0],\n      setTotalData = _useState[1];\n\n  var _useState2 = useState([]),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  onSearch();\n                } catch (error) {\n                  console.log(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var fetchList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var values,\n          _yield$apicustomer$ge,\n          _yield$apicustomer$ge2,\n          data,\n          code,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              values = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              _context2.prev = 1;\n              values.fiveLevelType = values.fiveLevelType || null;\n              _context2.next = 5;\n              return apicustomer.get_customer_list(_objectSpread(_objectSpread({}, pageParams), values));\n\n            case 5:\n              _yield$apicustomer$ge = _context2.sent;\n              _yield$apicustomer$ge2 = _yield$apicustomer$ge.data;\n              data = _yield$apicustomer$ge2.data;\n              code = _yield$apicustomer$ge2.code;\n\n              if (code === 0 && data) {\n                setTotalData(data);\n                setList(data.list);\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 12]]);\n    }));\n\n    return function fetchList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = value;\n              pageParams.pageNum = 1;\n              fetchList(_objectSpread({}, values));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onSearch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onPage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              fetchList(values);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onPage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    breadcrumbs: breadcrumbs\n  }, __jsx(_Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(SearchForm, {\n    onSearch: onSearch,\n    fetchList: fetchList\n  }), __jsx(TableList, {\n    list: list,\n    onPage: onPage,\n    pageParams: pageParams,\n    totalData: totalData\n  })));\n}\n\nbody.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5);\n}));\nexport default body;","map":null,"metadata":{},"sourceType":"module"}